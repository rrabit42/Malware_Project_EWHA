package com.google.firebase.auth.api.internal;

import android.app.Activity;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.internal.firebase_auth.zzcj;
import com.google.android.gms.internal.firebase_auth.zzct;
import com.google.android.gms.internal.firebase_auth.zzcz;
import com.google.android.gms.internal.firebase_auth.zzdg;
import com.google.firebase.FirebaseApp;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.auth.internal.zzw;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executor;

abstract class zzeo<ResultT, CallbackT> extends Object implements zzam<zzdq, ResultT> {
  protected FirebaseApp zzgm;
  
  protected String zzhn;
  
  protected final int zznb;
  
  @VisibleForTesting
  final zzep zznc = new zzep(this);
  
  protected FirebaseUser zznd;
  
  protected CallbackT zzne;
  
  protected zzw zznf;
  
  protected zzen<ResultT> zzng;
  
  protected final List<PhoneAuthProvider.OnVerificationStateChangedCallbacks> zznh = new ArrayList();
  
  private Activity zzni;
  
  protected Executor zznj;
  
  protected zzcz zznk;
  
  protected zzct zznl;
  
  protected zzcj zznm;
  
  protected zzdg zznn;
  
  protected String zzno;
  
  protected AuthCredential zznp;
  
  protected String zznq;
  
  protected boolean zznr;
  
  private boolean zzns;
  
  @VisibleForTesting
  boolean zznt;
  
  @VisibleForTesting
  private ResultT zznu;
  
  @VisibleForTesting
  private Status zznv;
  
  public zzeo(int paramInt) { this.zznb = paramInt; }
  
  private final void zzd(Status paramStatus) {
    zzw zzw1 = this.zznf;
    if (zzw1 != null)
      zzw1.zza(paramStatus); 
  }
  
  private final void zzdp() {
    zzdd();
    Preconditions.checkState(this.zzns, "no success or failure set on method implementation");
  }
  
  public final zzeo<ResultT, CallbackT> zza(FirebaseApp paramFirebaseApp) {
    this.zzgm = (FirebaseApp)Preconditions.checkNotNull(paramFirebaseApp, "firebaseApp cannot be null");
    return this;
  }
  
  public final zzeo<ResultT, CallbackT> zza(PhoneAuthProvider.OnVerificationStateChangedCallbacks paramOnVerificationStateChangedCallbacks, Activity paramActivity, Executor paramExecutor) {
    synchronized (this.zznh) {
      this.zznh.add((PhoneAuthProvider.OnVerificationStateChangedCallbacks)Preconditions.checkNotNull(paramOnVerificationStateChangedCallbacks));
      this.zzni = paramActivity;
      if (this.zzni != null)
        zza.zza(paramActivity, this.zznh); 
      this.zznj = (Executor)Preconditions.checkNotNull(paramExecutor);
      return this;
    } 
  }
  
  public final zzeo<ResultT, CallbackT> zza(zzw paramzzw) {
    this.zznf = (zzw)Preconditions.checkNotNull(paramzzw, "external failure callback cannot be null");
    return this;
  }
  
  public final zzeo<ResultT, CallbackT> zzb(CallbackT paramCallbackT) {
    this.zzne = Preconditions.checkNotNull(paramCallbackT, "external callback cannot be null");
    return this;
  }
  
  public final void zzc(Status paramStatus) {
    this.zzns = true;
    this.zznt = false;
    this.zznv = paramStatus;
    this.zzng.zza(null, paramStatus);
  }
  
  public final void zzc(ResultT paramResultT) {
    this.zzns = true;
    this.zznt = true;
    this.zznu = paramResultT;
    this.zzng.zza(paramResultT, null);
  }
  
  public final zzam<zzdq, ResultT> zzdc() {
    this.zznr = true;
    return this;
  }
  
  public abstract void zzdd();
  
  public final zzeo<ResultT, CallbackT> zzf(FirebaseUser paramFirebaseUser) {
    this.zznd = (FirebaseUser)Preconditions.checkNotNull(paramFirebaseUser, "firebaseUser cannot be null");
    return this;
  }
}
