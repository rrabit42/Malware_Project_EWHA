package com.google.android.gms.internal.ads;

import android.annotation.TargetApi;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.os.Looper;
import android.os.SystemClock;
import com.google.android.gms.common.util.PlatformVersion;
import java.io.InputStream;

final class zzacb extends Object implements zzalz<zzon> {
  zzacb(zzabv paramzzabv, boolean paramBoolean1, double paramDouble, boolean paramBoolean2, String paramString) {}
  
  @TargetApi(19)
  private final zzon zzd(InputStream paramInputStream) {
    BitmapFactory.Options options = new BitmapFactory.Options();
    options.inDensity = (int)(this.zzcaw * 160.0D);
    if (!this.zzcax)
      options.inPreferredConfig = Bitmap.Config.RGB_565; 
    long l1 = SystemClock.uptimeMillis();
    try {
      Bitmap bitmap = BitmapFactory.decodeStream(paramInputStream, null, options);
    } catch (Exception paramInputStream) {
      zzakb.zzb("Error grabbing image.", paramInputStream);
      paramInputStream = null;
    } 
    if (paramInputStream == null) {
      this.zzcal.zzd(2, this.zzcav);
      return null;
    } 
    long l2 = SystemClock.uptimeMillis();
    if (PlatformVersion.isAtLeastKitKat() && zzakb.zzqp()) {
      boolean bool;
      int i = paramInputStream.getWidth();
      int j = paramInputStream.getHeight();
      int k = paramInputStream.getAllocationByteCount();
      if (Looper.getMainLooper().getThread() == Thread.currentThread()) {
        bool = true;
      } else {
        bool = false;
      } 
      StringBuilder stringBuilder = new StringBuilder(108);
      stringBuilder.append("Decoded image w: ");
      stringBuilder.append(i);
      stringBuilder.append(" h:");
      stringBuilder.append(j);
      stringBuilder.append(" bytes: ");
      stringBuilder.append(k);
      stringBuilder.append(" time: ");
      stringBuilder.append(l2 - l1);
      stringBuilder.append(" on ui thread: ");
      stringBuilder.append(bool);
      zzakb.v(stringBuilder.toString());
    } 
    return new zzon(new BitmapDrawable(Resources.getSystem(), paramInputStream), Uri.parse(this.zzbwo), this.zzcaw);
  }
}
