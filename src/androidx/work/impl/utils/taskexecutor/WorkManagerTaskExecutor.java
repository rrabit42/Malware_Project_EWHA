package androidx.work.impl.utils.taskexecutor;

import android.os.Handler;
import android.os.Looper;
import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class WorkManagerTaskExecutor implements TaskExecutor {
  private final ExecutorService mBackgroundExecutor = Executors.newSingleThreadExecutor(this.mBackgroundThreadFactory);
  
  private final ThreadFactory mBackgroundThreadFactory = new Object(this);
  
  private final Executor mMainThreadExecutor = new Object(this);
  
  private final Handler mMainThreadHandler = new Handler(Looper.getMainLooper());
  
  public void executeOnBackgroundThread(Runnable paramRunnable) { this.mBackgroundExecutor.execute(paramRunnable); }
  
  public Executor getBackgroundExecutor() { return this.mBackgroundExecutor; }
  
  @NonNull
  public Thread getBackgroundExecutorThread() { return this.mCurrentBackgroundExecutorThread; }
  
  public Executor getMainThreadExecutor() { return this.mMainThreadExecutor; }
  
  public void postToMainThread(Runnable paramRunnable) { this.mMainThreadHandler.post(paramRunnable); }
}
