package com.google.android.gms.internal.ads;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;

final class zzbdo {
  private static final Class<?> zzdyf = zzafq();
  
  private static final zzbee<?, ?> zzdyg = zzas(false);
  
  private static final zzbee<?, ?> zzdyh = zzas(true);
  
  private static final zzbee<?, ?> zzdyi = new zzbeg();
  
  static <UT, UB> UB zza(int paramInt1, int paramInt2, UB paramUB, zzbee<UT, UB> paramzzbee) {
    UB uB = paramUB;
    if (paramUB == null)
      uB = (UB)paramzzbee.zzagb(); 
    paramzzbee.zza(uB, paramInt1, paramInt2);
    return uB;
  }
  
  static <UT, UB> UB zza(int paramInt, List<Integer> paramList, zzbbs<?> paramzzbbs, UB paramUB, zzbee<UT, UB> paramzzbee) {
    UB uB;
    if (paramzzbbs == null)
      return paramUB; 
    if (paramList instanceof java.util.RandomAccess) {
      int i = paramList.size();
      byte b1 = 0;
      byte b2 = 0;
      while (b1 < i) {
        int j = ((Integer)paramList.get(b1)).intValue();
        if (paramzzbbs.zzq(j) != null) {
          if (b1 != b2)
            paramList.set(b2, Integer.valueOf(j)); 
          b2++;
        } else {
          paramUB = (UB)zza(paramInt, j, paramUB, paramzzbee);
        } 
        b1++;
      } 
      uB = paramUB;
      if (b2 != i) {
        paramList.subList(b2, i).clear();
        return paramUB;
      } 
    } else {
      Iterator iterator = paramList.iterator();
      while (true) {
        uB = paramUB;
        if (iterator.hasNext()) {
          int i = ((Integer)iterator.next()).intValue();
          if (paramzzbbs.zzq(i) == null) {
            paramUB = (UB)zza(paramInt, i, paramUB, paramzzbee);
            iterator.remove();
          } 
          continue;
        } 
        break;
      } 
    } 
    return uB;
  }
  
  public static void zza(int paramInt, List<String> paramList, zzbey paramzzbey) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zza(paramInt, paramList); 
  }
  
  public static void zza(int paramInt, List<?> paramList, zzbey paramzzbey, zzbdm paramzzbdm) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zza(paramInt, paramList, paramzzbdm); 
  }
  
  public static void zza(int paramInt, List<Double> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzg(paramInt, paramList, paramBoolean); 
  }
  
  static <T, FT extends zzbbi<FT>> void zza(zzbbd<FT> paramzzbbd, T paramT1, T paramT2) {
    paramT2 = (T)paramzzbbd.zzm(paramT2);
    if (!paramT2.isEmpty())
      paramzzbbd.zzn(paramT1).zza(paramT2); 
  }
  
  static <T> void zza(zzbcp paramzzbcp, T paramT1, T paramT2, long paramLong) { zzbek.zza(paramT1, paramLong, paramzzbcp.zzb(zzbek.zzp(paramT1, paramLong), zzbek.zzp(paramT2, paramLong))); }
  
  static <T, UT, UB> void zza(zzbee<UT, UB> paramzzbee, T paramT1, T paramT2) { paramzzbee.zze(paramT1, paramzzbee.zzg(paramzzbee.zzac(paramT1), paramzzbee.zzac(paramT2))); }
  
  static int zzaf(List<Long> paramList) {
    zzbci zzbci;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbci) {
      zzbci = (zzbci)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzp(zzbci.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzp(((Long)zzbci.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  public static zzbee<?, ?> zzafn() { return zzdyg; }
  
  public static zzbee<?, ?> zzafo() { return zzdyh; }
  
  public static zzbee<?, ?> zzafp() { return zzdyi; }
  
  private static Class<?> zzafq() {
    try {
      return Class.forName("com.google.protobuf.GeneratedMessage");
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  private static Class<?> zzafr() {
    try {
      return Class.forName("com.google.protobuf.UnknownFieldSetSchema");
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  static int zzag(List<Long> paramList) {
    zzbci zzbci;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbci) {
      zzbci = (zzbci)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzq(zzbci.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzq(((Long)zzbci.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzah(List<Long> paramList) {
    zzbci zzbci;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbci) {
      zzbci = (zzbci)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzr(zzbci.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzr(((Long)zzbci.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzai(List<Integer> paramList) {
    zzbbp zzbbp;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbbp) {
      zzbbp = (zzbbp)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcj(zzbbp.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcj(((Integer)zzbbp.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzaj(List<Integer> paramList) {
    zzbbp zzbbp;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbbp) {
      zzbbp = (zzbbp)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzce(zzbbp.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzce(((Integer)zzbbp.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzak(List<Integer> paramList) {
    zzbbp zzbbp;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbbp) {
      zzbbp = (zzbbp)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcf(zzbbp.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcf(((Integer)zzbbp.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzal(List<Integer> paramList) {
    zzbbp zzbbp;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzbbp) {
      zzbbp = (zzbbp)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcg(zzbbp.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzbav.zzcg(((Integer)zzbbp.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzam(List<?> paramList) { return paramList.size() << 2; }
  
  static int zzan(List<?> paramList) { return paramList.size() << 3; }
  
  static int zzao(List<?> paramList) { return paramList.size(); }
  
  private static zzbee<?, ?> zzas(boolean paramBoolean) {
    try {
      Class clazz = zzafr();
      return (clazz == null) ? null : (zzbee)clazz.getConstructor(new Class[] { boolean.class }).newInstance(new Object[] { Boolean.valueOf(paramBoolean) });
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  public static void zzb(int paramInt, List<zzbah> paramList, zzbey paramzzbey) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzb(paramInt, paramList); 
  }
  
  public static void zzb(int paramInt, List<?> paramList, zzbey paramzzbey, zzbdm paramzzbdm) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzb(paramInt, paramList, paramzzbdm); 
  }
  
  public static void zzb(int paramInt, List<Float> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzf(paramInt, paramList, paramBoolean); 
  }
  
  static int zzc(int paramInt, Object paramObject, zzbdm paramzzbdm) { return (paramObject instanceof zzbcb) ? zzbav.zza(paramInt, (zzbcb)paramObject) : zzbav.zzb(paramInt, (zzbcu)paramObject, paramzzbdm); }
  
  static int zzc(int paramInt, List<?> paramList) {
    zzbcd zzbcd;
    int j = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (j == 0)
      return 0; 
    int i = zzbav.zzcd(paramInt) * j;
    paramInt = i;
    if (paramList instanceof zzbcd) {
      zzbcd = (zzbcd)paramList;
      paramInt = i;
      b1 = b2;
      while (true) {
        i = paramInt;
        if (b1 < j) {
          Object object = zzbcd.zzcp(b1);
          if (object instanceof zzbah) {
            i = zzbav.zzao((zzbah)object);
          } else {
            i = zzbav.zzeo((String)object);
          } 
          paramInt += i;
          b1++;
          continue;
        } 
        break;
      } 
    } else {
      while (true) {
        i = paramInt;
        if (b1 < j) {
          Object object = zzbcd.get(b1);
          if (object instanceof zzbah) {
            i = zzbav.zzao((zzbah)object);
          } else {
            i = zzbav.zzeo((String)object);
          } 
          paramInt += i;
          b1++;
          continue;
        } 
        break;
      } 
    } 
    return i;
  }
  
  static int zzc(int paramInt, List<?> paramList, zzbdm paramzzbdm) {
    int k = paramList.size();
    int j = 0;
    if (k == 0)
      return 0; 
    int i = zzbav.zzcd(paramInt) * k;
    for (paramInt = j; paramInt < k; paramInt++) {
      Object object = paramList.get(paramInt);
      if (object instanceof zzbcb) {
        j = zzbav.zza((zzbcb)object);
      } else {
        j = zzbav.zza((zzbcu)object, paramzzbdm);
      } 
      i += j;
    } 
    return i;
  }
  
  public static void zzc(int paramInt, List<Long> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzc(paramInt, paramList, paramBoolean); 
  }
  
  static int zzd(int paramInt, List<zzbah> paramList) {
    int j = paramList.size();
    int i = 0;
    if (j == 0)
      return 0; 
    j *= zzbav.zzcd(paramInt);
    paramInt = i;
    i = j;
    while (paramInt < paramList.size()) {
      i += zzbav.zzao((zzbah)paramList.get(paramInt));
      paramInt++;
    } 
    return i;
  }
  
  static int zzd(int paramInt, List<zzbcu> paramList, zzbdm paramzzbdm) {
    int j = paramList.size();
    byte b = 0;
    if (j == 0)
      return 0; 
    int i = 0;
    while (b < j) {
      i += zzbav.zzc(paramInt, (zzbcu)paramList.get(b), paramzzbdm);
      b++;
    } 
    return i;
  }
  
  public static void zzd(int paramInt, List<Long> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzd(paramInt, paramList, paramBoolean); 
  }
  
  static boolean zzd(Object paramObject1, Object paramObject2) { return (paramObject1 == paramObject2 || (paramObject1 != null && paramObject1.equals(paramObject2))); }
  
  public static void zze(int paramInt, List<Long> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzn(paramInt, paramList, paramBoolean); 
  }
  
  public static boolean zze(int paramInt1, int paramInt2, int paramInt3) {
    if (paramInt2 < 40)
      return true; 
    long l1 = paramInt2;
    long l2 = paramInt1;
    long l3 = paramInt3;
    return (l1 - l2 + 1L + 9L <= 2L * l3 + 3L + (l3 + 3L) * 3L);
  }
  
  public static void zzf(int paramInt, List<Long> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zze(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzf(Class<?> paramClass) {
    if (!zzbbo.class.isAssignableFrom(paramClass)) {
      Class clazz = zzdyf;
      if (clazz != null) {
        if (clazz.isAssignableFrom(paramClass))
          return; 
        throw new IllegalArgumentException("Message classes must extend GeneratedMessage or GeneratedMessageLite");
      } 
    } 
  }
  
  public static void zzg(int paramInt, List<Long> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzl(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzh(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zza(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzi(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzj(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzj(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzm(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzk(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzb(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzl(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzk(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzm(int paramInt, List<Integer> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzh(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzn(int paramInt, List<Boolean> paramList, zzbey paramzzbey, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzbey.zzi(paramInt, paramList, paramBoolean); 
  }
  
  static int zzo(int paramInt, List<Long> paramList, boolean paramBoolean) { return (paramList.size() == 0) ? 0 : (zzaf(paramList) + paramList.size() * zzbav.zzcd(paramInt)); }
  
  static int zzp(int paramInt, List<Long> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzag(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzq(int paramInt, List<Long> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzah(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzr(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzai(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzs(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzaj(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzt(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzak(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzu(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzal(paramList) + i * zzbav.zzcd(paramInt));
  }
  
  static int zzv(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzbav.zzt(paramInt, 0));
  }
  
  static int zzw(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzbav.zzg(paramInt, 0L));
  }
  
  static int zzx(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzbav.zzg(paramInt, true));
  }
}
