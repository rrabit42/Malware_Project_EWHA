package com.android.volley.toolbox;

import android.os.SystemClock;
import com.android.volley.Cache;
import com.android.volley.Network;
import com.android.volley.NetworkResponse;
import com.android.volley.Request;
import com.android.volley.RetryPolicy;
import com.android.volley.VolleyLog;
import com.android.volley.error.ServerError;
import com.android.volley.error.VolleyError;
import java.io.IOException;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.StatusLine;
import org.apache.http.impl.cookie.DateUtils;

public class BasicNetwork implements Network {
  protected static final boolean DEBUG = VolleyLog.DEBUG;
  
  private static int DEFAULT_POOL_SIZE;
  
  private static int SLOW_REQUEST_THRESHOLD_MS = 3000;
  
  protected final HttpStack mHttpStack;
  
  protected final ByteArrayPool mPool;
  
  static  {
    DEFAULT_POOL_SIZE = 4096;
  }
  
  public BasicNetwork(HttpStack paramHttpStack) { this(paramHttpStack, new ByteArrayPool(DEFAULT_POOL_SIZE)); }
  
  public BasicNetwork(HttpStack paramHttpStack, ByteArrayPool paramByteArrayPool) {
    this.mHttpStack = paramHttpStack;
    this.mPool = paramByteArrayPool;
  }
  
  private void addCacheHeaders(Map<String, String> paramMap, Cache.Entry paramEntry) {
    if (paramEntry == null)
      return; 
    if (paramEntry.etag != null)
      paramMap.put("If-None-Match", paramEntry.etag); 
    if (paramEntry.lastModified > 0L)
      paramMap.put("If-Modified-Since", DateUtils.formatDate(new Date(paramEntry.lastModified))); 
  }
  
  private static void attemptRetryOnException(String paramString, Request<?> paramRequest, VolleyError paramVolleyError) throws VolleyError {
    RetryPolicy retryPolicy = paramRequest.getRetryPolicy();
    int i = paramRequest.getTimeoutMs();
    try {
      retryPolicy.retry(paramVolleyError);
      paramRequest.addMarker(String.format("%s-retry [timeout=%s]", new Object[] { paramString, Integer.valueOf(i) }));
      return;
    } catch (VolleyError paramVolleyError) {
      paramRequest.addMarker(String.format("%s-timeout-giveup [timeout=%s]", new Object[] { paramString, Integer.valueOf(i) }));
      throw paramVolleyError;
    } 
  }
  
  private static Map<String, String> convertHeaders(Header[] paramArrayOfHeader) {
    TreeMap treeMap = new TreeMap(String.CASE_INSENSITIVE_ORDER);
    for (byte b = 0; b < paramArrayOfHeader.length; b++)
      treeMap.put(paramArrayOfHeader[b].getName(), paramArrayOfHeader[b].getValue()); 
    return treeMap;
  }
  
  private byte[] entityToBytes(Request<?> paramRequest, HttpEntity paramHttpEntity) throws IOException, ServerError {
    byte[] arrayOfByte1;
    poolingByteArrayOutputStream = new PoolingByteArrayOutputStream(this.mPool, (int)paramHttpEntity.getContentLength());
    long l = (int)paramHttpEntity.getContentLength();
  }
  
  private void logSlowRequests(long paramLong, Request<?> paramRequest, byte[] paramArrayOfByte, StatusLine paramStatusLine) {
    if (DEBUG || paramLong > SLOW_REQUEST_THRESHOLD_MS) {
      String str;
      if (paramArrayOfByte != null) {
        str = Integer.valueOf(paramArrayOfByte.length);
      } else {
        str = "null";
      } 
      VolleyLog.d("HTTP response for request=<%s> [lifetime=%d], [size=%s], [rc=%d], [retryCount=%s]", new Object[] { paramRequest, Long.valueOf(paramLong), str, Integer.valueOf(paramStatusLine.getStatusCode()), Integer.valueOf(paramRequest.getRetryPolicy().getCurrentRetryCount()) });
    } 
  }
  
  protected void logError(String paramString1, String paramString2, long paramLong) { VolleyLog.v("HTTP ERROR(%s) %d ms to fetch %s", new Object[] { paramString1, Long.valueOf(SystemClock.elapsedRealtime() - paramLong), paramString2 }); }
  
  public NetworkResponse performRequest(Request<?> paramRequest) throws VolleyError { // Byte code:
    //   0: invokestatic elapsedRealtime : ()J
    //   3: lstore_3
    //   4: invokestatic emptyMap : ()Ljava/util/Map;
    //   7: astore #8
    //   9: new java/util/HashMap
    //   12: dup
    //   13: invokespecial <init> : ()V
    //   16: astore #7
    //   18: aload_0
    //   19: aload #7
    //   21: aload_1
    //   22: invokevirtual getCacheEntry : ()Lcom/android/volley/Cache$Entry;
    //   25: invokespecial addCacheHeaders : (Ljava/util/Map;Lcom/android/volley/Cache$Entry;)V
    //   28: aload_0
    //   29: getfield mHttpStack : Lcom/android/volley/toolbox/HttpStack;
    //   32: aload_1
    //   33: aload #7
    //   35: invokeinterface performRequest : (Lcom/android/volley/Request;Ljava/util/Map;)Lorg/apache/http/HttpResponse;
    //   40: astore #10
    //   42: aload #10
    //   44: invokeinterface getStatusLine : ()Lorg/apache/http/StatusLine;
    //   49: astore #9
    //   51: aload #9
    //   53: invokeinterface getStatusCode : ()I
    //   58: istore_2
    //   59: aload #10
    //   61: invokeinterface getAllHeaders : ()[Lorg/apache/http/Header;
    //   66: invokestatic convertHeaders : ([Lorg/apache/http/Header;)Ljava/util/Map;
    //   69: astore #7
    //   71: iload_2
    //   72: sipush #304
    //   75: if_icmpne -> 168
    //   78: aload_1
    //   79: invokevirtual getCacheEntry : ()Lcom/android/volley/Cache$Entry;
    //   82: astore #8
    //   84: aload #8
    //   86: ifnonnull -> 109
    //   89: new com/android/volley/NetworkResponse
    //   92: dup
    //   93: sipush #304
    //   96: aconst_null
    //   97: aload #7
    //   99: iconst_1
    //   100: invokestatic elapsedRealtime : ()J
    //   103: lload_3
    //   104: lsub
    //   105: invokespecial <init> : (I[BLjava/util/Map;ZJ)V
    //   108: areturn
    //   109: aload #8
    //   111: getfield responseHeaders : Ljava/util/Map;
    //   114: aload #7
    //   116: invokeinterface putAll : (Ljava/util/Map;)V
    //   121: new com/android/volley/NetworkResponse
    //   124: dup
    //   125: sipush #304
    //   128: aload #8
    //   130: getfield data : [B
    //   133: aload #8
    //   135: getfield responseHeaders : Ljava/util/Map;
    //   138: iconst_1
    //   139: invokestatic elapsedRealtime : ()J
    //   142: lload_3
    //   143: lsub
    //   144: invokespecial <init> : (I[BLjava/util/Map;ZJ)V
    //   147: astore #8
    //   149: aload #8
    //   151: areturn
    //   152: astore #11
    //   154: aconst_null
    //   155: astore #8
    //   157: aload #7
    //   159: astore #9
    //   161: aload #11
    //   163: astore #7
    //   165: goto -> 323
    //   168: aload #10
    //   170: invokeinterface getEntity : ()Lorg/apache/http/HttpEntity;
    //   175: astore #8
    //   177: aload #8
    //   179: ifnull -> 199
    //   182: aload_0
    //   183: aload_1
    //   184: aload #10
    //   186: invokeinterface getEntity : ()Lorg/apache/http/HttpEntity;
    //   191: invokespecial entityToBytes : (Lcom/android/volley/Request;Lorg/apache/http/HttpEntity;)[B
    //   194: astore #8
    //   196: goto -> 204
    //   199: iconst_0
    //   200: newarray byte
    //   202: astore #8
    //   204: aload_0
    //   205: invokestatic elapsedRealtime : ()J
    //   208: lload_3
    //   209: lsub
    //   210: aload_1
    //   211: aload #8
    //   213: aload #9
    //   215: invokespecial logSlowRequests : (JLcom/android/volley/Request;[BLorg/apache/http/StatusLine;)V
    //   218: iload_2
    //   219: sipush #200
    //   222: if_icmplt -> 255
    //   225: iload_2
    //   226: sipush #299
    //   229: if_icmpgt -> 255
    //   232: invokestatic elapsedRealtime : ()J
    //   235: lstore #5
    //   237: new com/android/volley/NetworkResponse
    //   240: dup
    //   241: iload_2
    //   242: aload #8
    //   244: aload #7
    //   246: iconst_0
    //   247: lload #5
    //   249: lload_3
    //   250: lsub
    //   251: invokespecial <init> : (I[BLjava/util/Map;ZJ)V
    //   254: areturn
    //   255: new java/io/IOException
    //   258: dup
    //   259: invokespecial <init> : ()V
    //   262: athrow
    //   263: astore #9
    //   265: goto -> 270
    //   268: astore #9
    //   270: aload #7
    //   272: astore #11
    //   274: aload #9
    //   276: astore #7
    //   278: aload #11
    //   280: astore #9
    //   282: goto -> 323
    //   285: astore #9
    //   287: aload #7
    //   289: astore #8
    //   291: aload #9
    //   293: astore #7
    //   295: goto -> 300
    //   298: astore #7
    //   300: aload #8
    //   302: astore #9
    //   304: aconst_null
    //   305: astore #8
    //   307: goto -> 323
    //   310: astore #7
    //   312: aload #8
    //   314: astore #9
    //   316: aconst_null
    //   317: astore #10
    //   319: aload #10
    //   321: astore #8
    //   323: aload #10
    //   325: ifnull -> 462
    //   328: aload #10
    //   330: invokeinterface getStatusLine : ()Lorg/apache/http/StatusLine;
    //   335: invokeinterface getStatusCode : ()I
    //   340: istore_2
    //   341: ldc_w 'Unexpected response code %d for %s'
    //   344: iconst_2
    //   345: anewarray java/lang/Object
    //   348: dup
    //   349: iconst_0
    //   350: iload_2
    //   351: invokestatic valueOf : (I)Ljava/lang/Integer;
    //   354: aastore
    //   355: dup
    //   356: iconst_1
    //   357: aload_1
    //   358: invokevirtual getUrl : ()Ljava/lang/String;
    //   361: aastore
    //   362: invokestatic e : (Ljava/lang/String;[Ljava/lang/Object;)V
    //   365: aload #8
    //   367: ifnull -> 453
    //   370: new com/android/volley/NetworkResponse
    //   373: dup
    //   374: iload_2
    //   375: aload #8
    //   377: aload #9
    //   379: iconst_0
    //   380: invokestatic elapsedRealtime : ()J
    //   383: lload_3
    //   384: lsub
    //   385: invokespecial <init> : (I[BLjava/util/Map;ZJ)V
    //   388: astore #7
    //   390: iload_2
    //   391: sipush #500
    //   394: if_icmpge -> 443
    //   397: iload_2
    //   398: sipush #401
    //   401: if_icmpeq -> 424
    //   404: iload_2
    //   405: sipush #403
    //   408: if_icmpne -> 414
    //   411: goto -> 424
    //   414: new com/android/volley/error/VolleyError
    //   417: dup
    //   418: aload #7
    //   420: invokespecial <init> : (Lcom/android/volley/NetworkResponse;)V
    //   423: athrow
    //   424: ldc_w 'auth'
    //   427: aload_1
    //   428: new com/android/volley/error/AuthFailureError
    //   431: dup
    //   432: aload #7
    //   434: invokespecial <init> : (Lcom/android/volley/NetworkResponse;)V
    //   437: invokestatic attemptRetryOnException : (Ljava/lang/String;Lcom/android/volley/Request;Lcom/android/volley/error/VolleyError;)V
    //   440: goto -> 4
    //   443: new com/android/volley/error/ServerError
    //   446: dup
    //   447: aload #7
    //   449: invokespecial <init> : (Lcom/android/volley/NetworkResponse;)V
    //   452: athrow
    //   453: new com/android/volley/error/NetworkError
    //   456: dup
    //   457: aconst_null
    //   458: invokespecial <init> : (Lcom/android/volley/NetworkResponse;)V
    //   461: athrow
    //   462: new com/android/volley/error/NoConnectionError
    //   465: dup
    //   466: new com/android/volley/NetworkResponse
    //   469: dup
    //   470: iconst_m1
    //   471: aconst_null
    //   472: aload #9
    //   474: iconst_0
    //   475: invokestatic elapsedRealtime : ()J
    //   478: lload_3
    //   479: lsub
    //   480: invokespecial <init> : (I[BLjava/util/Map;ZJ)V
    //   483: aload #7
    //   485: invokespecial <init> : (Lcom/android/volley/NetworkResponse;Ljava/lang/Throwable;)V
    //   488: athrow
    //   489: astore #7
    //   491: new java/lang/StringBuilder
    //   494: dup
    //   495: invokespecial <init> : ()V
    //   498: astore #8
    //   500: aload #8
    //   502: ldc_w 'Bad URL '
    //   505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   508: pop
    //   509: aload #8
    //   511: aload_1
    //   512: invokevirtual getUrl : ()Ljava/lang/String;
    //   515: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   518: pop
    //   519: new java/lang/RuntimeException
    //   522: dup
    //   523: aload #8
    //   525: invokevirtual toString : ()Ljava/lang/String;
    //   528: aload #7
    //   530: invokespecial <init> : (Ljava/lang/String;Ljava/lang/Throwable;)V
    //   533: athrow
    //   534: ldc_w 'connection'
    //   537: aload_1
    //   538: new com/android/volley/error/TimeoutError
    //   541: dup
    //   542: invokespecial <init> : ()V
    //   545: invokestatic attemptRetryOnException : (Ljava/lang/String;Lcom/android/volley/Request;Lcom/android/volley/error/VolleyError;)V
    //   548: goto -> 4
    //   551: ldc_w 'socket'
    //   554: aload_1
    //   555: new com/android/volley/error/TimeoutError
    //   558: dup
    //   559: invokespecial <init> : ()V
    //   562: invokestatic attemptRetryOnException : (Ljava/lang/String;Lcom/android/volley/Request;Lcom/android/volley/error/VolleyError;)V
    //   565: goto -> 4
    //   568: astore #7
    //   570: goto -> 551
    //   573: astore #7
    //   575: goto -> 534
    // Exception table:
    //   from	to	target	type
    //   9	42	568	java/net/SocketTimeoutException
    //   9	42	573	org/apache/http/conn/ConnectTimeoutException
    //   9	42	489	java/net/MalformedURLException
    //   9	42	310	java/io/IOException
    //   42	71	568	java/net/SocketTimeoutException
    //   42	71	573	org/apache/http/conn/ConnectTimeoutException
    //   42	71	489	java/net/MalformedURLException
    //   42	71	298	java/io/IOException
    //   78	84	568	java/net/SocketTimeoutException
    //   78	84	573	org/apache/http/conn/ConnectTimeoutException
    //   78	84	489	java/net/MalformedURLException
    //   78	84	152	java/io/IOException
    //   89	109	568	java/net/SocketTimeoutException
    //   89	109	573	org/apache/http/conn/ConnectTimeoutException
    //   89	109	489	java/net/MalformedURLException
    //   89	109	152	java/io/IOException
    //   109	149	568	java/net/SocketTimeoutException
    //   109	149	573	org/apache/http/conn/ConnectTimeoutException
    //   109	149	489	java/net/MalformedURLException
    //   109	149	152	java/io/IOException
    //   168	177	568	java/net/SocketTimeoutException
    //   168	177	573	org/apache/http/conn/ConnectTimeoutException
    //   168	177	489	java/net/MalformedURLException
    //   168	177	285	java/io/IOException
    //   182	196	568	java/net/SocketTimeoutException
    //   182	196	573	org/apache/http/conn/ConnectTimeoutException
    //   182	196	489	java/net/MalformedURLException
    //   182	196	152	java/io/IOException
    //   199	204	568	java/net/SocketTimeoutException
    //   199	204	573	org/apache/http/conn/ConnectTimeoutException
    //   199	204	489	java/net/MalformedURLException
    //   199	204	285	java/io/IOException
    //   204	218	568	java/net/SocketTimeoutException
    //   204	218	573	org/apache/http/conn/ConnectTimeoutException
    //   204	218	489	java/net/MalformedURLException
    //   204	218	268	java/io/IOException
    //   232	237	568	java/net/SocketTimeoutException
    //   232	237	573	org/apache/http/conn/ConnectTimeoutException
    //   232	237	489	java/net/MalformedURLException
    //   232	237	268	java/io/IOException
    //   237	255	568	java/net/SocketTimeoutException
    //   237	255	573	org/apache/http/conn/ConnectTimeoutException
    //   237	255	489	java/net/MalformedURLException
    //   237	255	263	java/io/IOException
    //   255	263	568	java/net/SocketTimeoutException
    //   255	263	573	org/apache/http/conn/ConnectTimeoutException
    //   255	263	489	java/net/MalformedURLException
    //   255	263	263	java/io/IOException }
}
