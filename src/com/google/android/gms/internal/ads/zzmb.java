package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.RemoteException;
import com.google.android.gms.ads.reward.RewardedVideoAd;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.dynamic.ObjectWrapper;
import javax.annotation.concurrent.GuardedBy;

@zzadh
public final class zzmb {
  private static final Object sLock = new Object();
  
  @GuardedBy("sLock")
  private static zzmb zzate;
  
  private zzlj zzatf;
  
  private RewardedVideoAd zzatg;
  
  public static zzmb zziv() {
    synchronized (sLock) {
      if (zzate == null)
        zzate = new zzmb(); 
      return zzate;
    } 
  }
  
  public final RewardedVideoAd getRewardedVideoAdInstance(Context paramContext) {
    synchronized (sLock) {
      if (this.zzatg != null)
        return this.zzatg; 
      zzxm zzxm = new zzxm();
      this.zzatg = new zzahm(null, (zzagz)zzjr.zza(null, false, new zzjz(zzkb.zzig(), null, zzxm)));
      return this.zzatg;
    } 
  }
  
  public final void openDebugMenu(Context paramContext, String paramString) {
    boolean bool;
    if (this.zzatf != null) {
      bool = true;
    } else {
      bool = false;
    } 
    Preconditions.checkState(bool, "MobileAds.initialize() must be called prior to opening debug menu.");
    try {
      this.zzatf.zzb(ObjectWrapper.wrap(paramContext), paramString);
      return;
    } catch (RemoteException paramContext) {
      zzane.zzb("Unable to open debug menu.", paramContext);
      return;
    } 
  }
  
  public final void setAppMuted(boolean paramBoolean) {
    boolean bool;
    if (this.zzatf != null) {
      bool = true;
    } else {
      bool = false;
    } 
    Preconditions.checkState(bool, "MobileAds.initialize() must be called prior to setting app muted state.");
    try {
      this.zzatf.setAppMuted(paramBoolean);
      return;
    } catch (RemoteException remoteException) {
      zzane.zzb("Unable to set app mute state.", remoteException);
      return;
    } 
  }
  
  public final void setAppVolume(float paramFloat) {
    boolean bool;
    boolean bool1 = true;
    if (0.0F <= paramFloat && paramFloat <= 1.0F) {
      bool = true;
    } else {
      bool = false;
    } 
    Preconditions.checkArgument(bool, "The app volume must be a value between 0 and 1 inclusive.");
    if (this.zzatf != null) {
      bool = bool1;
    } else {
      bool = false;
    } 
    Preconditions.checkState(bool, "MobileAds.initialize() must be called prior to setting the app volume.");
    try {
      this.zzatf.setAppVolume(paramFloat);
      return;
    } catch (RemoteException remoteException) {
      zzane.zzb("Unable to set app volume.", remoteException);
      return;
    } 
  }
  
  public final void zza(Context paramContext, String paramString, zzmd paramzzmd) {
    synchronized (sLock) {
      if (this.zzatf != null)
        return; 
      if (paramContext != null) {
        try {
          this.zzatf = (zzlj)zzjr.zza(paramContext, false, new zzjw(zzkb.zzig(), paramContext));
          this.zzatf.zza();
          if (paramString != null)
            this.zzatf.zza(paramString, ObjectWrapper.wrap(new zzmc(this, paramContext))); 
        } catch (RemoteException paramContext) {
          zzane.zzc("MobileAdsSettingManager initialization failed", paramContext);
        } 
        return;
      } 
      throw new IllegalArgumentException("Context cannot be null.");
    } 
  }
  
  public final float zzdo() {
    zzlj1 = this.zzatf;
    if (zzlj1 == null)
      return 1.0F; 
    try {
      return zzlj1.zzdo();
    } catch (RemoteException zzlj1) {
      zzane.zzb("Unable to get app volume.", zzlj1);
      return 1.0F;
    } 
  }
  
  public final boolean zzdp() {
    zzlj1 = this.zzatf;
    if (zzlj1 == null)
      return false; 
    try {
      return zzlj1.zzdp();
    } catch (RemoteException zzlj1) {
      zzane.zzb("Unable to get app mute state.", zzlj1);
      return false;
    } 
  }
}
