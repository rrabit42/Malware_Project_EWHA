package com.google.android.gms.auth.api.signin;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.support.annotation.NonNull;
import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.internal.zzh;
import com.google.android.gms.common.api.GoogleApi;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.internal.ApiExceptionMapper;
import com.google.android.gms.common.internal.PendingResultUtil;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.tasks.Task;

public class GoogleSignInClient extends GoogleApi<GoogleSignInOptions> {
  private static final zzc zzar = new zzc(null);
  
  @VisibleForTesting
  private static int zzas = zzd.zzau;
  
  GoogleSignInClient(@NonNull Activity paramActivity, GoogleSignInOptions paramGoogleSignInOptions) { super(paramActivity, Auth.GOOGLE_SIGN_IN_API, paramGoogleSignInOptions, new ApiExceptionMapper()); }
  
  GoogleSignInClient(@NonNull Context paramContext, GoogleSignInOptions paramGoogleSignInOptions) { super(paramContext, Auth.GOOGLE_SIGN_IN_API, paramGoogleSignInOptions, new ApiExceptionMapper()); }
  
  private final int zze() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient.zzas : I
    //   5: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient$zzd.zzau : I
    //   8: if_icmpne -> 75
    //   11: aload_0
    //   12: invokevirtual getApplicationContext : ()Landroid/content/Context;
    //   15: astore_2
    //   16: invokestatic getInstance : ()Lcom/google/android/gms/common/GoogleApiAvailability;
    //   19: astore_3
    //   20: aload_3
    //   21: aload_2
    //   22: ldc 12451000
    //   24: invokevirtual isGooglePlayServicesAvailable : (Landroid/content/Context;I)I
    //   27: istore_1
    //   28: iload_1
    //   29: ifne -> 41
    //   32: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient$zzd.zzax : I
    //   35: putstatic com/google/android/gms/auth/api/signin/GoogleSignInClient.zzas : I
    //   38: goto -> 75
    //   41: aload_3
    //   42: aload_2
    //   43: iload_1
    //   44: aconst_null
    //   45: invokevirtual getErrorResolutionIntent : (Landroid/content/Context;ILjava/lang/String;)Landroid/content/Intent;
    //   48: ifnonnull -> 69
    //   51: aload_2
    //   52: ldc 'com.google.android.gms.auth.api.fallback'
    //   54: invokestatic getLocalVersion : (Landroid/content/Context;Ljava/lang/String;)I
    //   57: ifeq -> 69
    //   60: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient$zzd.zzaw : I
    //   63: putstatic com/google/android/gms/auth/api/signin/GoogleSignInClient.zzas : I
    //   66: goto -> 75
    //   69: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient$zzd.zzav : I
    //   72: putstatic com/google/android/gms/auth/api/signin/GoogleSignInClient.zzas : I
    //   75: getstatic com/google/android/gms/auth/api/signin/GoogleSignInClient.zzas : I
    //   78: istore_1
    //   79: aload_0
    //   80: monitorexit
    //   81: iload_1
    //   82: ireturn
    //   83: astore_2
    //   84: aload_0
    //   85: monitorexit
    //   86: aload_2
    //   87: athrow
    // Exception table:
    //   from	to	target	type
    //   2	28	83	finally
    //   32	38	83	finally
    //   41	66	83	finally
    //   69	75	83	finally
    //   75	79	83	finally }
  
  @NonNull
  public Intent getSignInIntent() {
    Context context = getApplicationContext();
    int i = zzc.zzat[zze() - 1];
    return (i != 1) ? ((i != 2) ? zzh.zze(context, (GoogleSignInOptions)getApiOptions()) : zzh.zzc(context, (GoogleSignInOptions)getApiOptions())) : zzh.zzd(context, (GoogleSignInOptions)getApiOptions());
  }
  
  public Task<Void> revokeAccess() {
    boolean bool;
    GoogleApiClient googleApiClient = asGoogleApiClient();
    Context context = getApplicationContext();
    if (zze() == zzd.zzaw) {
      bool = true;
    } else {
      bool = false;
    } 
    return PendingResultUtil.toVoidTask(zzh.zzd(googleApiClient, context, bool));
  }
  
  public Task<Void> signOut() {
    boolean bool;
    GoogleApiClient googleApiClient = asGoogleApiClient();
    Context context = getApplicationContext();
    if (zze() == zzd.zzaw) {
      bool = true;
    } else {
      bool = false;
    } 
    return PendingResultUtil.toVoidTask(zzh.zzc(googleApiClient, context, bool));
  }
  
  public Task<GoogleSignInAccount> silentSignIn() {
    boolean bool;
    GoogleApiClient googleApiClient = asGoogleApiClient();
    Context context = getApplicationContext();
    GoogleSignInOptions googleSignInOptions = (GoogleSignInOptions)getApiOptions();
    if (zze() == zzd.zzaw) {
      bool = true;
    } else {
      bool = false;
    } 
    return PendingResultUtil.toTask(zzh.zzc(googleApiClient, context, googleSignInOptions, bool), zzar);
  }
}
