package com.bumptech.glide.request.animation;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.view.animation.Animation;

public class DrawableCrossFadeFactory<T extends Drawable> extends Object implements GlideAnimationFactory<T> {
  private static final int DEFAULT_DURATION_MS = 300;
  
  private final ViewAnimationFactory<T> animationFactory;
  
  private final int duration;
  
  private DrawableCrossFadeViewAnimation<T> firstResourceAnimation;
  
  private DrawableCrossFadeViewAnimation<T> secondResourceAnimation;
  
  public DrawableCrossFadeFactory() { this(300); }
  
  public DrawableCrossFadeFactory(int paramInt) { this(new ViewAnimationFactory(new DefaultAnimationFactory(paramInt)), paramInt); }
  
  public DrawableCrossFadeFactory(Context paramContext, int paramInt1, int paramInt2) { this(new ViewAnimationFactory(paramContext, paramInt1), paramInt2); }
  
  public DrawableCrossFadeFactory(Animation paramAnimation, int paramInt) { this(new ViewAnimationFactory(paramAnimation), paramInt); }
  
  DrawableCrossFadeFactory(ViewAnimationFactory<T> paramViewAnimationFactory, int paramInt) {
    this.animationFactory = paramViewAnimationFactory;
    this.duration = paramInt;
  }
  
  private GlideAnimation<T> getFirstResourceAnimation() {
    if (this.firstResourceAnimation == null)
      this.firstResourceAnimation = new DrawableCrossFadeViewAnimation(this.animationFactory.build(false, true), this.duration); 
    return this.firstResourceAnimation;
  }
  
  private GlideAnimation<T> getSecondResourceAnimation() {
    if (this.secondResourceAnimation == null)
      this.secondResourceAnimation = new DrawableCrossFadeViewAnimation(this.animationFactory.build(false, false), this.duration); 
    return this.secondResourceAnimation;
  }
  
  public GlideAnimation<T> build(boolean paramBoolean1, boolean paramBoolean2) { return paramBoolean1 ? NoAnimation.get() : (paramBoolean2 ? getFirstResourceAnimation() : getSecondResourceAnimation()); }
}
