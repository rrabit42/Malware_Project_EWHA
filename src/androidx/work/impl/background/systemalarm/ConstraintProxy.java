package androidx.work.impl.background.systemalarm;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import androidx.work.Constraints;
import androidx.work.Logger;
import androidx.work.NetworkType;
import androidx.work.impl.model.WorkSpec;
import java.util.Iterator;
import java.util.List;

abstract class ConstraintProxy extends BroadcastReceiver {
  private static final String TAG = Logger.tagWithPrefix("ConstraintProxy");
  
  static void updateAll(Context paramContext, List<WorkSpec> paramList) {
    boolean bool6;
    boolean bool5;
    int i;
    boolean bool4;
    Iterator iterator = paramList.iterator();
    boolean bool3 = false;
    boolean bool2 = false;
    boolean bool1 = false;
    byte b = 0;
    while (true) {
      bool4 = bool3;
      bool5 = bool2;
      bool6 = bool1;
      i = b;
      if (iterator.hasNext()) {
        byte b1;
        Constraints constraints = ((WorkSpec)iterator.next()).constraints;
        bool4 = bool3 | constraints.requiresBatteryNotLow();
        bool5 = bool2 | constraints.requiresCharging();
        bool6 = bool1 | constraints.requiresStorageNotLow();
        if (constraints.getRequiredNetworkType() != NetworkType.NOT_REQUIRED) {
          b1 = 1;
        } else {
          b1 = 0;
        } 
        i = b | b1;
        bool3 = bool4;
        bool2 = bool5;
        bool1 = bool6;
        b = i;
        if (bool4) {
          bool3 = bool4;
          bool2 = bool5;
          bool1 = bool6;
          b = i;
          if (bool5) {
            bool3 = bool4;
            bool2 = bool5;
            bool1 = bool6;
            b = i;
            if (bool6) {
              bool3 = bool4;
              bool2 = bool5;
              bool1 = bool6;
              b = i;
              if (i != 0)
                break; 
            } 
          } 
        } 
        continue;
      } 
      break;
    } 
    paramContext.sendBroadcast(ConstraintProxyUpdateReceiver.newConstraintProxyUpdateIntent(paramContext, bool4, bool5, bool6, i));
  }
  
  public void onReceive(Context paramContext, Intent paramIntent) {
    Logger.get().debug(TAG, String.format("onReceive : %s", new Object[] { paramIntent }), new Throwable[0]);
    paramContext.startService(CommandHandler.createConstraintsChangedIntent(paramContext));
  }
}
