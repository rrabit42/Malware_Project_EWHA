package com.android.volley.misc;

import com.android.volley.request.MultiPartRequest;
import java.io.File;
import java.util.Iterator;
import java.util.Map;
import org.apache.http.util.EncodingUtils;

public class MultipartUtils {
  public static final String BINARY = "binary";
  
  public static final int BINARY_LENGTH;
  
  public static final String BOUNDARY_PREFIX = "--";
  
  public static final int BOUNDARY_PREFIX_LENGTH;
  
  public static final String COLON_SPACE = ": ";
  
  public static final int COLON_SPACE_LENGTH;
  
  public static final String CONTENT_TYPE_MULTIPART = "multipart/form-data; charset=%s; boundary=%s";
  
  public static final String CONTENT_TYPE_OCTET_STREAM = "application/octet-stream";
  
  public static final int CONTENT_TYPE_OCTET_STREAM_LENGTH;
  
  public static final String CRLF = "\r\n";
  
  public static final byte[] CRLF_BYTES;
  
  public static final int CRLF_LENGTH = "\r\n".getBytes().length;
  
  public static final String EIGHT_BIT = "8bit";
  
  public static final String FILENAME = "filename=\"%s\"";
  
  public static final String FORM_DATA = "form-data; name=\"%s\"";
  
  public static final String HEADER_CONTENT_DISPOSITION = "Content-Disposition";
  
  public static final int HEADER_CONTENT_DISPOSITION_LENGTH = "Content-Disposition".getBytes().length;
  
  public static final String HEADER_CONTENT_TRANSFER_ENCODING = "Content-Transfer-Encoding";
  
  public static final int HEADER_CONTENT_TRANSFER_ENCODING_LENGTH;
  
  public static final String HEADER_CONTENT_TYPE = "Content-Type";
  
  public static final int HEADER_CONTENT_TYPE_LENGTH;
  
  public static final String HEADER_USER_AGENT = "User-Agent";
  
  public static final String SEMICOLON_SPACE = "; ";
  
  static  {
    COLON_SPACE_LENGTH = ": ".getBytes().length;
    HEADER_CONTENT_TYPE_LENGTH = "Content-Type".getBytes().length;
    CONTENT_TYPE_OCTET_STREAM_LENGTH = "application/octet-stream".getBytes().length;
    HEADER_CONTENT_TRANSFER_ENCODING_LENGTH = "Content-Transfer-Encoding".getBytes().length;
    BINARY_LENGTH = "binary".getBytes().length;
    BOUNDARY_PREFIX_LENGTH = "--".getBytes().length;
    CRLF_BYTES = EncodingUtils.getAsciiBytes("\r\n");
  }
  
  public static int getContentLengthForMultipartRequest(String paramString, Map<String, MultiPartRequest.MultiPartParam> paramMap1, Map<String, String> paramMap2) {
    int j = paramString.getBytes().length;
    null = paramMap1.keySet().iterator();
    int i;
    for (i = 0; null.hasNext(); i += k + j + m + n + i1 + i2 + i3 + i4 + i5 + i6 + i6 + multiPartParam.value.getBytes().length + CRLF_LENGTH) {
      String str = (String)null.next();
      MultiPartRequest.MultiPartParam multiPartParam = (MultiPartRequest.MultiPartParam)paramMap1.get(str);
      int k = CRLF_LENGTH;
      int m = HEADER_CONTENT_DISPOSITION_LENGTH;
      int n = COLON_SPACE_LENGTH;
      int i1 = String.format("form-data; name=\"%s\"", new Object[] { str }).getBytes().length;
      int i2 = CRLF_LENGTH;
      int i3 = HEADER_CONTENT_TYPE_LENGTH;
      int i4 = COLON_SPACE_LENGTH;
      int i5 = multiPartParam.contentType.getBytes().length;
      int i6 = CRLF_LENGTH;
    } 
    for (String str : paramMap2.keySet()) {
      File file = new File((String)paramMap2.get(str));
      int k = CRLF_LENGTH;
      int m = HEADER_CONTENT_DISPOSITION_LENGTH;
      int n = COLON_SPACE_LENGTH;
      int i1 = String.format("form-data; name=\"%s\"; filename=\"%s\"", new Object[] { str, file.getName() }).getBytes().length;
      int i2 = CRLF_LENGTH;
      int i3 = HEADER_CONTENT_TYPE_LENGTH;
      int i4 = COLON_SPACE_LENGTH;
      i += k + j + m + n + i1 + i2 + i3 + i4 + CONTENT_TYPE_OCTET_STREAM_LENGTH + i2 + HEADER_CONTENT_TRANSFER_ENCODING_LENGTH + i4 + BINARY_LENGTH + i2 + i2 + (int)file.length() + CRLF_LENGTH;
    } 
    return i + j + BOUNDARY_PREFIX_LENGTH + CRLF_LENGTH;
  }
}
