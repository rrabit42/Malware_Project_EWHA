package com.google.android.gms.ads.internal.overlay;

import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.text.TextUtils;
import com.google.android.gms.ads.internal.zzbv;
import com.google.android.gms.internal.ads.zzadh;
import com.google.android.gms.internal.ads.zzakb;
import com.google.android.gms.internal.ads.zzkb;
import com.google.android.gms.internal.ads.zzna;
import com.google.android.gms.internal.ads.zznk;

@zzadh
public final class zza {
  private static boolean zza(Context paramContext, Intent paramIntent, zzt paramzzt) {
    try {
      String str = String.valueOf(paramIntent.toURI());
      if (str.length() != 0) {
        str = "Launching an intent: ".concat(str);
      } else {
        str = new String("Launching an intent: ");
      } 
      zzakb.v(str);
      zzbv.zzek().zza(paramContext, paramIntent);
      if (paramzzt != null)
        paramzzt.zzbl(); 
      return true;
    } catch (ActivityNotFoundException paramContext) {
      zzakb.zzdk(paramContext.getMessage());
      return false;
    } 
  }
  
  public static boolean zza(Context paramContext, zzc paramzzc, zzt paramzzt) {
    String str1;
    int i = 0;
    if (paramzzc == null) {
      str1 = "No intent data for launcher overlay.";
      zzakb.zzdk(str1);
      return false;
    } 
    zznk.initialize(str1);
    if (paramzzc.intent != null)
      return zza(str1, paramzzc.intent, paramzzt); 
    Intent intent = new Intent();
    if (TextUtils.isEmpty(paramzzc.url)) {
      str1 = "Open GMSG did not contain a URL.";
      zzakb.zzdk(str1);
      return false;
    } 
    if (!TextUtils.isEmpty(paramzzc.mimeType)) {
      intent.setDataAndType(Uri.parse(paramzzc.url), paramzzc.mimeType);
    } else {
      intent.setData(Uri.parse(paramzzc.url));
    } 
    intent.setAction("android.intent.action.VIEW");
    if (!TextUtils.isEmpty(paramzzc.packageName))
      intent.setPackage(paramzzc.packageName); 
    if (!TextUtils.isEmpty(paramzzc.zzbxj)) {
      String[] arrayOfString = paramzzc.zzbxj.split("/", 2);
      if (arrayOfString.length < 2) {
        str1 = String.valueOf(paramzzc.zzbxj);
        if (str1.length() != 0) {
          str1 = "Could not parse component name from open GMSG: ".concat(str1);
        } else {
          str1 = new String("Could not parse component name from open GMSG: ");
        } 
        zzakb.zzdk(str1);
        return false;
      } 
      intent.setClassName(arrayOfString[0], arrayOfString[1]);
    } 
    str2 = paramzzc.zzbxk;
    if (!TextUtils.isEmpty(str2)) {
      try {
        int j = Integer.parseInt(str2);
        i = j;
      } catch (NumberFormatException str2) {
        zzakb.zzdk("Could not parse intent flags.");
      } 
      intent.addFlags(i);
    } 
    zzna zzna = zznk.zzbea;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue()) {
      intent.addFlags(268435456);
      intent.putExtra("android.support.customtabs.extra.user_opt_out", true);
    } else {
      zzna = zznk.zzbdz;
      if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue())
        zzbv.zzek().zzb(str1, intent); 
    } 
    return zza(str1, intent, paramzzt);
  }
}
