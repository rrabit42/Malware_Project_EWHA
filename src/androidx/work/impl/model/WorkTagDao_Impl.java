package androidx.work.impl.model;

import android.arch.persistence.room.EntityInsertionAdapter;
import android.arch.persistence.room.RoomDatabase;
import android.arch.persistence.room.RoomSQLiteQuery;
import android.database.Cursor;
import java.util.ArrayList;
import java.util.List;

public class WorkTagDao_Impl implements WorkTagDao {
  private final RoomDatabase __db;
  
  private final EntityInsertionAdapter __insertionAdapterOfWorkTag;
  
  public WorkTagDao_Impl(RoomDatabase paramRoomDatabase) {
    this.__db = paramRoomDatabase;
    this.__insertionAdapterOfWorkTag = new Object(this, paramRoomDatabase);
  }
  
  public List<String> getTagsForWorkSpecId(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT DISTINCT tag FROM worktag WHERE work_spec_id=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      arrayList = new ArrayList(cursor.getCount());
      while (cursor.moveToNext())
        arrayList.add(cursor.getString(0)); 
      return arrayList;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public List<String> getWorkSpecIdsWithTag(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT work_spec_id FROM worktag WHERE tag=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      arrayList = new ArrayList(cursor.getCount());
      while (cursor.moveToNext())
        arrayList.add(cursor.getString(0)); 
      return arrayList;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public void insert(WorkTag paramWorkTag) {
    this.__db.beginTransaction();
    try {
      this.__insertionAdapterOfWorkTag.insert(paramWorkTag);
      this.__db.setTransactionSuccessful();
      return;
    } finally {
      this.__db.endTransaction();
    } 
  }
}
