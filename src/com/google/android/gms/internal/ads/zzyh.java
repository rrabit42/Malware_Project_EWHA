package com.google.android.gms.internal.ads;

import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.dynamic.IObjectWrapper;
import java.util.ArrayList;
import java.util.List;

public final class zzyh extends zzej implements zzyf {
  zzyh(IBinder paramIBinder) { super(paramIBinder, "com.google.android.gms.ads.internal.mediation.client.IUnifiedNativeAdMapper"); }
  
  public final String getAdvertiser() throws RemoteException {
    Parcel parcel = transactAndReadException(7, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final String getBody() throws RemoteException {
    Parcel parcel = transactAndReadException(4, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final String getCallToAction() throws RemoteException {
    Parcel parcel = transactAndReadException(6, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final Bundle getExtras() throws RemoteException {
    Parcel parcel = transactAndReadException(16, obtainAndWriteInterfaceToken());
    Bundle bundle = (Bundle)zzel.zza(parcel, Bundle.CREATOR);
    parcel.recycle();
    return bundle;
  }
  
  public final String getHeadline() throws RemoteException {
    Parcel parcel = transactAndReadException(2, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final List getImages() throws RemoteException {
    Parcel parcel = transactAndReadException(3, obtainAndWriteInterfaceToken());
    ArrayList arrayList = zzel.zzb(parcel);
    parcel.recycle();
    return arrayList;
  }
  
  public final boolean getOverrideClickHandling() throws RemoteException {
    Parcel parcel = transactAndReadException(18, obtainAndWriteInterfaceToken());
    boolean bool = zzel.zza(parcel);
    parcel.recycle();
    return bool;
  }
  
  public final boolean getOverrideImpressionRecording() throws RemoteException {
    Parcel parcel = transactAndReadException(17, obtainAndWriteInterfaceToken());
    boolean bool = zzel.zza(parcel);
    parcel.recycle();
    return bool;
  }
  
  public final String getPrice() throws RemoteException {
    Parcel parcel = transactAndReadException(10, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final double getStarRating() throws RemoteException {
    Parcel parcel = transactAndReadException(8, obtainAndWriteInterfaceToken());
    double d = parcel.readDouble();
    parcel.recycle();
    return d;
  }
  
  public final String getStore() throws RemoteException {
    Parcel parcel = transactAndReadException(9, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final zzlo getVideoController() throws RemoteException {
    Parcel parcel = transactAndReadException(11, obtainAndWriteInterfaceToken());
    zzlo zzlo = zzlp.zze(parcel.readStrongBinder());
    parcel.recycle();
    return zzlo;
  }
  
  public final void recordImpression() throws RemoteException { transactAndReadExceptionReturnVoid(19, obtainAndWriteInterfaceToken()); }
  
  public final void zzb(IObjectWrapper paramIObjectWrapper1, IObjectWrapper paramIObjectWrapper2, IObjectWrapper paramIObjectWrapper3) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramIObjectWrapper1);
    zzel.zza(parcel, paramIObjectWrapper2);
    zzel.zza(parcel, paramIObjectWrapper3);
    transactAndReadExceptionReturnVoid(21, parcel);
  }
  
  public final void zzj(IObjectWrapper paramIObjectWrapper) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramIObjectWrapper);
    transactAndReadExceptionReturnVoid(20, parcel);
  }
  
  public final zzpw zzjz() throws RemoteException {
    Parcel parcel = transactAndReadException(5, obtainAndWriteInterfaceToken());
    zzpw zzpw = zzpx.zzh(parcel.readStrongBinder());
    parcel.recycle();
    return zzpw;
  }
  
  public final IObjectWrapper zzke() throws RemoteException {
    Parcel parcel = transactAndReadException(15, obtainAndWriteInterfaceToken());
    IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
    parcel.recycle();
    return iObjectWrapper;
  }
  
  public final zzps zzkf() throws RemoteException {
    Parcel parcel = transactAndReadException(12, obtainAndWriteInterfaceToken());
    zzps zzps = zzpt.zzg(parcel.readStrongBinder());
    parcel.recycle();
    return zzps;
  }
  
  public final void zzl(IObjectWrapper paramIObjectWrapper) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramIObjectWrapper);
    transactAndReadExceptionReturnVoid(22, parcel);
  }
  
  public final IObjectWrapper zzmv() throws RemoteException {
    Parcel parcel = transactAndReadException(13, obtainAndWriteInterfaceToken());
    IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
    parcel.recycle();
    return iObjectWrapper;
  }
  
  public final IObjectWrapper zzmw() throws RemoteException {
    Parcel parcel = transactAndReadException(14, obtainAndWriteInterfaceToken());
    IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
    parcel.recycle();
    return iObjectWrapper;
  }
}
