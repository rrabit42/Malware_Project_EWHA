package android.arch.lifecycle;

import android.arch.core.util.Function;
import android.support.annotation.MainThread;
import android.support.annotation.NonNull;

public class Transformations {
  @MainThread
  public static <X, Y> LiveData<Y> map(@NonNull LiveData<X> paramLiveData, @NonNull Function<X, Y> paramFunction) {
    MediatorLiveData mediatorLiveData = new MediatorLiveData();
    mediatorLiveData.addSource(paramLiveData, new Object(mediatorLiveData, paramFunction));
    return mediatorLiveData;
  }
  
  @MainThread
  public static <X, Y> LiveData<Y> switchMap(@NonNull LiveData<X> paramLiveData, @NonNull Function<X, LiveData<Y>> paramFunction) {
    MediatorLiveData mediatorLiveData = new MediatorLiveData();
    mediatorLiveData.addSource(paramLiveData, new Object(paramFunction, mediatorLiveData));
    return mediatorLiveData;
  }
}
