package com.google.android.gms.internal.measurement;

public final class zzye implements Cloneable {
  private static final zzyf zzcew = new zzyf();
  
  private int mSize;
  
  private boolean zzcex = false;
  
  private int[] zzcey;
  
  private zzyf[] zzcez;
  
  zzye() { this(10); }
  
  private zzye(int paramInt) {
    paramInt = idealIntArraySize(paramInt);
    this.zzcey = new int[paramInt];
    this.zzcez = new zzyf[paramInt];
    this.mSize = 0;
  }
  
  private static int idealIntArraySize(int paramInt) {
    int i;
    int j = paramInt << 2;
    paramInt = 4;
    while (true) {
      i = j;
      if (paramInt < 32) {
        i = (1 << paramInt) - 12;
        if (j <= i)
          break; 
        paramInt++;
        continue;
      } 
      break;
    } 
    return i / 4;
  }
  
  private final int zzcg(int paramInt) {
    int j = this.mSize - 1;
    int i = 0;
    while (i <= j) {
      int k = i + j >>> 1;
      int m = this.zzcey[k];
      if (m < paramInt) {
        i = k + 1;
        continue;
      } 
      if (m > paramInt) {
        j = k - 1;
        continue;
      } 
      return k;
    } 
    return i ^ 0xFFFFFFFF;
  }
  
  public final boolean equals(Object paramObject) {
    if (paramObject == this)
      return true; 
    if (!(paramObject instanceof zzye))
      return false; 
    paramObject = (zzye)paramObject;
    int i = this.mSize;
    if (i != paramObject.mSize)
      return false; 
    int[] arrayOfInt1 = this.zzcey;
    int[] arrayOfInt2 = paramObject.zzcey;
    byte b = 0;
    while (true) {
      if (b < i) {
        if (arrayOfInt1[b] != arrayOfInt2[b]) {
          b = 0;
          break;
        } 
        b++;
        continue;
      } 
      b = 1;
      break;
    } 
    if (b != 0) {
      zzyf[] arrayOfzzyf2 = this.zzcez;
      zzyf[] arrayOfzzyf1 = paramObject.zzcez;
      i = this.mSize;
      b = 0;
      while (true) {
        if (b < i) {
          if (!arrayOfzzyf2[b].equals(arrayOfzzyf1[b])) {
            b = 0;
            break;
          } 
          b++;
          continue;
        } 
        b = 1;
        break;
      } 
      if (b != 0)
        return true; 
    } 
    return false;
  }
  
  public final int hashCode() {
    int i = 17;
    for (byte b = 0; b < this.mSize; b++)
      i = (i * 31 + this.zzcey[b]) * 31 + this.zzcez[b].hashCode(); 
    return i;
  }
  
  public final boolean isEmpty() { return (this.mSize == 0); }
  
  final int size() { return this.mSize; }
  
  final void zza(int paramInt, zzyf paramzzyf) {
    int i = zzcg(paramInt);
    if (i >= 0) {
      this.zzcez[i] = paramzzyf;
      return;
    } 
    i ^= 0xFFFFFFFF;
    if (i < this.mSize) {
      zzyf[] arrayOfzzyf = this.zzcez;
      if (arrayOfzzyf[i] == zzcew) {
        this.zzcey[i] = paramInt;
        arrayOfzzyf[i] = paramzzyf;
        return;
      } 
    } 
    int j = this.mSize;
    if (j >= this.zzcey.length) {
      j = idealIntArraySize(j + 1);
      int[] arrayOfInt1 = new int[j];
      zzyf[] arrayOfzzyf1 = new zzyf[j];
      int[] arrayOfInt2 = this.zzcey;
      System.arraycopy(arrayOfInt2, 0, arrayOfInt1, 0, arrayOfInt2.length);
      zzyf[] arrayOfzzyf2 = this.zzcez;
      System.arraycopy(arrayOfzzyf2, 0, arrayOfzzyf1, 0, arrayOfzzyf2.length);
      this.zzcey = arrayOfInt1;
      this.zzcez = arrayOfzzyf1;
    } 
    j = this.mSize;
    if (j - i != 0) {
      int[] arrayOfInt = this.zzcey;
      int k = i + 1;
      System.arraycopy(arrayOfInt, i, arrayOfInt, k, j - i);
      zzyf[] arrayOfzzyf = this.zzcez;
      System.arraycopy(arrayOfzzyf, i, arrayOfzzyf, k, this.mSize - i);
    } 
    this.zzcey[i] = paramInt;
    this.zzcez[i] = paramzzyf;
    this.mSize++;
  }
  
  final zzyf zzce(int paramInt) {
    paramInt = zzcg(paramInt);
    if (paramInt >= 0) {
      zzyf[] arrayOfzzyf = this.zzcez;
      if (arrayOfzzyf[paramInt] != zzcew)
        return arrayOfzzyf[paramInt]; 
    } 
    return null;
  }
  
  final zzyf zzcf(int paramInt) { return this.zzcez[paramInt]; }
}
