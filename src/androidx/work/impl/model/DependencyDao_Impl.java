package androidx.work.impl.model;

import android.arch.persistence.room.EntityInsertionAdapter;
import android.arch.persistence.room.RoomDatabase;
import android.arch.persistence.room.RoomSQLiteQuery;
import android.database.Cursor;
import java.util.ArrayList;
import java.util.List;

public class DependencyDao_Impl implements DependencyDao {
  private final RoomDatabase __db;
  
  private final EntityInsertionAdapter __insertionAdapterOfDependency;
  
  public DependencyDao_Impl(RoomDatabase paramRoomDatabase) {
    this.__db = paramRoomDatabase;
    this.__insertionAdapterOfDependency = new Object(this, paramRoomDatabase);
  }
  
  public List<String> getDependentWorkIds(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT work_spec_id FROM dependency WHERE prerequisite_id=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      arrayList = new ArrayList(cursor.getCount());
      while (cursor.moveToNext())
        arrayList.add(cursor.getString(0)); 
      return arrayList;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public List<String> getPrerequisites(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT prerequisite_id FROM dependency WHERE work_spec_id=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      arrayList = new ArrayList(cursor.getCount());
      while (cursor.moveToNext())
        arrayList.add(cursor.getString(0)); 
      return arrayList;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public boolean hasCompletedAllPrerequisites(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT COUNT(*)=0 FROM dependency WHERE work_spec_id=? AND prerequisite_id IN (SELECT id FROM workspec WHERE state!=2)", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      boolean bool = cursor.moveToFirst();
      byte b = 0;
      i = b;
      if (bool) {
        int j = cursor.getInt(0);
        i = b;
        if (j != 0)
          i = 1; 
      } 
      return i;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public boolean hasDependents(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT COUNT(*)>0 FROM dependency WHERE prerequisite_id=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      boolean bool = cursor.moveToFirst();
      byte b = 0;
      i = b;
      if (bool) {
        int j = cursor.getInt(0);
        i = b;
        if (j != 0)
          i = 1; 
      } 
      return i;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public void insertDependency(Dependency paramDependency) {
    this.__db.beginTransaction();
    try {
      this.__insertionAdapterOfDependency.insert(paramDependency);
      this.__db.setTransactionSuccessful();
      return;
    } finally {
      this.__db.endTransaction();
    } 
  }
}
