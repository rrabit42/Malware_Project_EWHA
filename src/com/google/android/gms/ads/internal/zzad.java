package com.google.android.gms.ads.internal;

import android.content.Context;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.internal.ads.zzadh;
import com.google.android.gms.internal.ads.zzajl;
import com.google.android.gms.internal.ads.zzakb;
import com.google.android.gms.internal.ads.zzang;
import com.google.android.gms.internal.ads.zzanm;
import com.google.android.gms.internal.ads.zzano;
import com.google.android.gms.internal.ads.zzanz;
import com.google.android.gms.internal.ads.zzaoe;
import com.google.android.gms.internal.ads.zzkb;
import com.google.android.gms.internal.ads.zzna;
import com.google.android.gms.internal.ads.zznk;
import com.google.android.gms.internal.ads.zzwf;
import com.google.android.gms.internal.ads.zzwk;
import javax.annotation.ParametersAreNonnullByDefault;
import org.json.JSONObject;

@zzadh
@ParametersAreNonnullByDefault
public final class zzad {
  private Context mContext;
  
  private final Object mLock = new Object();
  
  private long zzxm = 0L;
  
  public final void zza(Context paramContext, zzang paramzzang, String paramString, @Nullable Runnable paramRunnable) { zza(paramContext, paramzzang, true, null, paramString, null, paramRunnable); }
  
  @VisibleForTesting
  final void zza(Context paramContext, zzang paramzzang, boolean paramBoolean, @Nullable zzajl paramzzajl, String paramString1, @Nullable String paramString2, @Nullable Runnable paramRunnable) {
    byte b1;
    if (zzbv.zzer().elapsedRealtime() - this.zzxm < 5000L) {
      zzakb.zzdk("Not retrying to fetch app settings");
      return;
    } 
    this.zzxm = zzbv.zzer().elapsedRealtime();
    byte b2 = 1;
    if (paramzzajl == null) {
      b1 = b2;
    } else {
      boolean bool;
      long l1 = paramzzajl.zzps();
      long l2 = zzbv.zzer().currentTimeMillis();
      zzna zzna = zznk.zzbcu;
      if (l2 - l1 > ((Long)zzkb.zzik().zzd(zzna)).longValue()) {
        bool = true;
      } else {
        bool = false;
      } 
      b1 = b2;
      if (!bool)
        if (!paramzzajl.zzpt()) {
          b1 = b2;
        } else {
          b1 = 0;
        }  
    } 
    if (b1 == 0)
      return; 
    if (paramContext == null) {
      zzakb.zzdk("Context not provided to fetch application settings");
      return;
    } 
    if (TextUtils.isEmpty(paramString1) && TextUtils.isEmpty(paramString2)) {
      zzakb.zzdk("App settings could not be fetched. Required parameters missing");
      return;
    } 
    Context context = paramContext.getApplicationContext();
    if (context == null)
      context = paramContext; 
    this.mContext = context;
    zzwf zzwf = zzbv.zzey().zzb(this.mContext, paramzzang).zza("google.afma.config.fetchAppSettings", zzwk.zzbrc, zzwk.zzbrc);
    try {
      JSONObject jSONObject = new JSONObject();
      if (!TextUtils.isEmpty(paramString1)) {
        jSONObject.put("app_id", paramString1);
      } else if (!TextUtils.isEmpty(paramString2)) {
        jSONObject.put("ad_unit_id", paramString2);
      } 
      jSONObject.put("is_init", paramBoolean);
      jSONObject.put("pn", paramContext.getPackageName());
      zzanz zzanz1 = zzwf.zzf(jSONObject);
      zzanz zzanz2 = zzano.zza(zzanz1, zzae.zzxn, zzaoe.zzcvz);
      if (paramRunnable != null)
        zzanz1.zza(paramRunnable, zzaoe.zzcvz); 
      zzanm.zza(zzanz2, "ConfigLoader.maybeFetchNewAppSettings");
      return;
    } catch (Exception paramContext) {
      zzakb.zzb("Error requesting application settings", paramContext);
      return;
    } 
  }
}
