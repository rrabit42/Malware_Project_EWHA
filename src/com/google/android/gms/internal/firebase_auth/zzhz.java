package com.google.android.gms.internal.firebase_auth;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.SortedMap;
import java.util.TreeMap;

class zzhz<K extends Comparable<K>, V> extends AbstractMap<K, V> {
  private final int zzaay;
  
  private List<zzig> zzaaz;
  
  private Map<K, V> zzaba;
  
  private Map<K, V> zzabc;
  
  private boolean zzuc;
  
  private zzhz(int paramInt) {
    this.zzaay = paramInt;
    this.zzaaz = Collections.emptyList();
    this.zzaba = Collections.emptyMap();
    this.zzabc = Collections.emptyMap();
  }
  
  private final int zza(K paramK) {
    int j = this.zzaaz.size() - 1;
    if (j >= 0) {
      int k = paramK.compareTo((Comparable)((zzig)this.zzaaz.get(j)).getKey());
      if (k > 0)
        return -(j + 2); 
      if (k == 0)
        return j; 
    } 
    int i = 0;
    while (i <= j) {
      int k = (i + j) / 2;
      int m = paramK.compareTo((Comparable)((zzig)this.zzaaz.get(k)).getKey());
      if (m < 0) {
        j = k - 1;
        continue;
      } 
      if (m > 0) {
        i = k + 1;
        continue;
      } 
      return k;
    } 
    return -(i + 1);
  }
  
  static <FieldDescriptorType extends zzfm<FieldDescriptorType>> zzhz<FieldDescriptorType, Object> zzbb(int paramInt) { return new zzia(paramInt); }
  
  private final V zzbd(int paramInt) {
    zzji();
    Object object = ((zzig)this.zzaaz.remove(paramInt)).getValue();
    if (!this.zzaba.isEmpty()) {
      Iterator iterator = zzjj().entrySet().iterator();
      this.zzaaz.add(new zzig(this, (Map.Entry)iterator.next()));
      iterator.remove();
    } 
    return (V)object;
  }
  
  private final void zzji() {
    if (!this.zzuc)
      return; 
    throw new UnsupportedOperationException();
  }
  
  private final SortedMap<K, V> zzjj() {
    zzji();
    if (this.zzaba.isEmpty() && !(this.zzaba instanceof TreeMap)) {
      this.zzaba = new TreeMap();
      this.zzabc = ((TreeMap)this.zzaba).descendingMap();
    } 
    return (SortedMap)this.zzaba;
  }
  
  public void clear() {
    zzji();
    if (!this.zzaaz.isEmpty())
      this.zzaaz.clear(); 
    if (!this.zzaba.isEmpty())
      this.zzaba.clear(); 
  }
  
  public boolean containsKey(Object paramObject) {
    paramObject = (Comparable)paramObject;
    return (zza(paramObject) >= 0 || this.zzaba.containsKey(paramObject));
  }
  
  public Set<Map.Entry<K, V>> entrySet() {
    if (this.zzabb == null)
      this.zzabb = new zzii(this, null); 
    return this.zzabb;
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (!(paramObject instanceof zzhz))
      return super.equals(paramObject); 
    paramObject = (zzhz)paramObject;
    int i = size();
    if (i != paramObject.size())
      return false; 
    int j = zzjf();
    if (j != paramObject.zzjf())
      return entrySet().equals(paramObject.entrySet()); 
    for (byte b = 0; b < j; b++) {
      if (!zzbc(b).equals(paramObject.zzbc(b)))
        return false; 
    } 
    return (j != i) ? this.zzaba.equals(paramObject.zzaba) : 1;
  }
  
  public V get(Object paramObject) {
    paramObject = (Comparable)paramObject;
    int i = zza(paramObject);
    return (i >= 0) ? (V)((zzig)this.zzaaz.get(i)).getValue() : (V)this.zzaba.get(paramObject);
  }
  
  public int hashCode() {
    int k = zzjf();
    int j = 0;
    int i = 0;
    while (j < k) {
      i += ((zzig)this.zzaaz.get(j)).hashCode();
      j++;
    } 
    j = i;
    if (this.zzaba.size() > 0)
      j = i + this.zzaba.hashCode(); 
    return j;
  }
  
  public final boolean isImmutable() { return this.zzuc; }
  
  public V remove(Object paramObject) {
    zzji();
    paramObject = (Comparable)paramObject;
    int i = zza(paramObject);
    return (i >= 0) ? (V)zzbd(i) : (this.zzaba.isEmpty() ? null : (V)this.zzaba.remove(paramObject));
  }
  
  public int size() { return this.zzaaz.size() + this.zzaba.size(); }
  
  public final V zza(K paramK, V paramV) {
    zzji();
    int i = zza(paramK);
    if (i >= 0)
      return (V)((zzig)this.zzaaz.get(i)).setValue(paramV); 
    zzji();
    if (this.zzaaz.isEmpty() && !(this.zzaaz instanceof ArrayList))
      this.zzaaz = new ArrayList(this.zzaay); 
    i = -(i + 1);
    if (i >= this.zzaay)
      return (V)zzjj().put(paramK, paramV); 
    int j = this.zzaaz.size();
    int k = this.zzaay;
    if (j == k) {
      zzig zzig = (zzig)this.zzaaz.remove(k - 1);
      zzjj().put((Comparable)zzig.getKey(), zzig.getValue());
    } 
    this.zzaaz.add(i, new zzig(this, paramK, paramV));
    return null;
  }
  
  public final Map.Entry<K, V> zzbc(int paramInt) { return (Map.Entry)this.zzaaz.get(paramInt); }
  
  public void zzev() {
    if (!this.zzuc) {
      Map map;
      if (this.zzaba.isEmpty()) {
        map = Collections.emptyMap();
      } else {
        map = Collections.unmodifiableMap(this.zzaba);
      } 
      this.zzaba = map;
      if (this.zzabc.isEmpty()) {
        map = Collections.emptyMap();
      } else {
        map = Collections.unmodifiableMap(this.zzabc);
      } 
      this.zzabc = map;
      this.zzuc = true;
    } 
  }
  
  public final int zzjf() { return this.zzaaz.size(); }
  
  public final Iterable<Map.Entry<K, V>> zzjg() { return this.zzaba.isEmpty() ? zzid.zzjl() : this.zzaba.entrySet(); }
  
  final Set<Map.Entry<K, V>> zzjh() {
    if (this.zzabd == null)
      this.zzabd = new zzic(this, null); 
    return this.zzabd;
  }
}
