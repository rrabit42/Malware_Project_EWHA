package com.google.android.gms.ads.doubleclick;

import android.content.Context;
import android.support.annotation.RequiresPermission;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdSize;
import com.google.android.gms.ads.Correlator;
import com.google.android.gms.ads.VideoController;
import com.google.android.gms.ads.VideoOptions;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.internal.ads.zzane;
import com.google.android.gms.internal.ads.zzks;
import com.google.android.gms.internal.ads.zzly;

public final class PublisherAdView extends ViewGroup {
  private final zzly zzut = new zzly(this);
  
  public PublisherAdView(Context paramContext) { super(paramContext); }
  
  public PublisherAdView(Context paramContext, AttributeSet paramAttributeSet) {
    super(paramContext, paramAttributeSet);
    Preconditions.checkNotNull(paramContext, "Context cannot be null");
  }
  
  public PublisherAdView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) { super(paramContext, paramAttributeSet, paramInt); }
  
  public final void destroy() { this.zzut.destroy(); }
  
  public final AdListener getAdListener() { return this.zzut.getAdListener(); }
  
  public final AdSize getAdSize() { return this.zzut.getAdSize(); }
  
  public final AdSize[] getAdSizes() { return this.zzut.getAdSizes(); }
  
  public final String getAdUnitId() { return this.zzut.getAdUnitId(); }
  
  public final AppEventListener getAppEventListener() { return this.zzut.getAppEventListener(); }
  
  public final String getMediationAdapterClassName() { return this.zzut.getMediationAdapterClassName(); }
  
  public final OnCustomRenderedAdLoadedListener getOnCustomRenderedAdLoadedListener() { return this.zzut.getOnCustomRenderedAdLoadedListener(); }
  
  public final VideoController getVideoController() { return this.zzut.getVideoController(); }
  
  public final VideoOptions getVideoOptions() { return this.zzut.getVideoOptions(); }
  
  public final boolean isLoading() { return this.zzut.isLoading(); }
  
  @RequiresPermission("android.permission.INTERNET")
  public final void loadAd(PublisherAdRequest paramPublisherAdRequest) { this.zzut.zza(paramPublisherAdRequest.zzay()); }
  
  protected final void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    View view = getChildAt(0);
    if (view != null && view.getVisibility() != 8) {
      int i = view.getMeasuredWidth();
      int j = view.getMeasuredHeight();
      paramInt1 = (paramInt3 - paramInt1 - i) / 2;
      paramInt2 = (paramInt4 - paramInt2 - j) / 2;
      view.layout(paramInt1, paramInt2, i + paramInt1, j + paramInt2);
    } 
  }
  
  protected final void onMeasure(int paramInt1, int paramInt2) {
    int i = 0;
    View view = getChildAt(0);
    if (view != null && view.getVisibility() != 8) {
      measureChild(view, paramInt1, paramInt2);
      i = view.getMeasuredWidth();
      j = view.getMeasuredHeight();
    } else {
      AdSize adSize;
      view = null;
      try {
        AdSize adSize1 = getAdSize();
        adSize = adSize1;
      } catch (NullPointerException nullPointerException) {
        zzane.zzb("Unable to retrieve ad size.", nullPointerException);
      } 
      if (adSize != null) {
        Context context = getContext();
        i = adSize.getWidthInPixels(context);
        j = adSize.getHeightInPixels(context);
      } else {
        j = 0;
      } 
    } 
    i = Math.max(i, getSuggestedMinimumWidth());
    int j = Math.max(j, getSuggestedMinimumHeight());
    setMeasuredDimension(View.resolveSize(i, paramInt1), View.resolveSize(j, paramInt2));
  }
  
  public final void pause() { this.zzut.pause(); }
  
  public final void recordManualImpression() { this.zzut.recordManualImpression(); }
  
  public final void resume() { this.zzut.resume(); }
  
  public final void setAdListener(AdListener paramAdListener) { this.zzut.setAdListener(paramAdListener); }
  
  public final void setAdSizes(AdSize... paramVarArgs) {
    if (paramVarArgs != null && paramVarArgs.length > 0) {
      this.zzut.zza(paramVarArgs);
      return;
    } 
    throw new IllegalArgumentException("The supported ad sizes must contain at least one valid ad size.");
  }
  
  public final void setAdUnitId(String paramString) { this.zzut.setAdUnitId(paramString); }
  
  public final void setAppEventListener(AppEventListener paramAppEventListener) { this.zzut.setAppEventListener(paramAppEventListener); }
  
  public final void setCorrelator(Correlator paramCorrelator) { this.zzut.setCorrelator(paramCorrelator); }
  
  public final void setManualImpressionsEnabled(boolean paramBoolean) { this.zzut.setManualImpressionsEnabled(paramBoolean); }
  
  public final void setOnCustomRenderedAdLoadedListener(OnCustomRenderedAdLoadedListener paramOnCustomRenderedAdLoadedListener) { this.zzut.setOnCustomRenderedAdLoadedListener(paramOnCustomRenderedAdLoadedListener); }
  
  public final void setVideoOptions(VideoOptions paramVideoOptions) { this.zzut.setVideoOptions(paramVideoOptions); }
  
  public final boolean zza(zzks paramzzks) { return this.zzut.zza(paramzzks); }
}
