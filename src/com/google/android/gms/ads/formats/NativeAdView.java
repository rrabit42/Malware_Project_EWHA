package com.google.android.gms.ads.formats;

import android.annotation.TargetApi;
import android.content.Context;
import android.os.RemoteException;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.internal.ads.zzane;
import com.google.android.gms.internal.ads.zzkb;
import com.google.android.gms.internal.ads.zzqa;

public class NativeAdView extends FrameLayout {
  private final FrameLayout zzvh;
  
  private final zzqa zzvi;
  
  public NativeAdView(Context paramContext) {
    super(paramContext);
    this.zzvh = zzb(paramContext);
    this.zzvi = zzbf();
  }
  
  public NativeAdView(Context paramContext, AttributeSet paramAttributeSet) {
    super(paramContext, paramAttributeSet);
    this.zzvh = zzb(paramContext);
    this.zzvi = zzbf();
  }
  
  public NativeAdView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {
    super(paramContext, paramAttributeSet, paramInt);
    this.zzvh = zzb(paramContext);
    this.zzvi = zzbf();
  }
  
  @TargetApi(21)
  public NativeAdView(Context paramContext, AttributeSet paramAttributeSet, int paramInt1, int paramInt2) {
    super(paramContext, paramAttributeSet, paramInt1, paramInt2);
    this.zzvh = zzb(paramContext);
    this.zzvi = zzbf();
  }
  
  private final FrameLayout zzb(Context paramContext) {
    FrameLayout frameLayout = new FrameLayout(paramContext);
    frameLayout.setLayoutParams(new FrameLayout.LayoutParams(-1, -1));
    addView(frameLayout);
    return frameLayout;
  }
  
  private final zzqa zzbf() {
    Preconditions.checkNotNull(this.zzvh, "createDelegate must be called after mOverlayFrame has been created");
    return isInEditMode() ? null : zzkb.zzig().zza(this.zzvh.getContext(), this, this.zzvh);
  }
  
  public void addView(View paramView, int paramInt, ViewGroup.LayoutParams paramLayoutParams) {
    super.addView(paramView, paramInt, paramLayoutParams);
    super.bringChildToFront(this.zzvh);
  }
  
  public void bringChildToFront(View paramView) {
    super.bringChildToFront(paramView);
    FrameLayout frameLayout = this.zzvh;
    if (frameLayout != paramView)
      super.bringChildToFront(frameLayout); 
  }
  
  public void destroy() {
    try {
      this.zzvi.destroy();
      return;
    } catch (RemoteException remoteException) {
      zzane.zzb("Unable to destroy native ad view", remoteException);
      return;
    } 
  }
  
  public AdChoicesView getAdChoicesView() {
    View view = zzp("1098");
    return (view instanceof AdChoicesView) ? (AdChoicesView)view : null;
  }
  
  public void onVisibilityChanged(View paramView, int paramInt) {
    super.onVisibilityChanged(paramView, paramInt);
    zzqa zzqa1 = this.zzvi;
    if (zzqa1 != null)
      try {
        zzqa1.zzb(ObjectWrapper.wrap(paramView), paramInt);
        return;
      } catch (RemoteException paramView) {
        zzane.zzb("Unable to call onVisibilityChanged on delegate", paramView);
      }  
  }
  
  public void removeAllViews() {
    super.removeAllViews();
    addView(this.zzvh);
  }
  
  public void removeView(View paramView) {
    if (this.zzvh == paramView)
      return; 
    super.removeView(paramView);
  }
  
  public void setAdChoicesView(AdChoicesView paramAdChoicesView) { zza("1098", paramAdChoicesView); }
  
  public void setNativeAd(NativeAd paramNativeAd) {
    try {
      this.zzvi.zza((IObjectWrapper)paramNativeAd.zzbe());
      return;
    } catch (RemoteException paramNativeAd) {
      zzane.zzb("Unable to call setNativeAd on delegate", paramNativeAd);
      return;
    } 
  }
  
  protected final void zza(String paramString, View paramView) {
    try {
      this.zzvi.zzb(paramString, ObjectWrapper.wrap(paramView));
      return;
    } catch (RemoteException paramString) {
      zzane.zzb("Unable to call setAssetView on delegate", paramString);
      return;
    } 
  }
  
  protected final View zzp(String paramString) {
    try {
      IObjectWrapper iObjectWrapper = this.zzvi.zzak(paramString);
      if (iObjectWrapper != null)
        return (View)ObjectWrapper.unwrap(iObjectWrapper); 
    } catch (RemoteException paramString) {
      zzane.zzb("Unable to call getAssetView on delegate", paramString);
    } 
    return null;
  }
}
