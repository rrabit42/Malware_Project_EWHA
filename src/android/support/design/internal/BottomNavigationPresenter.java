package android.support.design.internal;

import android.content.Context;
import android.os.Parcelable;
import android.support.annotation.RestrictTo;
import android.support.v7.view.menu.MenuBuilder;
import android.support.v7.view.menu.MenuItemImpl;
import android.support.v7.view.menu.MenuPresenter;
import android.support.v7.view.menu.MenuView;
import android.support.v7.view.menu.SubMenuBuilder;
import android.view.ViewGroup;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class BottomNavigationPresenter implements MenuPresenter {
  private int id;
  
  private MenuBuilder menu;
  
  private BottomNavigationMenuView menuView;
  
  private boolean updateSuspended = false;
  
  public boolean collapseItemActionView(MenuBuilder paramMenuBuilder, MenuItemImpl paramMenuItemImpl) { return false; }
  
  public boolean expandItemActionView(MenuBuilder paramMenuBuilder, MenuItemImpl paramMenuItemImpl) { return false; }
  
  public boolean flagActionItems() { return false; }
  
  public int getId() { return this.id; }
  
  public MenuView getMenuView(ViewGroup paramViewGroup) { return this.menuView; }
  
  public void initForMenu(Context paramContext, MenuBuilder paramMenuBuilder) {
    this.menu = paramMenuBuilder;
    this.menuView.initialize(this.menu);
  }
  
  public void onCloseMenu(MenuBuilder paramMenuBuilder, boolean paramBoolean) {}
  
  public void onRestoreInstanceState(Parcelable paramParcelable) {
    if (paramParcelable instanceof SavedState)
      this.menuView.tryRestoreSelectedItemId(((SavedState)paramParcelable).selectedItemId); 
  }
  
  public Parcelable onSaveInstanceState() {
    SavedState savedState = new SavedState();
    savedState.selectedItemId = this.menuView.getSelectedItemId();
    return savedState;
  }
  
  public boolean onSubMenuSelected(SubMenuBuilder paramSubMenuBuilder) { return false; }
  
  public void setBottomNavigationMenuView(BottomNavigationMenuView paramBottomNavigationMenuView) { this.menuView = paramBottomNavigationMenuView; }
  
  public void setCallback(MenuPresenter.Callback paramCallback) {}
  
  public void setId(int paramInt) { this.id = paramInt; }
  
  public void setUpdateSuspended(boolean paramBoolean) { this.updateSuspended = paramBoolean; }
  
  public void updateMenuView(boolean paramBoolean) {
    if (this.updateSuspended)
      return; 
    if (paramBoolean) {
      this.menuView.buildMenuView();
      return;
    } 
    this.menuView.updateMenuView();
  }
}
