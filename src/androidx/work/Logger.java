package androidx.work;

import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public abstract class Logger {
  private static final int MAX_PREFIXED_TAG_LENGTH = 20;
  
  private static final int MAX_TAG_LENGTH = 23;
  
  private static final String TAG_PREFIX = "WM-";
  
  private static Logger sLogger;
  
  static  {
  
  }
  
  public Logger(int paramInt) {}
  
  public static Logger get() { // Byte code:
    //   0: ldc androidx/work/Logger
    //   2: monitorenter
    //   3: getstatic androidx/work/Logger.sLogger : Landroidx/work/Logger;
    //   6: ifnonnull -> 20
    //   9: new androidx/work/Logger$LogcatLogger
    //   12: dup
    //   13: iconst_3
    //   14: invokespecial <init> : (I)V
    //   17: putstatic androidx/work/Logger.sLogger : Landroidx/work/Logger;
    //   20: getstatic androidx/work/Logger.sLogger : Landroidx/work/Logger;
    //   23: astore_0
    //   24: ldc androidx/work/Logger
    //   26: monitorexit
    //   27: aload_0
    //   28: areturn
    //   29: astore_0
    //   30: ldc androidx/work/Logger
    //   32: monitorexit
    //   33: aload_0
    //   34: athrow
    // Exception table:
    //   from	to	target	type
    //   3	20	29	finally
    //   20	24	29	finally }
  
  public static void setLogger(Logger paramLogger) { // Byte code:
    //   0: ldc androidx/work/Logger
    //   2: monitorenter
    //   3: aload_0
    //   4: putstatic androidx/work/Logger.sLogger : Landroidx/work/Logger;
    //   7: ldc androidx/work/Logger
    //   9: monitorexit
    //   10: return
    //   11: astore_0
    //   12: ldc androidx/work/Logger
    //   14: monitorexit
    //   15: aload_0
    //   16: athrow
    // Exception table:
    //   from	to	target	type
    //   3	7	11	finally }
  
  public static String tagWithPrefix(@NonNull String paramString) {
    int i = paramString.length();
    StringBuilder stringBuilder = new StringBuilder(23);
    stringBuilder.append("WM-");
    int j = MAX_PREFIXED_TAG_LENGTH;
    if (i >= j) {
      stringBuilder.append(paramString.substring(0, j));
    } else {
      stringBuilder.append(paramString);
    } 
    return stringBuilder.toString();
  }
  
  public abstract void debug(String paramString1, String paramString2, Throwable... paramVarArgs);
  
  public abstract void error(String paramString1, String paramString2, Throwable... paramVarArgs);
  
  public abstract void info(String paramString1, String paramString2, Throwable... paramVarArgs);
  
  public abstract void verbose(String paramString1, String paramString2, Throwable... paramVarArgs);
  
  public abstract void warning(String paramString1, String paramString2, Throwable... paramVarArgs);
}
