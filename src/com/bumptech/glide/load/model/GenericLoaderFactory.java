package com.bumptech.glide.load.model;

import android.content.Context;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class GenericLoaderFactory {
  private static final ModelLoader NULL_MODEL_LOADER = new Object();
  
  private final Map<Class, Map<Class, ModelLoader>> cachedModelLoaders = new HashMap();
  
  private final Context context;
  
  private final Map<Class, Map<Class, ModelLoaderFactory>> modelClassToResourceFactories = new HashMap();
  
  public GenericLoaderFactory(Context paramContext) { this.context = paramContext.getApplicationContext(); }
  
  private <T, Y> void cacheModelLoader(Class<T> paramClass1, Class<Y> paramClass2, ModelLoader<T, Y> paramModelLoader) {
    Map map2 = (Map)this.cachedModelLoaders.get(paramClass1);
    Map map1 = map2;
    if (map2 == null) {
      map1 = new HashMap();
      this.cachedModelLoaders.put(paramClass1, map1);
    } 
    map1.put(paramClass2, paramModelLoader);
  }
  
  private <T, Y> void cacheNullLoader(Class<T> paramClass1, Class<Y> paramClass2) { cacheModelLoader(paramClass1, paramClass2, NULL_MODEL_LOADER); }
  
  private <T, Y> ModelLoader<T, Y> getCachedLoader(Class<T> paramClass1, Class<Y> paramClass2) {
    Map map = (Map)this.cachedModelLoaders.get(paramClass1);
    return (map != null) ? (ModelLoader)map.get(paramClass2) : null;
  }
  
  private <T, Y> ModelLoaderFactory<T, Y> getFactory(Class<T> paramClass1, Class<Y> paramClass2) {
    Map map = (Map)this.modelClassToResourceFactories.get(paramClass1);
    if (map != null) {
      ModelLoaderFactory modelLoaderFactory1 = (ModelLoaderFactory)map.get(paramClass2);
    } else {
      map = null;
    } 
    ModelLoaderFactory modelLoaderFactory = map;
    if (map == null) {
      Iterator iterator = this.modelClassToResourceFactories.keySet().iterator();
      while (true) {
        modelLoaderFactory = map;
        if (iterator.hasNext()) {
          Class clazz = (Class)iterator.next();
          if (clazz.isAssignableFrom(paramClass1)) {
            Map map1 = (Map)this.modelClassToResourceFactories.get(clazz);
            if (map1 != null) {
              modelLoaderFactory = (ModelLoaderFactory)map1.get(paramClass2);
              ModelLoaderFactory modelLoaderFactory1 = modelLoaderFactory;
              if (modelLoaderFactory != null)
                break; 
            } 
          } 
          continue;
        } 
        break;
      } 
    } 
    return modelLoaderFactory;
  }
  
  public <T, Y> ModelLoader<T, Y> buildModelLoader(Class<T> paramClass1, Class<Y> paramClass2) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: aload_1
    //   4: aload_2
    //   5: invokespecial getCachedLoader : (Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;
    //   8: astore #4
    //   10: aload #4
    //   12: ifnull -> 37
    //   15: getstatic com/bumptech/glide/load/model/GenericLoaderFactory.NULL_MODEL_LOADER : Lcom/bumptech/glide/load/model/ModelLoader;
    //   18: aload #4
    //   20: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23: istore_3
    //   24: iload_3
    //   25: ifeq -> 32
    //   28: aload_0
    //   29: monitorexit
    //   30: aconst_null
    //   31: areturn
    //   32: aload_0
    //   33: monitorexit
    //   34: aload #4
    //   36: areturn
    //   37: aload_0
    //   38: aload_1
    //   39: aload_2
    //   40: invokespecial getFactory : (Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;
    //   43: astore #5
    //   45: aload #5
    //   47: ifnull -> 78
    //   50: aload #5
    //   52: aload_0
    //   53: getfield context : Landroid/content/Context;
    //   56: aload_0
    //   57: invokeinterface build : (Landroid/content/Context;Lcom/bumptech/glide/load/model/GenericLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;
    //   62: astore #4
    //   64: aload_0
    //   65: aload_1
    //   66: aload_2
    //   67: aload #4
    //   69: invokespecial cacheModelLoader : (Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoader;)V
    //   72: aload #4
    //   74: astore_1
    //   75: goto -> 87
    //   78: aload_0
    //   79: aload_1
    //   80: aload_2
    //   81: invokespecial cacheNullLoader : (Ljava/lang/Class;Ljava/lang/Class;)V
    //   84: aload #4
    //   86: astore_1
    //   87: aload_0
    //   88: monitorexit
    //   89: aload_1
    //   90: areturn
    //   91: astore_1
    //   92: aload_0
    //   93: monitorexit
    //   94: aload_1
    //   95: athrow
    // Exception table:
    //   from	to	target	type
    //   2	10	91	finally
    //   15	24	91	finally
    //   37	45	91	finally
    //   50	72	91	finally
    //   78	84	91	finally }
  
  @Deprecated
  public <T, Y> ModelLoader<T, Y> buildModelLoader(Class<T> paramClass1, Class<Y> paramClass2, Context paramContext) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: aload_1
    //   4: aload_2
    //   5: invokevirtual buildModelLoader : (Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;
    //   8: astore_1
    //   9: aload_0
    //   10: monitorexit
    //   11: aload_1
    //   12: areturn
    //   13: astore_1
    //   14: aload_0
    //   15: monitorexit
    //   16: aload_1
    //   17: athrow
    // Exception table:
    //   from	to	target	type
    //   2	9	13	finally }
  
  public <T, Y> ModelLoaderFactory<T, Y> register(Class<T> paramClass1, Class<Y> paramClass2, ModelLoaderFactory<T, Y> paramModelLoaderFactory) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield cachedModelLoaders : Ljava/util/Map;
    //   6: invokeinterface clear : ()V
    //   11: aload_0
    //   12: getfield modelClassToResourceFactories : Ljava/util/Map;
    //   15: aload_1
    //   16: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   21: checkcast java/util/Map
    //   24: astore #6
    //   26: aload #6
    //   28: astore #5
    //   30: aload #6
    //   32: ifnonnull -> 57
    //   35: new java/util/HashMap
    //   38: dup
    //   39: invokespecial <init> : ()V
    //   42: astore #5
    //   44: aload_0
    //   45: getfield modelClassToResourceFactories : Ljava/util/Map;
    //   48: aload_1
    //   49: aload #5
    //   51: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   56: pop
    //   57: aload #5
    //   59: aload_2
    //   60: aload_3
    //   61: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   66: checkcast com/bumptech/glide/load/model/ModelLoaderFactory
    //   69: astore_2
    //   70: aload_2
    //   71: astore_1
    //   72: aload_2
    //   73: ifnull -> 126
    //   76: aload_0
    //   77: getfield modelClassToResourceFactories : Ljava/util/Map;
    //   80: invokeinterface values : ()Ljava/util/Collection;
    //   85: invokeinterface iterator : ()Ljava/util/Iterator;
    //   90: astore_3
    //   91: aload_2
    //   92: astore_1
    //   93: aload_3
    //   94: invokeinterface hasNext : ()Z
    //   99: ifeq -> 126
    //   102: aload_3
    //   103: invokeinterface next : ()Ljava/lang/Object;
    //   108: checkcast java/util/Map
    //   111: aload_2
    //   112: invokeinterface containsValue : (Ljava/lang/Object;)Z
    //   117: istore #4
    //   119: iload #4
    //   121: ifeq -> 91
    //   124: aconst_null
    //   125: astore_1
    //   126: aload_0
    //   127: monitorexit
    //   128: aload_1
    //   129: areturn
    //   130: astore_1
    //   131: aload_0
    //   132: monitorexit
    //   133: goto -> 138
    //   136: aload_1
    //   137: athrow
    //   138: goto -> 136
    // Exception table:
    //   from	to	target	type
    //   2	26	130	finally
    //   35	57	130	finally
    //   57	70	130	finally
    //   76	91	130	finally
    //   93	119	130	finally }
  
  public <T, Y> ModelLoaderFactory<T, Y> unregister(Class<T> paramClass1, Class<Y> paramClass2) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield cachedModelLoaders : Ljava/util/Map;
    //   6: invokeinterface clear : ()V
    //   11: aconst_null
    //   12: astore_3
    //   13: aload_0
    //   14: getfield modelClassToResourceFactories : Ljava/util/Map;
    //   17: aload_1
    //   18: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   23: checkcast java/util/Map
    //   26: astore #4
    //   28: aload_3
    //   29: astore_1
    //   30: aload #4
    //   32: ifnull -> 47
    //   35: aload #4
    //   37: aload_2
    //   38: invokeinterface remove : (Ljava/lang/Object;)Ljava/lang/Object;
    //   43: checkcast com/bumptech/glide/load/model/ModelLoaderFactory
    //   46: astore_1
    //   47: aload_0
    //   48: monitorexit
    //   49: aload_1
    //   50: areturn
    //   51: astore_1
    //   52: aload_0
    //   53: monitorexit
    //   54: aload_1
    //   55: athrow
    // Exception table:
    //   from	to	target	type
    //   2	11	51	finally
    //   13	28	51	finally
    //   35	47	51	finally }
}
