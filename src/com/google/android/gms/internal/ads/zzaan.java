package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.RemoteException;
import android.support.annotation.Nullable;
import android.view.View;
import android.webkit.WebView;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.dynamite.DynamiteModule;
import javax.annotation.concurrent.GuardedBy;

@zzadh
public final class zzaan {
  private static final Object sLock = new Object();
  
  @VisibleForTesting
  @GuardedBy("sLock")
  private static boolean zzbxg;
  
  @VisibleForTesting
  @GuardedBy("sLock")
  private static boolean zzsh = false;
  
  @VisibleForTesting
  private zzatn zzbxh;
  
  static  {
    zzbxg = false;
  }
  
  @VisibleForTesting
  private final void zzj(Context paramContext) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue()) {
        boolean bool = zzbxg;
        if (!bool)
          try {
            zzbxg = true;
            this.zzbxh = zzato.zzab(DynamiteModule.load(paramContext, DynamiteModule.PREFER_REMOTE, "com.google.android.gms.ads.dynamite").instantiate("com.google.android.gms.ads.omid.DynamiteOmid"));
          } catch (com.google.android.gms.dynamite.DynamiteModule.LoadingException paramContext) {
            zzane.zzd("#007 Could not call remote method.", paramContext);
          }  
      } 
      return;
    } 
  }
  
  @Nullable
  public final String getVersion(Context paramContext) {
    zzna zzna = zznk.zzbet;
    if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue())
      return null; 
    try {
      zzj(paramContext);
      null = String.valueOf(this.zzbxh.getVersion());
      return (null.length() != 0) ? "a.".concat(null) : new String("a.");
    } catch (RemoteException paramContext) {
    
    } catch (NullPointerException paramContext) {}
    zzane.zzd("#007 Could not call remote method.", paramContext);
    return null;
  }
  
  @Nullable
  public final IObjectWrapper zza(String paramString1, WebView paramWebView, String paramString2, String paramString3, String paramString4) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() || !zzsh)
        return null; 
      try {
        return this.zzbxh.zza(paramString1, ObjectWrapper.wrap(paramWebView), paramString2, paramString3, paramString4);
      } catch (RemoteException paramString1) {
      
      } catch (NullPointerException paramString1) {}
      zzane.zzd("#007 Could not call remote method.", paramString1);
      return null;
    } 
  }
  
  public final void zza(IObjectWrapper paramIObjectWrapper, View paramView) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() || !zzsh)
        return; 
      try {
        this.zzbxh.zza(paramIObjectWrapper, ObjectWrapper.wrap(paramView));
        return;
      } catch (RemoteException paramIObjectWrapper) {
      
      } catch (NullPointerException paramIObjectWrapper) {}
      zzane.zzd("#007 Could not call remote method.", paramIObjectWrapper);
      return;
    } 
  }
  
  public final boolean zzi(Context paramContext) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue())
        return false; 
      if (zzsh)
        return true; 
      try {
        zzj(paramContext);
        boolean bool = this.zzbxh.zzy(ObjectWrapper.wrap(paramContext));
        zzsh = bool;
        return bool;
      } catch (RemoteException paramContext) {
      
      } catch (NullPointerException paramContext) {}
    } 
  }
  
  public final void zzm(IObjectWrapper paramIObjectWrapper) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() || !zzsh)
        return; 
      try {
        this.zzbxh.zzm(paramIObjectWrapper);
        return;
      } catch (RemoteException paramIObjectWrapper) {
      
      } catch (NullPointerException paramIObjectWrapper) {}
      zzane.zzd("#007 Could not call remote method.", paramIObjectWrapper);
      return;
    } 
  }
  
  public final void zzn(IObjectWrapper paramIObjectWrapper) {
    synchronized (sLock) {
      zzna zzna = zznk.zzbet;
      if (!((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() || !zzsh)
        return; 
      try {
        this.zzbxh.zzn(paramIObjectWrapper);
        return;
      } catch (RemoteException paramIObjectWrapper) {
      
      } catch (NullPointerException paramIObjectWrapper) {}
      zzane.zzd("#007 Could not call remote method.", paramIObjectWrapper);
      return;
    } 
  }
}
