package com.google.android.gms.internal.firebase_auth;

final class zzjb extends zzja {
  final int zzb(int paramInt1, byte[] paramArrayOfByte, int paramInt2, int paramInt3) {
    if (paramInt1 != 0) {
      if (paramInt2 >= paramInt3)
        return paramInt1; 
      byte b = (byte)paramInt1;
      if (b < -32) {
        if (b >= -62) {
          paramInt1 = paramInt2 + 1;
          if (paramArrayOfByte[paramInt2] > -65)
            return -1; 
        } else {
          return -1;
        } 
      } else {
        int i;
        if (b < -16) {
          byte b1 = (byte)(paramInt1 >> 8 ^ 0xFFFFFFFF);
          i = b1;
          int j = paramInt2;
          if (b1 == 0) {
            j = paramInt2 + 1;
            i = paramArrayOfByte[paramInt2];
            if (j >= paramInt3)
              return zziy.zzu(b, i); 
          } 
          if (i <= -65 && (b != -32 || i >= -96) && (b != -19 || i < -96)) {
            i = j + 1;
            if (paramArrayOfByte[j] > -65)
              return -1; 
          } else {
            return -1;
          } 
        } else {
          byte b1 = (byte)(i >> 8 ^ 0xFFFFFFFF);
          if (b1 == 0) {
            i = paramInt2 + 1;
            b1 = paramArrayOfByte[paramInt2];
            if (i >= paramInt3)
              return zziy.zzu(b, b1); 
            paramInt2 = i;
            i = 0;
          } else {
            i = (byte)(i >> 16);
          } 
          int k = i;
          int j = paramInt2;
          if (i == 0) {
            j = paramInt2 + 1;
            k = paramArrayOfByte[paramInt2];
            if (j >= paramInt3)
              return zziy.zzf(b, b1, k); 
          } 
          if (b1 <= -65 && (b << 28) + b1 + 112 >> 30 == 0 && k <= -65) {
            i = j + 1;
            if (paramArrayOfByte[j] > -65)
              return -1; 
          } else {
            return -1;
          } 
        } 
      } 
    } else {
      paramInt1 = paramInt2;
    } 
    while (paramInt1 < paramInt3 && paramArrayOfByte[paramInt1] >= 0)
      paramInt1++; 
    paramInt2 = paramInt1;
    if (paramInt1 >= paramInt3)
      return 0; 
    while (true) {
      if (paramInt2 >= paramInt3)
        return 0; 
      int i = paramInt2 + 1;
      paramInt2 = paramArrayOfByte[paramInt2];
      paramInt1 = i;
      if (paramInt2 < 0) {
        if (paramInt2 < -32) {
          if (i >= paramInt3)
            return paramInt2; 
          if (paramInt2 >= -62) {
            paramInt2 = i + 1;
            if (paramArrayOfByte[i] > -65)
              return -1; 
            continue;
          } 
          return -1;
        } 
        if (paramInt2 < -16) {
          if (i >= paramInt3 - 1)
            return zziy.zzh(paramArrayOfByte, i, paramInt3); 
          paramInt1 = i + 1;
          i = paramArrayOfByte[i];
          if (i <= -65 && (paramInt2 != -32 || i >= -96) && (paramInt2 != -19 || i < -96)) {
            paramInt2 = paramInt1 + 1;
            if (paramArrayOfByte[paramInt1] > -65)
              return -1; 
            continue;
          } 
          return -1;
        } 
        if (i >= paramInt3 - 2)
          return zziy.zzh(paramArrayOfByte, i, paramInt3); 
        paramInt1 = i + 1;
        i = paramArrayOfByte[i];
        if (i <= -65 && (paramInt2 << 28) + i + 112 >> 30 == 0) {
          paramInt2 = paramInt1 + 1;
          if (paramArrayOfByte[paramInt1] <= -65) {
            paramInt1 = paramInt2 + 1;
            if (paramArrayOfByte[paramInt2] > -65)
              return -1; 
          } else {
            return -1;
          } 
        } else {
          return -1;
        } 
      } 
      paramInt2 = paramInt1;
    } 
  }
  
  final int zzb(CharSequence paramCharSequence, byte[] paramArrayOfByte, int paramInt1, int paramInt2) {
    int j = paramCharSequence.length();
    int k = paramInt2 + paramInt1;
    paramInt2 = 0;
    while (paramInt2 < j) {
      int m = paramInt2 + paramInt1;
      if (m < k) {
        char c = paramCharSequence.charAt(paramInt2);
        if (c < '') {
          paramArrayOfByte[m] = (byte)c;
          paramInt2++;
        } 
      } 
    } 
    if (paramInt2 == j)
      return paramInt1 + j; 
    int i = paramInt1 + paramInt2;
    paramInt1 = paramInt2;
    while (paramInt1 < j) {
      char c = paramCharSequence.charAt(paramInt1);
      if (c < '' && i < k) {
        paramInt2 = i + 1;
        paramArrayOfByte[i] = (byte)c;
      } else if (c < 'ࠀ' && i <= k - 2) {
        int m = i + 1;
        paramArrayOfByte[i] = (byte)(c >>> '\006' | 0x3C0);
        paramInt2 = m + 1;
        paramArrayOfByte[m] = (byte)(c & 0x3F | 0x80);
      } else if ((c < '?' || '?' < c) && i <= k - 3) {
        paramInt2 = i + 1;
        paramArrayOfByte[i] = (byte)(c >>> '\f' | 0x1E0);
        i = paramInt2 + 1;
        paramArrayOfByte[paramInt2] = (byte)(c >>> '\006' & 0x3F | 0x80);
        paramInt2 = i + 1;
        paramArrayOfByte[i] = (byte)(c & 0x3F | 0x80);
      } else if (i <= k - 4) {
        paramInt2 = paramInt1 + 1;
        if (paramInt2 != paramCharSequence.length()) {
          char c1 = paramCharSequence.charAt(paramInt2);
          if (Character.isSurrogatePair(c, c1)) {
            paramInt1 = Character.toCodePoint(c, c1);
            int m = i + 1;
            paramArrayOfByte[i] = (byte)(paramInt1 >>> 18 | 0xF0);
            i = m + 1;
            paramArrayOfByte[m] = (byte)(paramInt1 >>> 12 & 0x3F | 0x80);
            m = i + 1;
            paramArrayOfByte[i] = (byte)(paramInt1 >>> 6 & 0x3F | 0x80);
            i = m + 1;
            paramArrayOfByte[m] = (byte)(paramInt1 & 0x3F | 0x80);
            paramInt1 = paramInt2;
            paramInt2 = i;
          } else {
            paramInt1 = paramInt2;
            throw new zzjc(paramInt1 - 1, j);
          } 
        } else {
          throw new zzjc(paramInt1 - 1, j);
        } 
      } else {
        if ('?' <= c && c <= '?') {
          paramInt2 = paramInt1 + 1;
          if (paramInt2 == paramCharSequence.length() || !Character.isSurrogatePair(c, paramCharSequence.charAt(paramInt2)))
            throw new zzjc(paramInt1, j); 
        } 
        paramCharSequence = new StringBuilder(37);
        paramCharSequence.append("Failed writing ");
        paramCharSequence.append(c);
        paramCharSequence.append(" at index ");
        paramCharSequence.append(i);
        throw new ArrayIndexOutOfBoundsException(paramCharSequence.toString());
      } 
      paramInt1++;
      i = paramInt2;
    } 
    return i;
  }
  
  final String zzg(byte[] paramArrayOfByte, int paramInt1, int paramInt2) throws zzgc {
    if ((paramInt1 | paramInt2 | paramArrayOfByte.length - paramInt1 - paramInt2) >= 0) {
      int j = paramInt1 + paramInt2;
      char[] arrayOfChar = new char[paramInt2];
      paramInt2 = 0;
      while (paramInt1 < j) {
        byte b = paramArrayOfByte[paramInt1];
        if (zziz.zzh(b)) {
          paramInt1++;
          zziz.zzb(b, arrayOfChar, paramInt2);
          paramInt2++;
        } 
      } 
      int i = paramInt2;
      paramInt2 = paramInt1;
      paramInt1 = i;
      while (paramInt2 < j) {
        i = paramInt2 + 1;
        byte b = paramArrayOfByte[paramInt2];
        if (zziz.zzh(b)) {
          paramInt2 = paramInt1 + 1;
          zziz.zzb(b, arrayOfChar, paramInt1);
          paramInt1 = paramInt2;
          paramInt2 = i;
          while (paramInt2 < j) {
            b = paramArrayOfByte[paramInt2];
            if (zziz.zzh(b)) {
              paramInt2++;
              zziz.zzb(b, arrayOfChar, paramInt1);
              paramInt1++;
            } 
          } 
          continue;
        } 
        if (zziz.zzi(b)) {
          if (i < j) {
            zziz.zzb(b, paramArrayOfByte[i], arrayOfChar, paramInt1);
            paramInt2 = i + 1;
            paramInt1++;
            continue;
          } 
          throw zzgc.zzhy();
        } 
        if (zziz.zzj(b)) {
          if (i < j - 1) {
            paramInt2 = i + 1;
            zziz.zzb(b, paramArrayOfByte[i], paramArrayOfByte[paramInt2], arrayOfChar, paramInt1);
            paramInt2++;
            paramInt1++;
            continue;
          } 
          throw zzgc.zzhy();
        } 
        if (i < j - 2) {
          paramInt2 = i + 1;
          byte b1 = paramArrayOfByte[i];
          i = paramInt2 + 1;
          zziz.zzb(b, b1, paramArrayOfByte[paramInt2], paramArrayOfByte[i], arrayOfChar, paramInt1);
          paramInt2 = i + 1;
          paramInt1 = paramInt1 + 1 + 1;
          continue;
        } 
        throw zzgc.zzhy();
      } 
      return new String(arrayOfChar, 0, paramInt1);
    } 
    ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException = new ArrayIndexOutOfBoundsException(String.format("buffer length=%d, index=%d, size=%d", new Object[] { Integer.valueOf(paramArrayOfByte.length), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) }));
    throw arrayIndexOutOfBoundsException;
  }
}
