package androidx.work.impl.model;

import android.arch.persistence.db.SupportSQLiteStatement;
import android.arch.persistence.room.EntityInsertionAdapter;
import android.arch.persistence.room.RoomDatabase;
import android.arch.persistence.room.RoomSQLiteQuery;
import android.arch.persistence.room.SharedSQLiteStatement;
import android.database.Cursor;

public class SystemIdInfoDao_Impl implements SystemIdInfoDao {
  private final RoomDatabase __db;
  
  private final EntityInsertionAdapter __insertionAdapterOfSystemIdInfo;
  
  private final SharedSQLiteStatement __preparedStmtOfRemoveSystemIdInfo;
  
  public SystemIdInfoDao_Impl(RoomDatabase paramRoomDatabase) {
    this.__db = paramRoomDatabase;
    this.__insertionAdapterOfSystemIdInfo = new Object(this, paramRoomDatabase);
    this.__preparedStmtOfRemoveSystemIdInfo = new Object(this, paramRoomDatabase);
  }
  
  public SystemIdInfo getSystemIdInfo(String paramString) {
    roomSQLiteQuery = RoomSQLiteQuery.acquire("SELECT * FROM SystemIdInfo WHERE work_spec_id=?", 1);
    if (paramString == null) {
      roomSQLiteQuery.bindNull(1);
    } else {
      roomSQLiteQuery.bindString(1, paramString);
    } 
    cursor = this.__db.query(roomSQLiteQuery);
    try {
      int i = cursor.getColumnIndexOrThrow("work_spec_id");
      int j = cursor.getColumnIndexOrThrow("system_id");
      if (cursor.moveToFirst()) {
        SystemIdInfo systemIdInfo = new SystemIdInfo(cursor.getString(i), cursor.getInt(j));
      } else {
        paramString = null;
      } 
      return paramString;
    } finally {
      cursor.close();
      roomSQLiteQuery.release();
    } 
  }
  
  public void insertSystemIdInfo(SystemIdInfo paramSystemIdInfo) {
    this.__db.beginTransaction();
    try {
      this.__insertionAdapterOfSystemIdInfo.insert(paramSystemIdInfo);
      this.__db.setTransactionSuccessful();
      return;
    } finally {
      this.__db.endTransaction();
    } 
  }
  
  public void removeSystemIdInfo(String paramString) {
    supportSQLiteStatement = this.__preparedStmtOfRemoveSystemIdInfo.acquire();
    this.__db.beginTransaction();
    if (paramString == null)
      try {
        supportSQLiteStatement.bindNull(1);
        supportSQLiteStatement.executeUpdateDelete();
        this.__db.setTransactionSuccessful();
        return;
      } finally {
        this.__db.endTransaction();
        this.__preparedStmtOfRemoveSystemIdInfo.release(supportSQLiteStatement);
      }  
    supportSQLiteStatement.bindString(1, paramString);
    supportSQLiteStatement.executeUpdateDelete();
    this.__db.setTransactionSuccessful();
    this.__db.endTransaction();
    this.__preparedStmtOfRemoveSystemIdInfo.release(supportSQLiteStatement);
  }
}
