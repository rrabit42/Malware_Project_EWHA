package com.google.android.gms.common.internal;

import android.accounts.Account;
import android.content.Context;
import android.view.View;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.signin.SignInOptions;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.annotation.Nullable;

@KeepForSdk
@VisibleForTesting
public final class ClientSettings {
  public static final String KEY_CLIENT_SESSION_ID = "com.google.android.gms.common.internal.ClientSettings.sessionId";
  
  private final Set<Scope> zabr;
  
  private final int zabt;
  
  private final View zabu;
  
  private final String zabv;
  
  private final String zabw;
  
  private final Set<Scope> zaoa;
  
  private final Map<Api<?>, OptionalApiSettings> zaob;
  
  private final SignInOptions zaoc;
  
  private Integer zaod;
  
  private final Account zax;
  
  public ClientSettings(Account paramAccount, Set<Scope> paramSet, Map<Api<?>, OptionalApiSettings> paramMap, int paramInt, View paramView, String paramString1, String paramString2, SignInOptions paramSignInOptions) {
    this.zax = paramAccount;
    if (paramSet == null) {
      set = Collections.EMPTY_SET;
    } else {
      set = Collections.unmodifiableSet(paramSet);
    } 
    this.zabr = set;
    Map<Api<?>, OptionalApiSettings> map = paramMap;
    if (paramMap == null)
      map = Collections.EMPTY_MAP; 
    this.zaob = map;
    this.zabu = paramView;
    this.zabt = paramInt;
    this.zabv = paramString1;
    this.zabw = paramString2;
    this.zaoc = paramSignInOptions;
    HashSet hashSet = new HashSet(this.zabr);
    Iterator iterator = this.zaob.values().iterator();
    while (iterator.hasNext())
      hashSet.addAll(((OptionalApiSettings)iterator.next()).mScopes); 
    this.zaoa = Collections.unmodifiableSet(hashSet);
  }
  
  @KeepForSdk
  public static ClientSettings createDefault(Context paramContext) { return (new GoogleApiClient.Builder(paramContext)).buildClientSettings(); }
  
  @Nullable
  @KeepForSdk
  public final Account getAccount() { return this.zax; }
  
  @Deprecated
  @Nullable
  @KeepForSdk
  public final String getAccountName() {
    Account account = this.zax;
    return (account != null) ? account.name : null;
  }
  
  @KeepForSdk
  public final Account getAccountOrDefault() {
    Account account = this.zax;
    return (account != null) ? account : new Account("<<default account>>", "com.google");
  }
  
  @KeepForSdk
  public final Set<Scope> getAllRequestedScopes() { return this.zaoa; }
  
  @KeepForSdk
  public final Set<Scope> getApplicableScopes(Api<?> paramApi) {
    OptionalApiSettings optionalApiSettings = (OptionalApiSettings)this.zaob.get(paramApi);
    if (optionalApiSettings == null || optionalApiSettings.mScopes.isEmpty())
      return this.zabr; 
    HashSet hashSet = new HashSet(this.zabr);
    hashSet.addAll(optionalApiSettings.mScopes);
    return hashSet;
  }
  
  @Nullable
  public final Integer getClientSessionId() { return this.zaod; }
  
  @KeepForSdk
  public final int getGravityForPopups() { return this.zabt; }
  
  public final Map<Api<?>, OptionalApiSettings> getOptionalApiSettings() { return this.zaob; }
  
  @Nullable
  public final String getRealClientClassName() { return this.zabw; }
  
  @Nullable
  @KeepForSdk
  public final String getRealClientPackageName() { return this.zabv; }
  
  @KeepForSdk
  public final Set<Scope> getRequiredScopes() { return this.zabr; }
  
  @Nullable
  public final SignInOptions getSignInOptions() { return this.zaoc; }
  
  @Nullable
  @KeepForSdk
  public final View getViewForPopups() { return this.zabu; }
  
  public final void setClientSessionId(Integer paramInteger) { this.zaod = paramInteger; }
}
