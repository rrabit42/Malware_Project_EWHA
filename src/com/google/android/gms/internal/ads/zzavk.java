package com.google.android.gms.internal.ads;

import java.security.GeneralSecurityException;
import javax.crypto.spec.SecretKeySpec;

final class zzavk extends Object implements zzaug<zzauk> {
  private static void zza(zzaxg paramzzaxg) throws GeneralSecurityException {
    if (paramzzaxg.zzyt() >= 10) {
      int i = zzavl.zzdhz[paramzzaxg.zzys().ordinal()];
      if (i != 1) {
        if (i != 2) {
          if (i == 3) {
            if (paramzzaxg.zzyt() <= 64)
              return; 
            throw new GeneralSecurityException("tag size too big");
          } 
          throw new GeneralSecurityException("unknown hash type");
        } 
        if (paramzzaxg.zzyt() <= 32)
          return; 
        throw new GeneralSecurityException("tag size too big");
      } 
      if (paramzzaxg.zzyt() <= 20)
        return; 
      throw new GeneralSecurityException("tag size too big");
    } 
    throw new GeneralSecurityException("tag size too small");
  }
  
  private final zzauk zzh(zzbah paramzzbah) throws GeneralSecurityException {
    try {
      zzaxc zzaxc = zzaxc.zzae(paramzzbah);
      if (zzaxc instanceof zzaxc) {
        zzaxc = (zzaxc)zzaxc;
        zzazq.zzj(zzaxc.getVersion(), 0);
        if (zzaxc.zzwv().size() >= 16) {
          zzazj zzazj;
          zza(zzaxc.zzym());
          zzaxa zzaxa = zzaxc.zzym().zzys();
          SecretKeySpec secretKeySpec = new SecretKeySpec(zzaxc.zzwv().toByteArray(), "HMAC");
          int i = zzaxc.zzym().zzyt();
          int j = zzavl.zzdhz[zzaxa.ordinal()];
          if (j != 1) {
            if (j != 2) {
              if (j == 3) {
                zzazj = new zzazj("HMACSHA512", secretKeySpec, i);
              } else {
                throw new GeneralSecurityException("unknown hash");
              } 
            } else {
              zzazj = new zzazj("HMACSHA256", secretKeySpec, i);
            } 
          } else {
            zzazj = new zzazj("HMACSHA1", secretKeySpec, i);
          } 
          return (zzauk)zzazj;
        } 
        throw new GeneralSecurityException("key too short");
      } 
      throw new GeneralSecurityException("expected HmacKey proto");
    } catch (zzbbu paramzzbah) {
      throw new GeneralSecurityException("expected serialized HmacKey proto", paramzzbah);
    } 
  }
  
  public final int getVersion() { return 0; }
  
  public final zzbcu zzb(zzbah paramzzbah) throws GeneralSecurityException {
    try {
      return zzb(zzaxe.zzag(paramzzbah));
    } catch (zzbbu paramzzbah) {
      throw new GeneralSecurityException("expected serialized HmacKeyFormat proto", paramzzbah);
    } 
  }
  
  public final zzbcu zzb(zzbcu paramzzbcu) throws GeneralSecurityException {
    if (paramzzbcu instanceof zzaxe) {
      zzaxe zzaxe = (zzaxe)paramzzbcu;
      if (zzaxe.getKeySize() >= 16) {
        zza(zzaxe.zzym());
        return (zzbbo)zzaxc.zzyn().zzav(0).zzc(zzaxe.zzym()).zzaf(zzbah.zzo(zzazl.zzbh(zzaxe.getKeySize()))).zzadi();
      } 
      throw new GeneralSecurityException("key too short");
    } 
    throw new GeneralSecurityException("expected HmacKeyFormat proto");
  }
  
  public final zzaxi zzc(zzbah paramzzbah) throws GeneralSecurityException {
    zzaxc zzaxc = (zzaxc)zzb(paramzzbah);
    return (zzaxi)zzaxi.zzyz().zzeb("type.googleapis.com/google.crypto.tink.HmacKey").zzai(zzaxc.zzaav()).zzb(zzaxi.zzb.zzdkx).zzadi();
  }
}
