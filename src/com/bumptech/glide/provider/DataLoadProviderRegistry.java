package com.bumptech.glide.provider;

import com.bumptech.glide.util.MultiClassKey;
import java.util.HashMap;
import java.util.Map;

public class DataLoadProviderRegistry {
  private static final MultiClassKey GET_KEY = new MultiClassKey();
  
  private final Map<MultiClassKey, DataLoadProvider<?, ?>> providers = new HashMap();
  
  public <T, Z> DataLoadProvider<T, Z> get(Class<T> paramClass1, Class<Z> paramClass2) {
    synchronized (GET_KEY) {
      GET_KEY.set(paramClass1, paramClass2);
      DataLoadProvider dataLoadProvider2 = (DataLoadProvider)this.providers.get(GET_KEY);
      DataLoadProvider dataLoadProvider1 = dataLoadProvider2;
      if (dataLoadProvider2 == null)
        dataLoadProvider1 = EmptyDataLoadProvider.get(); 
      return dataLoadProvider1;
    } 
  }
  
  public <T, Z> void register(Class<T> paramClass1, Class<Z> paramClass2, DataLoadProvider<T, Z> paramDataLoadProvider) { this.providers.put(new MultiClassKey(paramClass1, paramClass2), paramDataLoadProvider); }
}
