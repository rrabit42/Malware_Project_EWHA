package com.bumptech.glide.manager;

import com.bumptech.glide.request.Request;
import com.bumptech.glide.util.Util;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.WeakHashMap;

public class RequestTracker {
  private boolean isPaused;
  
  private final List<Request> pendingRequests = new ArrayList();
  
  private final Set<Request> requests = Collections.newSetFromMap(new WeakHashMap());
  
  void addRequest(Request paramRequest) { this.requests.add(paramRequest); }
  
  public void clearRequests() {
    Iterator iterator = Util.getSnapshot(this.requests).iterator();
    while (iterator.hasNext())
      ((Request)iterator.next()).clear(); 
    this.pendingRequests.clear();
  }
  
  public boolean isPaused() { return this.isPaused; }
  
  public void pauseRequests() {
    this.isPaused = true;
    for (Request request : Util.getSnapshot(this.requests)) {
      if (request.isRunning()) {
        request.pause();
        this.pendingRequests.add(request);
      } 
    } 
  }
  
  public void removeRequest(Request paramRequest) {
    this.requests.remove(paramRequest);
    this.pendingRequests.remove(paramRequest);
  }
  
  public void restartRequests() {
    for (Request request : Util.getSnapshot(this.requests)) {
      if (!request.isComplete() && !request.isCancelled()) {
        request.pause();
        if (!this.isPaused) {
          request.begin();
          continue;
        } 
        this.pendingRequests.add(request);
      } 
    } 
  }
  
  public void resumeRequests() {
    this.isPaused = false;
    for (Request request : Util.getSnapshot(this.requests)) {
      if (!request.isComplete() && !request.isCancelled() && !request.isRunning())
        request.begin(); 
    } 
    this.pendingRequests.clear();
  }
  
  public void runRequest(Request paramRequest) {
    this.requests.add(paramRequest);
    if (!this.isPaused) {
      paramRequest.begin();
      return;
    } 
    this.pendingRequests.add(paramRequest);
  }
}
