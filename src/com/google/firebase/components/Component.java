package com.google.firebase.components;

import com.google.android.gms.common.annotation.KeepForSdk;
import java.util.Arrays;
import java.util.Collections;
import java.util.Set;

@KeepForSdk
public final class Component<T> extends Object {
  private final Set<Dependency> dependencies;
  
  private final ComponentFactory<T> factory;
  
  private final int instantiation;
  
  private final Set<Class<? super T>> providedInterfaces;
  
  private final Set<Class<?>> publishedEvents;
  
  private final int type;
  
  private Component(Set<Class<? super T>> paramSet1, Set<Dependency> paramSet2, int paramInt1, int paramInt2, ComponentFactory<T> paramComponentFactory, Set<Class<?>> paramSet3) {
    this.providedInterfaces = Collections.unmodifiableSet(paramSet1);
    this.dependencies = Collections.unmodifiableSet(paramSet2);
    this.instantiation = paramInt1;
    this.type = paramInt2;
    this.factory = paramComponentFactory;
    this.publishedEvents = Collections.unmodifiableSet(paramSet3);
  }
  
  @KeepForSdk
  public static <T> Builder<T> builder(Class<T> paramClass) { return new Builder(paramClass, new Class[0], null); }
  
  @SafeVarargs
  @KeepForSdk
  public static <T> Builder<T> builder(Class<T> paramClass, Class<? super T>... paramVarArgs) { return new Builder(paramClass, paramVarArgs, null); }
  
  @KeepForSdk
  public static <T> Component<T> intoSet(T paramT, Class<T> paramClass) { // Byte code:
    //   0: aload_1
    //   1: invokestatic intoSetBuilder : (Ljava/lang/Class;)Lcom/google/firebase/components/Component$Builder;
    //   4: aload_0
    //   5: invokestatic lambdaFactory$ : (Ljava/lang/Object;)Lcom/google/firebase/components/ComponentFactory;
    //   8: invokevirtual factory : (Lcom/google/firebase/components/ComponentFactory;)Lcom/google/firebase/components/Component$Builder;
    //   11: invokevirtual build : ()Lcom/google/firebase/components/Component;
    //   14: areturn }
  
  @KeepForSdk
  public static <T> Builder<T> intoSetBuilder(Class<T> paramClass) { return Builder.access$100(builder(paramClass)); }
  
  @Deprecated
  @KeepForSdk
  public static <T> Component<T> of(Class<T> paramClass, T paramT) { // Byte code:
    //   0: aload_0
    //   1: invokestatic builder : (Ljava/lang/Class;)Lcom/google/firebase/components/Component$Builder;
    //   4: aload_1
    //   5: invokestatic lambdaFactory$ : (Ljava/lang/Object;)Lcom/google/firebase/components/ComponentFactory;
    //   8: invokevirtual factory : (Lcom/google/firebase/components/ComponentFactory;)Lcom/google/firebase/components/Component$Builder;
    //   11: invokevirtual build : ()Lcom/google/firebase/components/Component;
    //   14: areturn }
  
  @SafeVarargs
  @KeepForSdk
  public static <T> Component<T> of(T paramT, Class<T> paramClass, Class<? super T>... paramVarArgs) { // Byte code:
    //   0: aload_1
    //   1: aload_2
    //   2: invokestatic builder : (Ljava/lang/Class;[Ljava/lang/Class;)Lcom/google/firebase/components/Component$Builder;
    //   5: aload_0
    //   6: invokestatic lambdaFactory$ : (Ljava/lang/Object;)Lcom/google/firebase/components/ComponentFactory;
    //   9: invokevirtual factory : (Lcom/google/firebase/components/ComponentFactory;)Lcom/google/firebase/components/Component$Builder;
    //   12: invokevirtual build : ()Lcom/google/firebase/components/Component;
    //   15: areturn }
  
  public Set<Dependency> getDependencies() { return this.dependencies; }
  
  public ComponentFactory<T> getFactory() { return this.factory; }
  
  public Set<Class<? super T>> getProvidedInterfaces() { return this.providedInterfaces; }
  
  public Set<Class<?>> getPublishedEvents() { return this.publishedEvents; }
  
  public boolean isAlwaysEager() { return (this.instantiation == 1); }
  
  public boolean isEagerInDefaultApp() { return (this.instantiation == 2); }
  
  public boolean isLazy() { return (this.instantiation == 0); }
  
  public boolean isValue() { return (this.type == 0); }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder("Component<");
    stringBuilder.append(Arrays.toString(this.providedInterfaces.toArray()));
    stringBuilder.append(">{");
    stringBuilder.append(this.instantiation);
    stringBuilder.append(", type=");
    stringBuilder.append(this.type);
    stringBuilder.append(", deps=");
    stringBuilder.append(Arrays.toString(this.dependencies.toArray()));
    stringBuilder.append("}");
    return stringBuilder.toString();
  }
}
