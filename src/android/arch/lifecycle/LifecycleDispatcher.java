package android.arch.lifecycle;

import android.app.Application;
import android.content.Context;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import java.util.List;
import java.util.concurrent.atomic.AtomicBoolean;

class LifecycleDispatcher {
  private static final String REPORT_FRAGMENT_TAG = "android.arch.lifecycle.LifecycleDispatcher.report_fragment_tag";
  
  private static AtomicBoolean sInitialized = new AtomicBoolean(false);
  
  private static void dispatchIfLifecycleOwner(Fragment paramFragment, Lifecycle.Event paramEvent) {
    if (paramFragment instanceof LifecycleRegistryOwner)
      ((LifecycleRegistryOwner)paramFragment).getLifecycle().handleLifecycleEvent(paramEvent); 
  }
  
  static void init(Context paramContext) {
    if (sInitialized.getAndSet(true))
      return; 
    ((Application)paramContext.getApplicationContext()).registerActivityLifecycleCallbacks(new DispatcherActivityCallback());
  }
  
  private static void markState(FragmentActivity paramFragmentActivity, Lifecycle.State paramState) {
    markStateIn(paramFragmentActivity, paramState);
    markState(paramFragmentActivity.getSupportFragmentManager(), paramState);
  }
  
  private static void markState(FragmentManager paramFragmentManager, Lifecycle.State paramState) {
    List list = paramFragmentManager.getFragments();
    if (list == null)
      return; 
    for (Fragment fragment : list) {
      if (fragment == null)
        continue; 
      markStateIn(fragment, paramState);
      if (fragment.isAdded())
        markState(fragment.getChildFragmentManager(), paramState); 
    } 
  }
  
  private static void markStateIn(Object paramObject, Lifecycle.State paramState) {
    if (paramObject instanceof LifecycleRegistryOwner)
      ((LifecycleRegistryOwner)paramObject).getLifecycle().markState(paramState); 
  }
}
