package androidx.work.impl.constraints.trackers;

import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Build;
import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import androidx.work.Logger;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class BatteryChargingTracker extends BroadcastReceiverConstraintTracker<Boolean> {
  private static final String TAG = Logger.tagWithPrefix("BatteryChrgTracker");
  
  public BatteryChargingTracker(Context paramContext) { super(paramContext); }
  
  private boolean isBatteryChangedIntentCharging(Intent paramIntent) {
    if (Build.VERSION.SDK_INT >= 23) {
      int i = paramIntent.getIntExtra("status", -1);
      if (i != 2)
        return (i == 5); 
    } else {
      return (paramIntent.getIntExtra("plugged", 0) != 0);
    } 
    return true;
  }
  
  public Boolean getInitialState() {
    IntentFilter intentFilter = new IntentFilter("android.intent.action.BATTERY_CHANGED");
    Intent intent = this.mAppContext.registerReceiver(null, intentFilter);
    if (intent == null) {
      Logger.get().error(TAG, "getInitialState - null intent received", new Throwable[0]);
      return null;
    } 
    return Boolean.valueOf(isBatteryChangedIntentCharging(intent));
  }
  
  public IntentFilter getIntentFilter() {
    IntentFilter intentFilter = new IntentFilter();
    if (Build.VERSION.SDK_INT >= 23) {
      intentFilter.addAction("android.os.action.CHARGING");
      intentFilter.addAction("android.os.action.DISCHARGING");
      return intentFilter;
    } 
    intentFilter.addAction("android.intent.action.ACTION_POWER_CONNECTED");
    intentFilter.addAction("android.intent.action.ACTION_POWER_DISCONNECTED");
    return intentFilter;
  }
  
  public void onBroadcastReceive(Context paramContext, @NonNull Intent paramIntent) {
    String str = paramIntent.getAction();
    if (str == null)
      return; 
    Logger.get().debug(TAG, String.format("Received %s", new Object[] { str }), new Throwable[0]);
    byte b = -1;
    switch (str.hashCode()) {
      case 1019184907:
        if (str.equals("android.intent.action.ACTION_POWER_CONNECTED"))
          b = 2; 
        break;
      case 948344062:
        if (str.equals("android.os.action.CHARGING"))
          b = 0; 
        break;
      case -54942926:
        if (str.equals("android.os.action.DISCHARGING"))
          b = 1; 
        break;
      case -1886648615:
        if (str.equals("android.intent.action.ACTION_POWER_DISCONNECTED"))
          b = 3; 
        break;
    } 
    if (b != 0) {
      if (b != 1) {
        if (b != 2) {
          if (b != 3)
            return; 
          setState(Boolean.valueOf(false));
          return;
        } 
        setState(Boolean.valueOf(true));
        return;
      } 
      setState(Boolean.valueOf(false));
      return;
    } 
    setState(Boolean.valueOf(true));
  }
}
