package android.support.v4.app;

import android.app.Service;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Build;
import android.os.IBinder;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import java.util.ArrayList;
import java.util.HashMap;

public abstract class JobIntentService extends Service {
  static final boolean DEBUG = false;
  
  static final String TAG = "JobIntentService";
  
  static final HashMap<ComponentName, WorkEnqueuer> sClassWorkEnqueuer;
  
  static final Object sLock = new Object();
  
  final ArrayList<CompatWorkItem> mCompatQueue;
  
  WorkEnqueuer mCompatWorkEnqueuer;
  
  CommandProcessor mCurProcessor;
  
  boolean mDestroyed = false;
  
  boolean mInterruptIfStopped = false;
  
  CompatJobEngine mJobImpl;
  
  boolean mStopped = false;
  
  static  {
    sClassWorkEnqueuer = new HashMap();
  }
  
  public JobIntentService() {
    if (Build.VERSION.SDK_INT >= 26) {
      this.mCompatQueue = null;
      return;
    } 
    this.mCompatQueue = new ArrayList();
  }
  
  public static void enqueueWork(@NonNull Context paramContext, @NonNull ComponentName paramComponentName, int paramInt, @NonNull Intent paramIntent) {
    if (paramIntent != null)
      synchronized (sLock) {
        WorkEnqueuer workEnqueuer = getWorkEnqueuer(paramContext, paramComponentName, true, paramInt);
        workEnqueuer.ensureJobId(paramInt);
        workEnqueuer.enqueueWork(paramIntent);
        return;
      }  
    throw new IllegalArgumentException("work must not be null");
  }
  
  public static void enqueueWork(@NonNull Context paramContext, @NonNull Class paramClass, int paramInt, @NonNull Intent paramIntent) { enqueueWork(paramContext, new ComponentName(paramContext, paramClass), paramInt, paramIntent); }
  
  static WorkEnqueuer getWorkEnqueuer(Context paramContext, ComponentName paramComponentName, boolean paramBoolean, int paramInt) {
    WorkEnqueuer workEnqueuer = (WorkEnqueuer)sClassWorkEnqueuer.get(paramComponentName);
    CompatWorkEnqueuer compatWorkEnqueuer = workEnqueuer;
    if (workEnqueuer == null) {
      CompatWorkEnqueuer compatWorkEnqueuer1;
      if (Build.VERSION.SDK_INT >= 26) {
        if (paramBoolean) {
          compatWorkEnqueuer1 = new JobWorkEnqueuer(paramContext, paramComponentName, paramInt);
        } else {
          throw new IllegalArgumentException("Can't be here without a job id");
        } 
      } else {
        compatWorkEnqueuer1 = new CompatWorkEnqueuer(compatWorkEnqueuer1, paramComponentName);
      } 
      sClassWorkEnqueuer.put(paramComponentName, compatWorkEnqueuer1);
      compatWorkEnqueuer = compatWorkEnqueuer1;
    } 
    return compatWorkEnqueuer;
  }
  
  GenericWorkItem dequeueWork() {
    CompatJobEngine compatJobEngine = this.mJobImpl;
    if (compatJobEngine != null)
      return compatJobEngine.dequeueWork(); 
    synchronized (this.mCompatQueue) {
      if (this.mCompatQueue.size() > 0)
        return (GenericWorkItem)this.mCompatQueue.remove(0); 
      return null;
    } 
  }
  
  boolean doStopCurrentWork() {
    CommandProcessor commandProcessor = this.mCurProcessor;
    if (commandProcessor != null)
      commandProcessor.cancel(this.mInterruptIfStopped); 
    this.mStopped = true;
    return onStopCurrentWork();
  }
  
  void ensureProcessorRunningLocked(boolean paramBoolean) {
    if (this.mCurProcessor == null) {
      this.mCurProcessor = new CommandProcessor(this);
      WorkEnqueuer workEnqueuer = this.mCompatWorkEnqueuer;
      if (workEnqueuer != null && paramBoolean)
        workEnqueuer.serviceProcessingStarted(); 
      this.mCurProcessor.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new Void[0]);
    } 
  }
  
  public boolean isStopped() { return this.mStopped; }
  
  public IBinder onBind(@NonNull Intent paramIntent) {
    CompatJobEngine compatJobEngine = this.mJobImpl;
    return (compatJobEngine != null) ? compatJobEngine.compatGetBinder() : null;
  }
  
  public void onCreate() {
    super.onCreate();
    if (Build.VERSION.SDK_INT >= 26) {
      this.mJobImpl = new JobServiceEngineImpl(this);
      this.mCompatWorkEnqueuer = null;
      return;
    } 
    this.mJobImpl = null;
    this.mCompatWorkEnqueuer = getWorkEnqueuer(this, new ComponentName(this, getClass()), false, 0);
  }
  
  public void onDestroy() { // Byte code:
    //   0: aload_0
    //   1: invokespecial onDestroy : ()V
    //   4: aload_0
    //   5: getfield mCompatQueue : Ljava/util/ArrayList;
    //   8: astore_1
    //   9: aload_1
    //   10: ifnull -> 35
    //   13: aload_1
    //   14: monitorenter
    //   15: aload_0
    //   16: iconst_1
    //   17: putfield mDestroyed : Z
    //   20: aload_0
    //   21: getfield mCompatWorkEnqueuer : Landroid/support/v4/app/JobIntentService$WorkEnqueuer;
    //   24: invokevirtual serviceProcessingFinished : ()V
    //   27: aload_1
    //   28: monitorexit
    //   29: return
    //   30: astore_2
    //   31: aload_1
    //   32: monitorexit
    //   33: aload_2
    //   34: athrow
    //   35: return
    // Exception table:
    //   from	to	target	type
    //   15	29	30	finally
    //   31	33	30	finally }
  
  protected abstract void onHandleWork(@NonNull Intent paramIntent);
  
  public int onStartCommand(@Nullable Intent paramIntent, int paramInt1, int paramInt2) {
    if (this.mCompatQueue != null) {
      this.mCompatWorkEnqueuer.serviceStartReceived();
      synchronized (this.mCompatQueue) {
        ArrayList arrayList = this.mCompatQueue;
        if (paramIntent == null)
          paramIntent = new Intent(); 
        arrayList.add(new CompatWorkItem(this, paramIntent, paramInt2));
        ensureProcessorRunningLocked(true);
        return 3;
      } 
    } 
    return 2;
  }
  
  public boolean onStopCurrentWork() { return true; }
  
  void processorFinished() { // Byte code:
    //   0: aload_0
    //   1: getfield mCompatQueue : Ljava/util/ArrayList;
    //   4: astore_1
    //   5: aload_1
    //   6: ifnull -> 63
    //   9: aload_1
    //   10: monitorenter
    //   11: aload_0
    //   12: aconst_null
    //   13: putfield mCurProcessor : Landroid/support/v4/app/JobIntentService$CommandProcessor;
    //   16: aload_0
    //   17: getfield mCompatQueue : Ljava/util/ArrayList;
    //   20: ifnull -> 41
    //   23: aload_0
    //   24: getfield mCompatQueue : Ljava/util/ArrayList;
    //   27: invokevirtual size : ()I
    //   30: ifle -> 41
    //   33: aload_0
    //   34: iconst_0
    //   35: invokevirtual ensureProcessorRunningLocked : (Z)V
    //   38: goto -> 55
    //   41: aload_0
    //   42: getfield mDestroyed : Z
    //   45: ifne -> 55
    //   48: aload_0
    //   49: getfield mCompatWorkEnqueuer : Landroid/support/v4/app/JobIntentService$WorkEnqueuer;
    //   52: invokevirtual serviceProcessingFinished : ()V
    //   55: aload_1
    //   56: monitorexit
    //   57: return
    //   58: astore_2
    //   59: aload_1
    //   60: monitorexit
    //   61: aload_2
    //   62: athrow
    //   63: return
    // Exception table:
    //   from	to	target	type
    //   11	38	58	finally
    //   41	55	58	finally
    //   55	57	58	finally
    //   59	61	58	finally }
  
  public void setInterruptIfStopped(boolean paramBoolean) { this.mInterruptIfStopped = paramBoolean; }
}
