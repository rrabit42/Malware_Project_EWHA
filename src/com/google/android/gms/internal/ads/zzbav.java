package com.google.android.gms.internal.ads;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public abstract class zzbav extends zzbag {
  private static final Logger logger = Logger.getLogger(zzbav.class.getName());
  
  private static final boolean zzdqm = zzbek.zzagf();
  
  zzbax zzdqn;
  
  private zzbav() {}
  
  public static int zza(int paramInt, zzbcb paramzzbcb) {
    paramInt = zzcd(paramInt);
    int i = paramzzbcb.zzacw();
    return paramInt + zzcf(i) + i;
  }
  
  public static int zza(zzbcb paramzzbcb) {
    int i = paramzzbcb.zzacw();
    return zzcf(i) + i;
  }
  
  static int zza(zzbcu paramzzbcu, zzbdm paramzzbdm) {
    zzazy zzazy = (zzazy)paramzzbcu;
    int j = zzazy.zzaaw();
    int i = j;
    if (j == -1) {
      i = paramzzbdm.zzy(zzazy);
      zzazy.zzbj(i);
    } 
    return zzcf(i) + i;
  }
  
  public static int zzao(zzbah paramzzbah) {
    int i = paramzzbah.size();
    return zzcf(i) + i;
  }
  
  public static int zzaq(boolean paramBoolean) { return 1; }
  
  public static int zzb(int paramInt, double paramDouble) { return zzcd(paramInt) + 8; }
  
  public static int zzb(int paramInt, float paramFloat) { return zzcd(paramInt) + 4; }
  
  public static int zzb(int paramInt, zzbcb paramzzbcb) { return (zzcd(1) << 1) + zzr(2, paramInt) + zza(3, paramzzbcb); }
  
  public static int zzb(int paramInt, zzbcu paramzzbcu) { return (zzcd(1) << 1) + zzr(2, paramInt) + zzcd(3) + zzf(paramzzbcu); }
  
  static int zzb(int paramInt, zzbcu paramzzbcu, zzbdm paramzzbdm) { return zzcd(paramInt) + zza(paramzzbcu, paramzzbdm); }
  
  public static int zzc(double paramDouble) { return 8; }
  
  public static int zzc(float paramFloat) { return 4; }
  
  public static int zzc(int paramInt, zzbah paramzzbah) {
    paramInt = zzcd(paramInt);
    int i = paramzzbah.size();
    return paramInt + zzcf(i) + i;
  }
  
  @Deprecated
  static int zzc(int paramInt, zzbcu paramzzbcu, zzbdm paramzzbdm) {
    int j = zzcd(paramInt);
    zzazy zzazy = (zzazy)paramzzbcu;
    int i = zzazy.zzaaw();
    paramInt = i;
    if (i == -1) {
      paramInt = paramzzbdm.zzy(zzazy);
      zzazy.zzbj(paramInt);
    } 
    return (j << 1) + paramInt;
  }
  
  public static int zzcd(int paramInt) { return zzcf(paramInt << 3); }
  
  public static int zzce(int paramInt) { return (paramInt >= 0) ? zzcf(paramInt) : 10; }
  
  public static int zzcf(int paramInt) { return ((paramInt & 0xFFFFFF80) == 0) ? 1 : (((paramInt & 0xFFFFC000) == 0) ? 2 : (((0xFFE00000 & paramInt) == 0) ? 3 : (((paramInt & 0xF0000000) == 0) ? 4 : 5))); }
  
  public static int zzcg(int paramInt) { return zzcf(zzck(paramInt)); }
  
  public static int zzch(int paramInt) { return 4; }
  
  public static int zzci(int paramInt) { return 4; }
  
  public static int zzcj(int paramInt) { return zzce(paramInt); }
  
  private static int zzck(int paramInt) { return paramInt >> 31 ^ paramInt << 1; }
  
  @Deprecated
  public static int zzcl(int paramInt) { return zzcf(paramInt); }
  
  public static int zzd(int paramInt, long paramLong) { return zzcd(paramInt) + zzq(paramLong); }
  
  public static int zzd(int paramInt, zzbah paramzzbah) { return (zzcd(1) << 1) + zzr(2, paramInt) + zzc(3, paramzzbah); }
  
  public static int zze(int paramInt, long paramLong) { return zzcd(paramInt) + zzq(paramLong); }
  
  public static int zzeo(String paramString) {
    int i;
    try {
      i = zzbem.zza(paramString);
    } catch (zzbep zzbep) {
      i = paramString.getBytes(zzbbq.UTF_8).length;
    } 
    return zzcf(i) + i;
  }
  
  public static int zzf(int paramInt, long paramLong) { return zzcd(paramInt) + zzq(zzu(paramLong)); }
  
  public static int zzf(zzbcu paramzzbcu) {
    int i = paramzzbcu.zzacw();
    return zzcf(i) + i;
  }
  
  public static int zzg(int paramInt, long paramLong) { return zzcd(paramInt) + 8; }
  
  public static int zzg(int paramInt, String paramString) { return zzcd(paramInt) + zzeo(paramString); }
  
  public static int zzg(int paramInt, boolean paramBoolean) { return zzcd(paramInt) + 1; }
  
  @Deprecated
  public static int zzg(zzbcu paramzzbcu) { return paramzzbcu.zzacw(); }
  
  public static int zzh(int paramInt, long paramLong) { return zzcd(paramInt) + 8; }
  
  public static int zzp(long paramLong) { return zzq(paramLong); }
  
  public static int zzq(int paramInt1, int paramInt2) { return zzcd(paramInt1) + zzce(paramInt2); }
  
  public static int zzq(long paramLong) {
    if ((0xFFFFFFFFFFFFFF80L & paramLong) == 0L)
      return 1; 
    if (paramLong < 0L)
      return 10; 
    if ((0xFFFFFFF800000000L & paramLong) != 0L) {
      b2 = 6;
      paramLong >>>= 28;
    } else {
      b2 = 2;
    } 
    byte b1 = b2;
    long l = paramLong;
    if ((0xFFFFFFFFFFE00000L & paramLong) != 0L) {
      b1 = b2 + 2;
      l = paramLong >>> 14;
    } 
    byte b2 = b1;
    if ((l & 0xFFFFFFFFFFFFC000L) != 0L)
      b2 = b1 + 1; 
    return b2;
  }
  
  public static zzbav zzq(byte[] paramArrayOfByte) { return new zza(paramArrayOfByte, 0, paramArrayOfByte.length); }
  
  public static int zzr(int paramInt1, int paramInt2) { return zzcd(paramInt1) + zzcf(paramInt2); }
  
  public static int zzr(long paramLong) { return zzq(zzu(paramLong)); }
  
  public static int zzr(byte[] paramArrayOfByte) {
    int i = paramArrayOfByte.length;
    return zzcf(i) + i;
  }
  
  public static int zzs(int paramInt1, int paramInt2) { return zzcd(paramInt1) + zzcf(zzck(paramInt2)); }
  
  public static int zzs(long paramLong) { return 8; }
  
  public static int zzt(int paramInt1, int paramInt2) { return zzcd(paramInt1) + 4; }
  
  public static int zzt(long paramLong) { return 8; }
  
  public static int zzu(int paramInt1, int paramInt2) { return zzcd(paramInt1) + 4; }
  
  private static long zzu(long paramLong) { return paramLong >> 63 ^ paramLong << true; }
  
  public static int zzv(int paramInt1, int paramInt2) { return zzcd(paramInt1) + zzce(paramInt2); }
  
  public abstract void write(byte[] paramArrayOfByte, int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zza(byte paramByte) throws IOException;
  
  public final void zza(int paramInt, double paramDouble) throws IOException { zzc(paramInt, Double.doubleToRawLongBits(paramDouble)); }
  
  public final void zza(int paramInt, float paramFloat) throws IOException { zzp(paramInt, Float.floatToRawIntBits(paramFloat)); }
  
  public abstract void zza(int paramInt, long paramLong) throws IOException;
  
  public abstract void zza(int paramInt, zzbah paramzzbah) throws IOException;
  
  public abstract void zza(int paramInt, zzbcu paramzzbcu) throws IOException;
  
  abstract void zza(int paramInt, zzbcu paramzzbcu, zzbdm paramzzbdm) throws IOException;
  
  final void zza(String paramString, zzbep paramzzbep) throws IOException {
    logger.logp(Level.WARNING, "com.google.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", paramzzbep);
    arrayOfByte = paramString.getBytes(zzbbq.UTF_8);
    try {
      zzca(arrayOfByte.length);
      zzb(arrayOfByte, 0, arrayOfByte.length);
      return;
    } catch (IndexOutOfBoundsException arrayOfByte) {
      throw new zzb(arrayOfByte);
    } catch (zzb arrayOfByte) {
      throw arrayOfByte;
    } 
  }
  
  public abstract int zzack();
  
  public final void zzacl() {
    if (zzack() == 0)
      return; 
    throw new IllegalStateException("Did not write as much data as expected.");
  }
  
  public abstract void zzan(zzbah paramzzbah) throws IOException;
  
  public final void zzap(boolean paramBoolean) throws IOException { zza((byte)paramBoolean); }
  
  public final void zzb(double paramDouble) throws IOException { zzo(Double.doubleToRawLongBits(paramDouble)); }
  
  public final void zzb(float paramFloat) throws IOException { zzcc(Float.floatToRawIntBits(paramFloat)); }
  
  public final void zzb(int paramInt, long paramLong) throws IOException { zza(paramInt, zzu(paramLong)); }
  
  public abstract void zzb(int paramInt, zzbah paramzzbah) throws IOException;
  
  public abstract void zzbz(int paramInt) throws IOException;
  
  public abstract void zzc(int paramInt, long paramLong) throws IOException;
  
  public abstract void zzca(int paramInt) throws IOException;
  
  public final void zzcb(int paramInt) throws IOException { zzca(zzck(paramInt)); }
  
  public abstract void zzcc(int paramInt) throws IOException;
  
  public abstract void zze(zzbcu paramzzbcu) throws IOException;
  
  abstract void zze(byte[] paramArrayOfByte, int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zzen(String paramString) throws IOException;
  
  public abstract void zzf(int paramInt, String paramString) throws IOException;
  
  public abstract void zzf(int paramInt, boolean paramBoolean) throws IOException;
  
  public abstract void zzl(int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zzm(int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zzm(long paramLong) throws IOException;
  
  public abstract void zzn(int paramInt1, int paramInt2) throws IOException;
  
  public final void zzn(long paramLong) throws IOException { zzm(zzu(paramLong)); }
  
  public final void zzo(int paramInt1, int paramInt2) throws IOException { zzn(paramInt1, zzck(paramInt2)); }
  
  public abstract void zzo(long paramLong) throws IOException;
  
  public abstract void zzp(int paramInt1, int paramInt2) throws IOException;
}
