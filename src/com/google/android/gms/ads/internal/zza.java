package com.google.android.gms.ads.internal;

import android.os.Bundle;
import android.os.RemoteException;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.view.View;
import android.view.ViewParent;
import com.google.android.gms.ads.internal.gmsg.zzb;
import com.google.android.gms.ads.internal.gmsg.zzd;
import com.google.android.gms.ads.internal.overlay.zzt;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.DeviceProperties;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.internal.ads.zzaaw;
import com.google.android.gms.internal.ads.zzabc;
import com.google.android.gms.internal.ads.zzabm;
import com.google.android.gms.internal.ads.zzadh;
import com.google.android.gms.internal.ads.zzadj;
import com.google.android.gms.internal.ads.zzagx;
import com.google.android.gms.internal.ads.zzahe;
import com.google.android.gms.internal.ads.zzaig;
import com.google.android.gms.internal.ads.zzajb;
import com.google.android.gms.internal.ads.zzajh;
import com.google.android.gms.internal.ads.zzaji;
import com.google.android.gms.internal.ads.zzajj;
import com.google.android.gms.internal.ads.zzajs;
import com.google.android.gms.internal.ads.zzaju;
import com.google.android.gms.internal.ads.zzajz;
import com.google.android.gms.internal.ads.zzakb;
import com.google.android.gms.internal.ads.zzane;
import com.google.android.gms.internal.ads.zzasi;
import com.google.android.gms.internal.ads.zzes;
import com.google.android.gms.internal.ads.zzhs;
import com.google.android.gms.internal.ads.zzhu;
import com.google.android.gms.internal.ads.zzjd;
import com.google.android.gms.internal.ads.zzjj;
import com.google.android.gms.internal.ads.zzjk;
import com.google.android.gms.internal.ads.zzjn;
import com.google.android.gms.internal.ads.zzkb;
import com.google.android.gms.internal.ads.zzke;
import com.google.android.gms.internal.ads.zzkh;
import com.google.android.gms.internal.ads.zzkt;
import com.google.android.gms.internal.ads.zzkx;
import com.google.android.gms.internal.ads.zzla;
import com.google.android.gms.internal.ads.zzlg;
import com.google.android.gms.internal.ads.zzlo;
import com.google.android.gms.internal.ads.zzlu;
import com.google.android.gms.internal.ads.zzms;
import com.google.android.gms.internal.ads.zzmu;
import com.google.android.gms.internal.ads.zzna;
import com.google.android.gms.internal.ads.zznk;
import com.google.android.gms.internal.ads.zznv;
import com.google.android.gms.internal.ads.zznx;
import com.google.android.gms.internal.ads.zzod;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;
import java.util.concurrent.CountDownLatch;
import javax.annotation.ParametersAreNonnullByDefault;
import org.json.JSONException;
import org.json.JSONObject;

@zzadh
@ParametersAreNonnullByDefault
public abstract class zza extends zzkt implements zzb, zzd, zzt, zzabm, zzadj, zzajs, zzjd {
  protected zznx zzvr;
  
  protected zznv zzvs;
  
  private zznv zzvt;
  
  protected boolean zzvu = false;
  
  protected final zzbl zzvv;
  
  protected final zzbw zzvw;
  
  @Nullable
  protected zzjj zzvx;
  
  protected final zzes zzvy;
  
  private final Bundle zzvz = new Bundle();
  
  private boolean zzwa = false;
  
  @Nullable
  protected IObjectWrapper zzwb;
  
  protected final zzw zzwc;
  
  @VisibleForTesting
  zza(zzbw paramzzbw, @Nullable zzbl paramzzbl, zzw paramzzw) {
    this.zzvw = paramzzbw;
    this.zzvv = new zzbl(this);
    this.zzwc = paramzzw;
    zzbv.zzek().zzak(this.zzvw.zzrt);
    zzbv.zzek().zzal(this.zzvw.zzrt);
    zzajz.zzai(this.zzvw.zzrt);
    zzbv.zzfi().initialize(this.zzvw.zzrt);
    zzbv.zzeo().zzd(this.zzvw.zzrt, this.zzvw.zzacr);
    zzbv.zzeq().initialize(this.zzvw.zzrt);
    this.zzvy = zzbv.zzeo().zzqd();
    zzbv.zzen().initialize(this.zzvw.zzrt);
    zzbv.zzfk().initialize(this.zzvw.zzrt);
    zzna zzna = zznk.zzbci;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue()) {
      Timer timer = new Timer();
      zzna zzna1 = zznk.zzbck;
      zzb zzb1 = new zzb(this, new CountDownLatch(((Integer)zzkb.zzik().zzd(zzna1)).intValue()), timer);
      zzna zzna2 = zznk.zzbcj;
      timer.schedule(zzb1, 0L, ((Long)zzkb.zzik().zzd(zzna2)).longValue());
    } 
  }
  
  protected static boolean zza(zzjj paramzzjj) {
    Bundle bundle = paramzzjj.zzaqg.getBundle("com.google.ads.mediation.admob.AdMobAdapter");
    return (bundle == null || !bundle.containsKey("gw"));
  }
  
  @VisibleForTesting
  private static long zzq(String paramString) {
    int k = paramString.indexOf("ufe");
    int j = paramString.indexOf(',', k);
    int i = j;
    if (j == -1)
      i = paramString.length(); 
    try {
      return Long.parseLong(paramString.substring(k + 4, i));
    } catch (IndexOutOfBoundsException paramString) {
    
    } catch (NumberFormatException paramString) {}
    zzane.zzb("", paramString);
    return -1L;
  }
  
  public void destroy() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: destroy");
    this.zzvv.cancel();
    this.zzvy.zzi(this.zzvw.zzacw);
    zzbw zzbw1 = this.zzvw;
    if (zzbw1.zzacs != null)
      zzbw1.zzacs.zzfs(); 
    zzbw1.zzada = null;
    zzbw1.zzadc = null;
    zzbw1.zzadb = null;
    zzbw1.zzado = null;
    zzbw1.zzadd = null;
    zzbw1.zzg(false);
    if (zzbw1.zzacs != null)
      zzbw1.zzacs.removeAllViews(); 
    zzbw1.zzfm();
    zzbw1.zzfn();
    zzbw1.zzacw = null;
  }
  
  public String getAdUnitId() { return this.zzvw.zzacp; }
  
  public zzlo getVideoController() { return null; }
  
  public final boolean isLoading() { return this.zzvu; }
  
  public final boolean isReady() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: isLoaded");
    return (this.zzvw.zzact == null && this.zzvw.zzacu == null && this.zzvw.zzacw != null);
  }
  
  public void onAdClicked() {
    if (this.zzvw.zzacw == null) {
      zzakb.zzdk("Ad state was null when trying to ping click URLs.");
      return;
    } 
    zzakb.zzck("Pinging click URLs.");
    if (this.zzvw.zzacy != null)
      this.zzvw.zzacy.zzpn(); 
    if (this.zzvw.zzacw.zzbsn != null)
      zzbv.zzek().zza(this.zzvw.zzrt, this.zzvw.zzacr.zzcw, zzc(this.zzvw.zzacw.zzbsn)); 
    if (this.zzvw.zzacz != null)
      try {
        this.zzvw.zzacz.onAdClicked();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  public final void onAppEvent(String paramString1, @Nullable String paramString2) {
    if (this.zzvw.zzadb != null)
      try {
        this.zzvw.zzadb.onAppEvent(paramString1, paramString2);
        return;
      } catch (RemoteException paramString1) {
        zzakb.zzd("#007 Could not call remote method.", paramString1);
      }  
  }
  
  public void pause() { Preconditions.checkMainThread("#008 Must be called on the main UI thread.: pause"); }
  
  public void resume() { Preconditions.checkMainThread("#008 Must be called on the main UI thread.: resume"); }
  
  public void setImmersiveMode(boolean paramBoolean) { throw new IllegalStateException("#005 Unexpected call to an abstract (unimplemented) method."); }
  
  public void setManualImpressionsEnabled(boolean paramBoolean) { zzakb.zzdk("Attempt to call setManualImpressionsEnabled for an unsupported ad type."); }
  
  public final void setUserId(String paramString) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setUserId");
    this.zzvw.zzadr = paramString;
  }
  
  public final void stopLoading() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: stopLoading");
    this.zzvu = false;
    this.zzvw.zzg(true);
  }
  
  public void zza(zzaaw paramzzaaw) { zzakb.zzdk("#006 Unexpected call to a deprecated method."); }
  
  public final void zza(zzabc paramzzabc, String paramString) { zzakb.zzdk("#006 Unexpected call to a deprecated method."); }
  
  public final void zza(zzagx paramzzagx) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setRewardedAdSkuListener");
    this.zzvw.zzadq = paramzzagx;
  }
  
  public final void zza(zzahe paramzzahe) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setRewardedVideoAdListener");
    this.zzvw.zzadp = paramzzahe;
  }
  
  protected final void zza(@Nullable zzaig paramzzaig) { // Byte code:
    //   0: aload_0
    //   1: getfield zzvw : Lcom/google/android/gms/ads/internal/zzbw;
    //   4: getfield zzadp : Lcom/google/android/gms/internal/ads/zzahe;
    //   7: ifnonnull -> 11
    //   10: return
    //   11: ldc ''
    //   13: astore_3
    //   14: iconst_1
    //   15: istore_2
    //   16: aload_1
    //   17: ifnull -> 30
    //   20: aload_1
    //   21: getfield type : Ljava/lang/String;
    //   24: astore_3
    //   25: aload_1
    //   26: getfield zzcmk : I
    //   29: istore_2
    //   30: new com/google/android/gms/internal/ads/zzagp
    //   33: dup
    //   34: aload_3
    //   35: iload_2
    //   36: invokespecial <init> : (Ljava/lang/String;I)V
    //   39: astore_1
    //   40: aload_0
    //   41: getfield zzvw : Lcom/google/android/gms/ads/internal/zzbw;
    //   44: getfield zzadp : Lcom/google/android/gms/internal/ads/zzahe;
    //   47: aload_1
    //   48: invokeinterface zza : (Lcom/google/android/gms/internal/ads/zzagu;)V
    //   53: aload_0
    //   54: getfield zzvw : Lcom/google/android/gms/ads/internal/zzbw;
    //   57: getfield zzadq : Lcom/google/android/gms/internal/ads/zzagx;
    //   60: ifnull -> 89
    //   63: aload_0
    //   64: getfield zzvw : Lcom/google/android/gms/ads/internal/zzbw;
    //   67: getfield zzadq : Lcom/google/android/gms/internal/ads/zzagx;
    //   70: aload_1
    //   71: aload_0
    //   72: getfield zzvw : Lcom/google/android/gms/ads/internal/zzbw;
    //   75: getfield zzacx : Lcom/google/android/gms/internal/ads/zzaji;
    //   78: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   81: getfield zzcdi : Ljava/lang/String;
    //   84: invokeinterface zza : (Lcom/google/android/gms/internal/ads/zzagu;Ljava/lang/String;)V
    //   89: return
    //   90: astore_1
    //   91: ldc_w '#007 Could not call remote method.'
    //   94: aload_1
    //   95: invokestatic zzd : (Ljava/lang/String;Ljava/lang/Throwable;)V
    //   98: return
    // Exception table:
    //   from	to	target	type
    //   20	30	90	android/os/RemoteException
    //   30	89	90	android/os/RemoteException }
  
  public final void zza(zzaji paramzzaji) {
    if (paramzzaji.zzcos.zzceu != -1L && !TextUtils.isEmpty(paramzzaji.zzcos.zzcfd)) {
      long l = zzq(paramzzaji.zzcos.zzcfd);
      if (l != -1L) {
        zznv zznv1 = this.zzvr.zzd(paramzzaji.zzcos.zzceu + l);
        this.zzvr.zza(zznv1, new String[] { "stc" });
      } 
    } 
    this.zzvr.zzan(paramzzaji.zzcos.zzcfd);
    this.zzvr.zza(this.zzvs, new String[] { "arf" });
    this.zzvt = this.zzvr.zzjj();
    this.zzvr.zze("gqi", paramzzaji.zzcos.zzamj);
    zzbw zzbw1 = this.zzvw;
    zzbw1.zzact = null;
    zzbw1.zzacx = paramzzaji;
    paramzzaji.zzcoq.zza(new zzc(this, paramzzaji));
    paramzzaji.zzcoq.zza(zzhu.zza.zzb.zzakk);
    zza(paramzzaji, this.zzvr);
  }
  
  protected abstract void zza(zzaji paramzzaji, zznx paramzznx);
  
  public final void zza(zzjn paramzzjn) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setAdSize");
    zzbw zzbw1 = this.zzvw;
    zzbw1.zzacv = paramzzjn;
    if (zzbw1.zzacw != null && this.zzvw.zzacw.zzbyo != null && this.zzvw.zzadv == 0)
      this.zzvw.zzacw.zzbyo.zza(zzasi.zzb(paramzzjn)); 
    if (this.zzvw.zzacs == null)
      return; 
    if (this.zzvw.zzacs.getChildCount() > 1)
      this.zzvw.zzacs.removeView(this.zzvw.zzacs.getNextView()); 
    this.zzvw.zzacs.setMinimumWidth(paramzzjn.widthPixels);
    this.zzvw.zzacs.setMinimumHeight(paramzzjn.heightPixels);
    this.zzvw.zzacs.requestLayout();
  }
  
  public final void zza(zzke paramzzke) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setAdClickListener");
    this.zzvw.zzacz = paramzzke;
  }
  
  public final void zza(zzkh paramzzkh) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setAdListener");
    this.zzvw.zzada = paramzzkh;
  }
  
  public final void zza(zzkx paramzzkx) { this.zzvw.zzadc = paramzzkx; }
  
  public final void zza(zzla paramzzla) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setAppEventListener");
    this.zzvw.zzadb = paramzzla;
  }
  
  public final void zza(zzlg paramzzlg) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setCorrelationIdProvider");
    this.zzvw.zzadd = paramzzlg;
  }
  
  public final void zza(@Nullable zzlu paramzzlu) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setIconAdOptions");
    this.zzvw.zzadl = paramzzlu;
  }
  
  public final void zza(@Nullable zzmu paramzzmu) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: setVideoOptions");
    this.zzvw.zzadk = paramzzmu;
  }
  
  public final void zza(zznv paramzznv) {
    zzna zzna = zznk.zzawh;
    this.zzvr = new zznx(((Boolean)zzkb.zzik().zzd(zzna)).booleanValue(), "load_ad", this.zzvw.zzacv.zzarb);
    this.zzvt = new zznv(-1L, null, null);
    if (paramzznv == null) {
      this.zzvs = new zznv(-1L, null, null);
      return;
    } 
    this.zzvs = new zznv(paramzznv.getTime(), paramzznv.zzjg(), paramzznv.zzjh());
  }
  
  public void zza(zzod paramzzod) { throw new IllegalStateException("#005 Unexpected call to an abstract (unimplemented) method."); }
  
  public final void zza(String paramString, Bundle paramBundle) {
    this.zzvz.putAll(paramBundle);
    if (this.zzwa && this.zzvw.zzadc != null)
      try {
        this.zzvw.zzadc.zzt();
        return;
      } catch (RemoteException paramString) {
        zzakb.zzd("#007 Could not call remote method.", paramString);
      }  
  }
  
  public final void zza(HashSet<zzajj> paramHashSet) { this.zzvw.zza(paramHashSet); }
  
  boolean zza(zzajh paramzzajh) { return false; }
  
  protected abstract boolean zza(@Nullable zzajh paramzzajh1, zzajh paramzzajh2);
  
  protected abstract boolean zza(zzjj paramzzjj, zznx paramzznx);
  
  protected final List<String> zzb(List<String> paramList) {
    ArrayList arrayList = new ArrayList(paramList.size());
    Iterator iterator = paramList.iterator();
    while (iterator.hasNext())
      arrayList.add(zzajb.zzc((String)iterator.next(), this.zzvw.zzrt)); 
    return arrayList;
  }
  
  public void zzb(zzajh paramzzajh) {
    this.zzvr.zza(this.zzvt, new String[] { "awr" });
    this.zzvw.zzacu = null;
    if (paramzzajh.errorCode != -2 && paramzzajh.errorCode != 3 && this.zzvw.zzfl() != null)
      zzbv.zzep().zzb(this.zzvw.zzfl()); 
    if (paramzzajh.errorCode == -1) {
      this.zzvu = false;
      return;
    } 
    if (zza(paramzzajh))
      zzakb.zzck("Ad refresh scheduled."); 
    if (paramzzajh.errorCode != -2) {
      zzhu.zza.zzb zzb1;
      zzhs zzhs;
      if (paramzzajh.errorCode == 3) {
        zzhs = paramzzajh.zzcoq;
        zzb1 = zzhu.zza.zzb.zzakm;
      } else {
        zzhs = paramzzajh.zzcoq;
        zzb1 = zzhu.zza.zzb.zzakl;
      } 
      zzhs.zza(zzb1);
      zzi(paramzzajh.errorCode);
      return;
    } 
    if (this.zzvw.zzadt == null) {
      zzbw zzbw1 = this.zzvw;
      zzbw1.zzadt = new zzaju(zzbw1.zzacp);
    } 
    if (this.zzvw.zzacs != null)
      this.zzvw.zzacs.zzfr().zzdc(paramzzajh.zzcfl); 
    this.zzvy.zzh(this.zzvw.zzacw);
    if (zza(this.zzvw.zzacw, paramzzajh)) {
      String str1 = this.zzvw;
      str1.zzacw = paramzzajh;
      if (str1.zzacy != null) {
        if (str1.zzacw != null) {
          str1.zzacy.zzh(str1.zzacw.zzcoh);
          str1.zzacy.zzi(str1.zzacw.zzcoi);
          str1.zzacy.zzz(str1.zzacw.zzceq);
        } 
        str1.zzacy.zzy(str1.zzacv.zzarc);
      } 
      zznx zznx1 = this.zzvr;
      boolean bool = this.zzvw.zzacw.zzfz();
      String str2 = "1";
      if (bool) {
        String str = "1";
      } else {
        str1 = "0";
      } 
      zznx1.zze("is_mraid", str1);
      zznx1 = this.zzvr;
      if (this.zzvw.zzacw.zzceq) {
        str1 = "1";
      } else {
        str1 = "0";
      } 
      zznx1.zze("is_mediation", str1);
      if (this.zzvw.zzacw.zzbyo != null && this.zzvw.zzacw.zzbyo.zzuf() != null) {
        zznx1 = this.zzvr;
        if (this.zzvw.zzacw.zzbyo.zzuf().zzux()) {
          str1 = str2;
        } else {
          str1 = "0";
        } 
        zznx1.zze("is_delay_pl", str1);
      } 
      this.zzvr.zza(this.zzvs, new String[] { "ttc" });
      if (zzbv.zzeo().zzpy() != null)
        zzbv.zzeo().zzpy().zza(this.zzvr); 
      zzbv();
      if (this.zzvw.zzfo())
        zzbq(); 
    } 
    if (paramzzajh.zzbsr != null)
      zzbv.zzek().zza(this.zzvw.zzrt, paramzzajh.zzbsr); 
  }
  
  protected void zzb(boolean paramBoolean) {
    zzakb.v("Ad finished loading.");
    this.zzvu = paramBoolean;
    this.zzwa = true;
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdLoaded();
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
    if (this.zzvw.zzadp != null)
      try {
        this.zzvw.zzadp.onRewardedVideoAdLoaded();
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
    if (this.zzvw.zzadc != null)
      try {
        this.zzvw.zzadc.zzt();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  public boolean zzb(zzjj paramzzjj) {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: loadAd");
    zzbv.zzeq().zzhh();
    this.zzvz.clear();
    this.zzwa = false;
    zzna zzna = zznk.zzayo;
    String str = paramzzjj;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue()) {
      paramzzjj = paramzzjj.zzhv();
      zzna = zznk.zzayp;
      str = paramzzjj;
      if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue()) {
        paramzzjj.extras.putBoolean("_newBundle", true);
        str = paramzzjj;
      } 
    } 
    paramzzjj = str;
    if (DeviceProperties.isSidewinder(this.zzvw.zzrt)) {
      paramzzjj = str;
      if (str.zzaqe != null)
        paramzzjj = (new zzjk(str)).zza(null).zzhw(); 
    } 
    if (this.zzvw.zzact != null || this.zzvw.zzacu != null) {
      String str1;
      if (this.zzvx != null) {
        str1 = "Aborting last ad request since another ad request is already in progress. The current request object will still be cached for future refreshes.";
      } else {
        str1 = "Loading already in progress, saving this object for future refreshes.";
      } 
      zzakb.zzdk(str1);
      this.zzvx = paramzzjj;
      return false;
    } 
    zzakb.zzdj("Starting ad request.");
    zza(null);
    this.zzvs = this.zzvr.zzjj();
    if (paramzzjj.zzapz) {
      String str1 = "This request is sent from a test device.";
    } else {
      StringBuilder stringBuilder = new StringBuilder((str = zzkb.zzif().zzbc(this.zzvw.zzrt)).valueOf(str).length() + 71);
      stringBuilder.append("Use AdRequest.Builder.addTestDevice(\"");
      stringBuilder.append(str);
      stringBuilder.append("\") to get test ads on this device.");
      str = stringBuilder.toString();
    } 
    zzakb.zzdj(str);
    this.zzvv.zzf(paramzzjj);
    this.zzvu = zza(paramzzjj, this.zzvr);
    return this.zzvu;
  }
  
  public final Bundle zzba() { return this.zzwa ? this.zzvz : new Bundle(); }
  
  public final zzw zzbi() { return this.zzwc; }
  
  public final IObjectWrapper zzbj() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: getAdFrame");
    return ObjectWrapper.wrap(this.zzvw.zzacs);
  }
  
  @Nullable
  public final zzjn zzbk() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: getAdSize");
    return (this.zzvw.zzacv == null) ? null : new zzms(this.zzvw.zzacv);
  }
  
  public final void zzbl() { zzbo(); }
  
  public final void zzbm() {
    Preconditions.checkMainThread("#008 Must be called on the main UI thread.: recordManualImpression");
    if (this.zzvw.zzacw == null) {
      zzakb.zzdk("Ad state was null when trying to ping manual tracking URLs.");
      return;
    } 
    zzakb.zzck("Pinging manual tracking URLs.");
    if (!this.zzvw.zzacw.zzcoo) {
      ArrayList arrayList = new ArrayList();
      if (this.zzvw.zzacw.zzces != null)
        arrayList.addAll(this.zzvw.zzacw.zzces); 
      if (this.zzvw.zzacw.zzbtw != null && this.zzvw.zzacw.zzbtw.zzbrz != null)
        arrayList.addAll(this.zzvw.zzacw.zzbtw.zzbrz); 
      if (arrayList.isEmpty())
        return; 
      zzbv.zzek().zza(this.zzvw.zzrt, this.zzvw.zzacr.zzcw, arrayList);
      this.zzvw.zzacw.zzcoo = true;
    } 
  }
  
  protected void zzbn() {
    zzakb.v("Ad closing.");
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdClosed();
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
    if (this.zzvw.zzadp != null)
      try {
        this.zzvw.zzadp.onRewardedVideoAdClosed();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  protected final void zzbo() {
    zzakb.v("Ad leaving application.");
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdLeftApplication();
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
    if (this.zzvw.zzadp != null)
      try {
        this.zzvw.zzadp.onRewardedVideoAdLeftApplication();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  protected final void zzbp() {
    zzakb.v("Ad opening.");
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdOpened();
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
    if (this.zzvw.zzadp != null)
      try {
        this.zzvw.zzadp.onRewardedVideoAdOpened();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  protected void zzbq() { zzb(false); }
  
  public final void zzbr() {
    zzakb.zzdj("Ad impression.");
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdImpression();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  public final void zzbs() {
    zzakb.zzdj("Ad clicked.");
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdClicked();
        return;
      } catch (RemoteException remoteException) {
        zzakb.zzd("#007 Could not call remote method.", remoteException);
      }  
  }
  
  protected final void zzbt() {
    if (this.zzvw.zzadp == null)
      return; 
    try {
      this.zzvw.zzadp.onRewardedVideoStarted();
      return;
    } catch (RemoteException remoteException) {
      zzakb.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  protected final void zzbu() {
    if (this.zzvw.zzadp == null)
      return; 
    try {
      this.zzvw.zzadp.onRewardedVideoCompleted();
      return;
    } catch (RemoteException remoteException) {
      zzakb.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final void zzbv() {
    zzajh zzajh = this.zzvw.zzacw;
    if (zzajh != null && !TextUtils.isEmpty(zzajh.zzcfl) && !zzajh.zzcop) {
      if (!zzbv.zzeu().zzrx())
        return; 
      zzakb.zzck("Sending troubleshooting signals to the server.");
      zzbv.zzeu().zzb(this.zzvw.zzrt, this.zzvw.zzacr.zzcw, zzajh.zzcfl, this.zzvw.zzacp);
      zzajh.zzcop = true;
    } 
  }
  
  public final zzla zzbw() { return this.zzvw.zzadb; }
  
  public final zzkh zzbx() { return this.zzvw.zzada; }
  
  protected final void zzby() {
    if (this.zzwb != null) {
      zzbv.zzfa().zzn(this.zzwb);
      this.zzwb = null;
    } 
  }
  
  @Nullable
  protected final String zzbz() {
    zzaji zzaji = this.zzvw.zzacx;
    if (zzaji == null)
      return "javascript"; 
    if (zzaji.zzcos == null)
      return "javascript"; 
    str = zzaji.zzcos.zzcfq;
    if (TextUtils.isEmpty(str))
      return "javascript"; 
    try {
      int i = (new JSONObject(str)).optInt("media_type", -1);
      return (i == 0) ? null : "javascript";
    } catch (JSONException str) {
      zzane.zzc("", str);
      return "javascript";
    } 
  }
  
  protected final List<String> zzc(List<String> paramList) {
    ArrayList arrayList = new ArrayList(paramList.size());
    Iterator iterator = paramList.iterator();
    while (iterator.hasNext())
      arrayList.add(zzajb.zzb((String)iterator.next(), this.zzvw.zzrt)); 
    return arrayList;
  }
  
  protected void zzc(int paramInt, boolean paramBoolean) {
    stringBuilder = new StringBuilder(30);
    stringBuilder.append("Failed to load ad: ");
    stringBuilder.append(paramInt);
    zzakb.zzdk(stringBuilder.toString());
    this.zzvu = paramBoolean;
    if (this.zzvw.zzada != null)
      try {
        this.zzvw.zzada.onAdFailedToLoad(paramInt);
      } catch (RemoteException stringBuilder) {
        zzakb.zzd("#007 Could not call remote method.", stringBuilder);
      }  
    if (this.zzvw.zzadp != null)
      try {
        this.zzvw.zzadp.onRewardedVideoAdFailedToLoad(paramInt);
        return;
      } catch (RemoteException stringBuilder) {
        zzakb.zzd("#007 Could not call remote method.", stringBuilder);
      }  
  }
  
  protected boolean zzc(zzjj paramzzjj) {
    if (this.zzvw.zzacs == null)
      return false; 
    ViewParent viewParent = this.zzvw.zzacs.getParent();
    if (!(viewParent instanceof View))
      return false; 
    View view = (View)viewParent;
    return zzbv.zzek().zza(view, view.getContext());
  }
  
  protected final void zzg(View paramView) {
    zzbx zzbx = this.zzvw.zzacs;
    if (zzbx != null)
      zzbx.addView(paramView, zzbv.zzem().zzro()); 
  }
  
  protected void zzi(int paramInt) { zzc(paramInt, false); }
}
