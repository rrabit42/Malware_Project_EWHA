package androidx.work.impl.constraints.controllers;

import android.content.Context;
import android.os.Build;
import android.support.annotation.NonNull;
import androidx.work.Logger;
import androidx.work.NetworkType;
import androidx.work.impl.constraints.NetworkState;
import androidx.work.impl.constraints.trackers.Trackers;
import androidx.work.impl.model.WorkSpec;

public class NetworkMeteredController extends ConstraintController<NetworkState> {
  private static final String TAG = Logger.tagWithPrefix("NetworkMeteredCtrlr");
  
  public NetworkMeteredController(Context paramContext) { super(Trackers.getInstance(paramContext).getNetworkStateTracker()); }
  
  boolean hasConstraint(@NonNull WorkSpec paramWorkSpec) { return (paramWorkSpec.constraints.getRequiredNetworkType() == NetworkType.METERED); }
  
  boolean isConstrained(@NonNull NetworkState paramNetworkState) {
    int i = Build.VERSION.SDK_INT;
    boolean bool = true;
    if (i < 26) {
      Logger.get().debug(TAG, "Metered network constraint is not supported before API 26, only checking for connected state.", new Throwable[0]);
      return paramNetworkState.isConnected() ^ true;
    } 
    if (paramNetworkState.isConnected()) {
      if (!paramNetworkState.isMetered())
        return true; 
      bool = false;
    } 
    return bool;
  }
}
