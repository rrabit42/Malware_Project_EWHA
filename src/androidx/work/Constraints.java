package androidx.work;

import android.arch.persistence.room.ColumnInfo;
import android.os.Build;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.RequiresApi;
import android.support.annotation.RestrictTo;

public final class Constraints {
  public static final Constraints NONE = (new Builder()).build();
  
  @ColumnInfo(name = "content_uri_triggers")
  private ContentUriTriggers mContentUriTriggers = new ContentUriTriggers();
  
  @ColumnInfo(name = "required_network_type")
  private NetworkType mRequiredNetworkType = NetworkType.NOT_REQUIRED;
  
  @ColumnInfo(name = "requires_battery_not_low")
  private boolean mRequiresBatteryNotLow;
  
  @ColumnInfo(name = "requires_charging")
  private boolean mRequiresCharging;
  
  @ColumnInfo(name = "requires_device_idle")
  private boolean mRequiresDeviceIdle;
  
  @ColumnInfo(name = "requires_storage_not_low")
  private boolean mRequiresStorageNotLow;
  
  @ColumnInfo(name = "trigger_content_update_delay")
  private long mTriggerContentUpdateDelay = -1L;
  
  @ColumnInfo(name = "trigger_max_content_delay")
  private long mTriggerMaxContentDelay = -1L;
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public Constraints() {}
  
  Constraints(Builder paramBuilder) {
    this.mRequiresCharging = paramBuilder.mRequiresCharging;
    if (Build.VERSION.SDK_INT >= 23 && paramBuilder.mRequiresDeviceIdle) {
      bool = true;
    } else {
      bool = false;
    } 
    this.mRequiresDeviceIdle = bool;
    this.mRequiredNetworkType = paramBuilder.mRequiredNetworkType;
    this.mRequiresBatteryNotLow = paramBuilder.mRequiresBatteryNotLow;
    this.mRequiresStorageNotLow = paramBuilder.mRequiresStorageNotLow;
    if (Build.VERSION.SDK_INT >= 24) {
      this.mContentUriTriggers = paramBuilder.mContentUriTriggers;
      this.mTriggerContentUpdateDelay = paramBuilder.mTriggerContentUpdateDelay;
      this.mTriggerMaxContentDelay = paramBuilder.mTriggerContentMaxDelay;
    } 
  }
  
  public Constraints(@NonNull Constraints paramConstraints) {
    this.mRequiresCharging = paramConstraints.mRequiresCharging;
    this.mRequiresDeviceIdle = paramConstraints.mRequiresDeviceIdle;
    this.mRequiredNetworkType = paramConstraints.mRequiredNetworkType;
    this.mRequiresBatteryNotLow = paramConstraints.mRequiresBatteryNotLow;
    this.mRequiresStorageNotLow = paramConstraints.mRequiresStorageNotLow;
    this.mContentUriTriggers = paramConstraints.mContentUriTriggers;
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject != null) {
      if (getClass() != paramObject.getClass())
        return false; 
      paramObject = (Constraints)paramObject;
      return (this.mRequiresCharging != paramObject.mRequiresCharging) ? false : ((this.mRequiresDeviceIdle != paramObject.mRequiresDeviceIdle) ? false : ((this.mRequiresBatteryNotLow != paramObject.mRequiresBatteryNotLow) ? false : ((this.mRequiresStorageNotLow != paramObject.mRequiresStorageNotLow) ? false : ((this.mTriggerContentUpdateDelay != paramObject.mTriggerContentUpdateDelay) ? false : ((this.mTriggerMaxContentDelay != paramObject.mTriggerMaxContentDelay) ? false : ((this.mRequiredNetworkType != paramObject.mRequiredNetworkType) ? false : this.mContentUriTriggers.equals(paramObject.mContentUriTriggers)))))));
    } 
    return false;
  }
  
  @NonNull
  @RequiresApi(24)
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public ContentUriTriggers getContentUriTriggers() { return this.mContentUriTriggers; }
  
  @NonNull
  public NetworkType getRequiredNetworkType() { return this.mRequiredNetworkType; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public long getTriggerContentUpdateDelay() { return this.mTriggerContentUpdateDelay; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public long getTriggerMaxContentDelay() { return this.mTriggerMaxContentDelay; }
  
  @RequiresApi(24)
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public boolean hasContentUriTriggers() { return (this.mContentUriTriggers.size() > 0); }
  
  public int hashCode() { throw new RuntimeException("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:311)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n"); }
  
  public boolean requiresBatteryNotLow() { return this.mRequiresBatteryNotLow; }
  
  public boolean requiresCharging() { return this.mRequiresCharging; }
  
  @RequiresApi(23)
  public boolean requiresDeviceIdle() { return this.mRequiresDeviceIdle; }
  
  public boolean requiresStorageNotLow() { return this.mRequiresStorageNotLow; }
  
  @RequiresApi(24)
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setContentUriTriggers(@Nullable ContentUriTriggers paramContentUriTriggers) { this.mContentUriTriggers = paramContentUriTriggers; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setRequiredNetworkType(@NonNull NetworkType paramNetworkType) { this.mRequiredNetworkType = paramNetworkType; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setRequiresBatteryNotLow(boolean paramBoolean) { this.mRequiresBatteryNotLow = paramBoolean; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setRequiresCharging(boolean paramBoolean) { this.mRequiresCharging = paramBoolean; }
  
  @RequiresApi(23)
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setRequiresDeviceIdle(boolean paramBoolean) { this.mRequiresDeviceIdle = paramBoolean; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setRequiresStorageNotLow(boolean paramBoolean) { this.mRequiresStorageNotLow = paramBoolean; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setTriggerContentUpdateDelay(long paramLong) { this.mTriggerContentUpdateDelay = paramLong; }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public void setTriggerMaxContentDelay(long paramLong) { this.mTriggerMaxContentDelay = paramLong; }
}
