package androidx.work.impl.utils;

import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.support.annotation.NonNull;
import androidx.work.Logger;

public class PackageManagerHelper {
  private static final String TAG = Logger.tagWithPrefix("PackageManagerHelper");
  
  public static boolean isComponentExplicitlyEnabled(Context paramContext, Class paramClass) { return isComponentExplicitlyEnabled(paramContext, paramClass.getName()); }
  
  public static boolean isComponentExplicitlyEnabled(Context paramContext, String paramString) { return (paramContext.getPackageManager().getComponentEnabledSetting(new ComponentName(paramContext, paramString)) == 1); }
  
  public static void setComponentEnabled(@NonNull Context paramContext, @NonNull Class paramClass, boolean paramBoolean) {
    String str = "enabled";
    try {
      byte b;
      PackageManager packageManager = paramContext.getPackageManager();
      String str1 = new ComponentName(paramContext, paramClass.getName());
      if (paramBoolean) {
        b = 1;
      } else {
        b = 2;
      } 
      packageManager.setComponentEnabledSetting(str1, b, 1);
      Logger logger = Logger.get();
      String str2 = TAG;
      String str3 = paramClass.getName();
      if (paramBoolean) {
        String str4 = "enabled";
      } else {
        str1 = "disabled";
      } 
      logger.debug(str2, String.format("%s %s", new Object[] { str3, str1 }), new Throwable[0]);
      return;
    } catch (Exception exception) {
      String str1;
      Logger logger = Logger.get();
      String str3 = TAG;
      String str2 = paramClass.getName();
      if (paramBoolean) {
        str1 = str;
      } else {
        str1 = "disabled";
      } 
      logger.debug(str3, String.format("%s could not be %s", new Object[] { str2, str1 }), new Throwable[] { exception });
      return;
    } 
  }
}
