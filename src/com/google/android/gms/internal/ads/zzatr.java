package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.Bundle;
import android.os.HandlerThread;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.internal.BaseGmsClient;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;

@VisibleForTesting
final class zzatr implements BaseGmsClient.BaseConnectionCallbacks, BaseGmsClient.BaseOnConnectionFailedListener {
  private final String packageName;
  
  @VisibleForTesting
  private zzats zzdgz;
  
  private final String zzdha;
  
  private final LinkedBlockingQueue<zzba> zzdhb;
  
  private final HandlerThread zzdhc;
  
  public zzatr(Context paramContext, String paramString1, String paramString2) {
    this.packageName = paramString1;
    this.zzdha = paramString2;
    this.zzdhc = new HandlerThread("GassClient");
    this.zzdhc.start();
    this.zzdgz = new zzats(paramContext, this.zzdhc.getLooper(), this, this);
    this.zzdhb = new LinkedBlockingQueue();
    this.zzdgz.checkAvailabilityAndConnect();
  }
  
  private final void zznz() {
    zzats zzats1 = this.zzdgz;
    if (zzats1 != null && (zzats1.isConnected() || this.zzdgz.isConnecting()))
      this.zzdgz.disconnect(); 
  }
  
  private final zzatx zzwb() {
    try {
      return this.zzdgz.zzwd();
    } catch (IllegalStateException|android.os.DeadObjectException illegalStateException) {
      return null;
    } 
  }
  
  @VisibleForTesting
  private static zzba zzwc() {
    zzba zzba = new zzba();
    zzba.zzdu = Long.valueOf(32768L);
    return zzba;
  }
  
  public final void onConnected(Bundle paramBundle) {
    zzatx = zzwb();
    if (zzatx != null)
      try {
        zzba zzba = zzatx.zza(new zzatt(this.packageName, this.zzdha)).zzwe();
        this.zzdhb.put(zzba);
      } catch (Throwable zzatx) {
        return;
      } finally {
        zznz();
        this.zzdhc.quit();
      }  
  }
  
  public final void onConnectionFailed(ConnectionResult paramConnectionResult) {
    try {
      this.zzdhb.put(zzwc());
      return;
    } catch (InterruptedException paramConnectionResult) {
      return;
    } 
  }
  
  public final void onConnectionSuspended(int paramInt) {
    try {
      this.zzdhb.put(zzwc());
      return;
    } catch (InterruptedException interruptedException) {
      return;
    } 
  }
  
  public final zzba zzak(int paramInt) {
    try {
      interruptedException = (zzba)this.zzdhb.poll(5000L, TimeUnit.MILLISECONDS);
    } catch (InterruptedException interruptedException) {
      interruptedException = null;
    } 
    zzba zzba = interruptedException;
    if (interruptedException == null)
      zzba = zzwc(); 
    return zzba;
  }
}
