package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.RemoteException;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdSize;
import com.google.android.gms.ads.Correlator;
import com.google.android.gms.ads.VideoController;
import com.google.android.gms.ads.VideoOptions;
import com.google.android.gms.ads.doubleclick.AppEventListener;
import com.google.android.gms.ads.doubleclick.OnCustomRenderedAdLoadedListener;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import java.util.concurrent.atomic.AtomicBoolean;

@zzadh
public final class zzly {
  private zzjd zzapt;
  
  private AdListener zzapu;
  
  private AdSize[] zzarh;
  
  private final zzxm zzast = new zzxm();
  
  private final AtomicBoolean zzasu;
  
  private final VideoController zzasv = new VideoController();
  
  @VisibleForTesting
  private final zzkd zzasw = new zzlz(this);
  
  private Correlator zzasx;
  
  private zzks zzasy;
  
  private OnCustomRenderedAdLoadedListener zzasz;
  
  private ViewGroup zzata;
  
  private int zzatb;
  
  private final zzjm zzuk;
  
  private VideoOptions zzvg;
  
  private boolean zzvm;
  
  private AppEventListener zzvo;
  
  private String zzye;
  
  public zzly(ViewGroup paramViewGroup) { this(paramViewGroup, null, false, zzjm.zzara, 0); }
  
  public zzly(ViewGroup paramViewGroup, int paramInt) { this(paramViewGroup, null, false, zzjm.zzara, paramInt); }
  
  public zzly(ViewGroup paramViewGroup, AttributeSet paramAttributeSet, boolean paramBoolean) { this(paramViewGroup, paramAttributeSet, paramBoolean, zzjm.zzara, 0); }
  
  public zzly(ViewGroup paramViewGroup, AttributeSet paramAttributeSet, boolean paramBoolean, int paramInt) { this(paramViewGroup, paramAttributeSet, false, zzjm.zzara, paramInt); }
  
  @VisibleForTesting
  private zzly(ViewGroup paramViewGroup, AttributeSet paramAttributeSet, boolean paramBoolean, zzjm paramzzjm, int paramInt) { this(paramViewGroup, paramAttributeSet, paramBoolean, paramzzjm, null, paramInt); }
  
  @VisibleForTesting
  private zzly(ViewGroup paramViewGroup, AttributeSet paramAttributeSet, boolean paramBoolean, zzjm paramzzjm, zzks paramzzks, int paramInt) {
    this.zzata = paramViewGroup;
    this.zzuk = paramzzjm;
    this.zzasy = null;
    this.zzasu = new AtomicBoolean(false);
    this.zzatb = paramInt;
    if (paramAttributeSet != null) {
      zzjn zzjn = paramViewGroup.getContext();
      try {
        zzjq zzjq = new zzjq(zzjn, paramAttributeSet);
        this.zzarh = zzjq.zzi(paramBoolean);
        this.zzye = zzjq.getAdUnitId();
        if (paramViewGroup.isInEditMode()) {
          zzamu zzamu = zzkb.zzif();
          AdSize adSize = this.zzarh[0];
          paramInt = this.zzatb;
          zzjn = new zzjn(zzjn, adSize);
          zzjn.zzarg = zzu(paramInt);
          zzamu.zza(paramViewGroup, zzjn, "Ads by Google");
          return;
        } 
      } catch (IllegalArgumentException paramAttributeSet) {
        zzkb.zzif().zza(paramViewGroup, new zzjn(zzjn, AdSize.BANNER), paramAttributeSet.getMessage(), paramAttributeSet.getMessage());
      } 
    } 
  }
  
  private static zzjn zza(Context paramContext, AdSize[] paramArrayOfAdSize, int paramInt) {
    zzjn zzjn = new zzjn(paramContext, paramArrayOfAdSize);
    zzjn.zzarg = zzu(paramInt);
    return zzjn;
  }
  
  private static boolean zzu(int paramInt) { return (paramInt == 1); }
  
  public final void destroy() {
    try {
      if (this.zzasy != null)
        this.zzasy.destroy(); 
      return;
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final AdListener getAdListener() { return this.zzapu; }
  
  public final AdSize getAdSize() {
    try {
      if (this.zzasy != null) {
        zzjn zzjn = this.zzasy.zzbk();
        if (zzjn != null)
          return zzjn.zzhy(); 
      } 
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
    } 
    AdSize[] arrayOfAdSize = this.zzarh;
    return (arrayOfAdSize != null) ? arrayOfAdSize[0] : null;
  }
  
  public final AdSize[] getAdSizes() { return this.zzarh; }
  
  public final String getAdUnitId() {
    if (this.zzye == null) {
      zzks1 = this.zzasy;
      if (zzks1 != null)
        try {
          this.zzye = zzks1.getAdUnitId();
        } catch (RemoteException zzks1) {
          zzane.zzd("#007 Could not call remote method.", zzks1);
        }  
    } 
    return this.zzye;
  }
  
  public final AppEventListener getAppEventListener() { return this.zzvo; }
  
  public final String getMediationAdapterClassName() {
    try {
      if (this.zzasy != null)
        return this.zzasy.zzck(); 
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
    } 
    return null;
  }
  
  public final OnCustomRenderedAdLoadedListener getOnCustomRenderedAdLoadedListener() { return this.zzasz; }
  
  public final VideoController getVideoController() { return this.zzasv; }
  
  public final VideoOptions getVideoOptions() { return this.zzvg; }
  
  public final boolean isLoading() {
    try {
      if (this.zzasy != null)
        return this.zzasy.isLoading(); 
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
    } 
    return false;
  }
  
  public final void pause() {
    try {
      if (this.zzasy != null)
        this.zzasy.pause(); 
      return;
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final void recordManualImpression() {
    if (this.zzasu.getAndSet(true))
      return; 
    try {
      if (this.zzasy != null)
        this.zzasy.zzbm(); 
      return;
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final void resume() {
    try {
      if (this.zzasy != null)
        this.zzasy.resume(); 
      return;
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final void setAdListener(AdListener paramAdListener) {
    this.zzapu = paramAdListener;
    this.zzasw.zza(paramAdListener);
  }
  
  public final void setAdSizes(AdSize... paramVarArgs) {
    if (this.zzarh == null) {
      zza(paramVarArgs);
      return;
    } 
    throw new IllegalStateException("The ad size can only be set once on AdView.");
  }
  
  public final void setAdUnitId(String paramString) {
    if (this.zzye == null) {
      this.zzye = paramString;
      return;
    } 
    throw new IllegalStateException("The ad unit ID can only be set once on AdView.");
  }
  
  public final void setAppEventListener(AppEventListener paramAppEventListener) {
    try {
      this.zzvo = paramAppEventListener;
      if (this.zzasy != null) {
        zzks zzks1 = this.zzasy;
        if (paramAppEventListener != null) {
          zzjp zzjp = new zzjp(paramAppEventListener);
        } else {
          paramAppEventListener = null;
        } 
        zzks1.zza(paramAppEventListener);
      } 
      return;
    } catch (RemoteException paramAppEventListener) {
      zzane.zzd("#007 Could not call remote method.", paramAppEventListener);
      return;
    } 
  }
  
  public final void setCorrelator(Correlator paramCorrelator) {
    this.zzasx = paramCorrelator;
    try {
      if (this.zzasy != null) {
        zzkc zzkc;
        zzks zzks1 = this.zzasy;
        if (this.zzasx == null) {
          paramCorrelator = null;
        } else {
          zzkc = this.zzasx.zzaz();
        } 
        zzks1.zza(zzkc);
      } 
      return;
    } catch (RemoteException paramCorrelator) {
      zzane.zzd("#007 Could not call remote method.", paramCorrelator);
      return;
    } 
  }
  
  public final void setManualImpressionsEnabled(boolean paramBoolean) {
    this.zzvm = paramBoolean;
    try {
      if (this.zzasy != null)
        this.zzasy.setManualImpressionsEnabled(this.zzvm); 
      return;
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
      return;
    } 
  }
  
  public final void setOnCustomRenderedAdLoadedListener(OnCustomRenderedAdLoadedListener paramOnCustomRenderedAdLoadedListener) {
    this.zzasz = paramOnCustomRenderedAdLoadedListener;
    try {
      if (this.zzasy != null) {
        zzks zzks1 = this.zzasy;
        if (paramOnCustomRenderedAdLoadedListener != null) {
          zzog zzog = new zzog(paramOnCustomRenderedAdLoadedListener);
        } else {
          paramOnCustomRenderedAdLoadedListener = null;
        } 
        zzks1.zza(paramOnCustomRenderedAdLoadedListener);
      } 
      return;
    } catch (RemoteException paramOnCustomRenderedAdLoadedListener) {
      zzane.zzd("#007 Could not call remote method.", paramOnCustomRenderedAdLoadedListener);
      return;
    } 
  }
  
  public final void setVideoOptions(VideoOptions paramVideoOptions) {
    this.zzvg = paramVideoOptions;
    try {
      if (this.zzasy != null) {
        zzmu zzmu;
        zzks zzks1 = this.zzasy;
        if (paramVideoOptions == null) {
          paramVideoOptions = null;
        } else {
          zzmu = new zzmu(paramVideoOptions);
        } 
        zzks1.zza(zzmu);
      } 
      return;
    } catch (RemoteException paramVideoOptions) {
      zzane.zzd("#007 Could not call remote method.", paramVideoOptions);
      return;
    } 
  }
  
  public final void zza(zzjd paramzzjd) {
    try {
      this.zzapt = paramzzjd;
      if (this.zzasy != null) {
        zzks zzks1 = this.zzasy;
        if (paramzzjd != null) {
          zzje zzje = new zzje(paramzzjd);
        } else {
          paramzzjd = null;
        } 
        zzks1.zza(paramzzjd);
      } 
      return;
    } catch (RemoteException paramzzjd) {
      zzane.zzd("#007 Could not call remote method.", paramzzjd);
      return;
    } 
  }
  
  public final void zza(zzlw paramzzlw) {
    try {
      if (this.zzasy == null)
        if ((this.zzarh != null && this.zzye != null) || this.zzasy != null) {
          object = this.zzata.getContext();
          zzjn zzjn = zza(object, this.zzarh, this.zzatb);
          if ("search_v2".equals(zzjn.zzarb)) {
            object = zzjr.zza(object, false, new zzjt(zzkb.zzig(), object, zzjn, this.zzye));
          } else {
            object = zzjr.zza(object, false, new zzjs(zzkb.zzig(), object, zzjn, this.zzye, this.zzast));
          } 
          object = (zzks)object;
          this.zzasy = object;
          this.zzasy.zza(new zzjf(this.zzasw));
          if (this.zzapt != null)
            this.zzasy.zza(new zzje(this.zzapt)); 
          if (this.zzvo != null)
            this.zzasy.zza(new zzjp(this.zzvo)); 
          if (this.zzasz != null)
            this.zzasy.zza(new zzog(this.zzasz)); 
          if (this.zzasx != null)
            this.zzasy.zza(this.zzasx.zzaz()); 
          if (this.zzvg != null)
            this.zzasy.zza(new zzmu(this.zzvg)); 
          this.zzasy.setManualImpressionsEnabled(this.zzvm);
          try {
            object = this.zzasy.zzbj();
            if (object != null)
              this.zzata.addView((View)ObjectWrapper.unwrap(object)); 
          } catch (RemoteException object) {
            zzane.zzd("#007 Could not call remote method.", object);
          } 
        } else {
          throw new IllegalStateException("The ad size and ad unit ID must be set before loadAd is called.");
        }  
      if (this.zzasy.zzb(zzjm.zza(this.zzata.getContext(), paramzzlw)))
        this.zzast.zzj(paramzzlw.zzir()); 
      return;
    } catch (RemoteException paramzzlw) {
      zzane.zzd("#007 Could not call remote method.", paramzzlw);
      return;
    } 
  }
  
  public final void zza(AdSize... paramVarArgs) {
    this.zzarh = paramVarArgs;
    try {
      if (this.zzasy != null)
        this.zzasy.zza(zza(this.zzata.getContext(), this.zzarh, this.zzatb)); 
    } catch (RemoteException paramVarArgs) {
      zzane.zzd("#007 Could not call remote method.", paramVarArgs);
    } 
    this.zzata.requestLayout();
  }
  
  public final boolean zza(zzks paramzzks) {
    if (paramzzks == null)
      return false; 
    try {
      IObjectWrapper iObjectWrapper = paramzzks.zzbj();
      if (iObjectWrapper == null)
        return false; 
      if (((View)ObjectWrapper.unwrap(iObjectWrapper)).getParent() != null)
        return false; 
      this.zzata.addView((View)ObjectWrapper.unwrap(iObjectWrapper));
      this.zzasy = paramzzks;
      return true;
    } catch (RemoteException paramzzks) {
      zzane.zzd("#007 Could not call remote method.", paramzzks);
      return false;
    } 
  }
  
  public final zzlo zzbc() {
    zzks1 = this.zzasy;
    if (zzks1 == null)
      return null; 
    try {
      return zzks1.getVideoController();
    } catch (RemoteException zzks1) {
      zzane.zzd("#007 Could not call remote method.", zzks1);
      return null;
    } 
  }
}
