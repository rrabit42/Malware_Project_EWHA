package com.google.android.gms.internal.ads;

import android.os.Bundle;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.dynamic.IObjectWrapper;

public final class zzku extends zzej implements zzks {
  zzku(IBinder paramIBinder) { super(paramIBinder, "com.google.android.gms.ads.internal.client.IAdManager"); }
  
  public final void destroy() throws RemoteException { transactAndReadExceptionReturnVoid(2, obtainAndWriteInterfaceToken()); }
  
  public final String getAdUnitId() throws RemoteException {
    Parcel parcel = transactAndReadException(31, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final String getMediationAdapterClassName() throws RemoteException {
    Parcel parcel = transactAndReadException(18, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
  
  public final zzlo getVideoController() throws RemoteException {
    Parcel parcel = transactAndReadException(26, obtainAndWriteInterfaceToken());
    zzlq zzlq = parcel.readStrongBinder();
    if (zzlq == null) {
      zzlq = null;
    } else {
      zzlo zzlo;
      IInterface iInterface = zzlq.queryLocalInterface("com.google.android.gms.ads.internal.client.IVideoController");
      if (iInterface instanceof zzlo) {
        zzlo = (zzlo)iInterface;
      } else {
        zzlq = new zzlq(zzlo);
      } 
    } 
    parcel.recycle();
    return zzlq;
  }
  
  public final boolean isLoading() throws RemoteException {
    Parcel parcel = transactAndReadException(23, obtainAndWriteInterfaceToken());
    boolean bool = zzel.zza(parcel);
    parcel.recycle();
    return bool;
  }
  
  public final boolean isReady() throws RemoteException {
    Parcel parcel = transactAndReadException(3, obtainAndWriteInterfaceToken());
    boolean bool = zzel.zza(parcel);
    parcel.recycle();
    return bool;
  }
  
  public final void pause() throws RemoteException { transactAndReadExceptionReturnVoid(5, obtainAndWriteInterfaceToken()); }
  
  public final void resume() throws RemoteException { transactAndReadExceptionReturnVoid(6, obtainAndWriteInterfaceToken()); }
  
  public final void setImmersiveMode(boolean paramBoolean) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramBoolean);
    transactAndReadExceptionReturnVoid(34, parcel);
  }
  
  public final void setManualImpressionsEnabled(boolean paramBoolean) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramBoolean);
    transactAndReadExceptionReturnVoid(22, parcel);
  }
  
  public final void setUserId(String paramString) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    parcel.writeString(paramString);
    transactAndReadExceptionReturnVoid(25, parcel);
  }
  
  public final void showInterstitial() throws RemoteException { transactAndReadExceptionReturnVoid(9, obtainAndWriteInterfaceToken()); }
  
  public final void stopLoading() throws RemoteException { transactAndReadExceptionReturnVoid(10, obtainAndWriteInterfaceToken()); }
  
  public final void zza(zzaaw paramzzaaw) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzaaw);
    transactAndReadExceptionReturnVoid(14, parcel);
  }
  
  public final void zza(zzabc paramzzabc, String paramString) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzabc);
    parcel.writeString(paramString);
    transactAndReadExceptionReturnVoid(15, parcel);
  }
  
  public final void zza(zzahe paramzzahe) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzahe);
    transactAndReadExceptionReturnVoid(24, parcel);
  }
  
  public final void zza(zzjn paramzzjn) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzjn);
    transactAndReadExceptionReturnVoid(13, parcel);
  }
  
  public final void zza(zzke paramzzke) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzke);
    transactAndReadExceptionReturnVoid(20, parcel);
  }
  
  public final void zza(zzkh paramzzkh) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzkh);
    transactAndReadExceptionReturnVoid(7, parcel);
  }
  
  public final void zza(zzkx paramzzkx) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzkx);
    transactAndReadExceptionReturnVoid(36, parcel);
  }
  
  public final void zza(zzla paramzzla) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzla);
    transactAndReadExceptionReturnVoid(8, parcel);
  }
  
  public final void zza(zzlg paramzzlg) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzlg);
    transactAndReadExceptionReturnVoid(21, parcel);
  }
  
  public final void zza(zzlu paramzzlu) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzlu);
    transactAndReadExceptionReturnVoid(30, parcel);
  }
  
  public final void zza(zzmu paramzzmu) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzmu);
    transactAndReadExceptionReturnVoid(29, parcel);
  }
  
  public final void zza(zzod paramzzod) throws RemoteException {
    Parcel parcel = obtainAndWriteInterfaceToken();
    zzel.zza(parcel, paramzzod);
    transactAndReadExceptionReturnVoid(19, parcel);
  }
  
  public final boolean zzb(zzjj paramzzjj) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    zzel.zza(parcel2, paramzzjj);
    Parcel parcel1 = transactAndReadException(4, parcel2);
    boolean bool = zzel.zza(parcel1);
    parcel1.recycle();
    return bool;
  }
  
  public final Bundle zzba() throws RemoteException {
    Parcel parcel = transactAndReadException(37, obtainAndWriteInterfaceToken());
    Bundle bundle = (Bundle)zzel.zza(parcel, Bundle.CREATOR);
    parcel.recycle();
    return bundle;
  }
  
  public final IObjectWrapper zzbj() throws RemoteException {
    Parcel parcel = transactAndReadException(1, obtainAndWriteInterfaceToken());
    IObjectWrapper iObjectWrapper = IObjectWrapper.Stub.asInterface(parcel.readStrongBinder());
    parcel.recycle();
    return iObjectWrapper;
  }
  
  public final zzjn zzbk() throws RemoteException {
    Parcel parcel = transactAndReadException(12, obtainAndWriteInterfaceToken());
    zzjn zzjn = (zzjn)zzel.zza(parcel, zzjn.CREATOR);
    parcel.recycle();
    return zzjn;
  }
  
  public final void zzbm() throws RemoteException { transactAndReadExceptionReturnVoid(11, obtainAndWriteInterfaceToken()); }
  
  public final zzla zzbw() throws RemoteException {
    Parcel parcel = transactAndReadException(32, obtainAndWriteInterfaceToken());
    zzlc zzlc = parcel.readStrongBinder();
    if (zzlc == null) {
      zzlc = null;
    } else {
      zzla zzla;
      IInterface iInterface = zzlc.queryLocalInterface("com.google.android.gms.ads.internal.client.IAppEventListener");
      if (iInterface instanceof zzla) {
        zzla = (zzla)iInterface;
      } else {
        zzlc = new zzlc(zzla);
      } 
    } 
    parcel.recycle();
    return zzlc;
  }
  
  public final zzkh zzbx() throws RemoteException {
    Parcel parcel = transactAndReadException(33, obtainAndWriteInterfaceToken());
    zzkj zzkj = parcel.readStrongBinder();
    if (zzkj == null) {
      zzkj = null;
    } else {
      zzkh zzkh;
      IInterface iInterface = zzkj.queryLocalInterface("com.google.android.gms.ads.internal.client.IAdListener");
      if (iInterface instanceof zzkh) {
        zzkh = (zzkh)iInterface;
      } else {
        zzkj = new zzkj(zzkh);
      } 
    } 
    parcel.recycle();
    return zzkj;
  }
  
  public final String zzck() throws RemoteException {
    Parcel parcel = transactAndReadException(35, obtainAndWriteInterfaceToken());
    String str = parcel.readString();
    parcel.recycle();
    return str;
  }
}
