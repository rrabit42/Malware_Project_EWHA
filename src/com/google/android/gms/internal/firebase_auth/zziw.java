package com.google.android.gms.internal.firebase_auth;

import java.lang.reflect.Field;
import java.security.AccessController;
import java.util.logging.Level;
import java.util.logging.Logger;
import sun.misc.Unsafe;

final class zziw {
  private static final Logger logger;
  
  private static final boolean zzabw;
  
  private static final boolean zzabx;
  
  private static final zzd zzaby;
  
  private static final boolean zzabz;
  
  private static final long zzaca;
  
  private static final long zzacb;
  
  private static final long zzacc;
  
  private static final long zzacd;
  
  private static final long zzace;
  
  private static final long zzacf;
  
  private static final long zzacg;
  
  private static final long zzach;
  
  private static final long zzaci;
  
  private static final long zzacj;
  
  private static final long zzack;
  
  private static final long zzacl;
  
  private static final long zzacm;
  
  private static final long zzacn;
  
  private static final boolean zzaco;
  
  private static final Class<?> zzsk;
  
  private static final boolean zztp;
  
  private static final Unsafe zzzk;
  
  static  {
    // Byte code:
    //   0: ldc com/google/android/gms/internal/firebase_auth/zziw
    //   2: invokevirtual getName : ()Ljava/lang/String;
    //   5: invokestatic getLogger : (Ljava/lang/String;)Ljava/util/logging/Logger;
    //   8: putstatic com/google/android/gms/internal/firebase_auth/zziw.logger : Ljava/util/logging/Logger;
    //   11: invokestatic zzju : ()Lsun/misc/Unsafe;
    //   14: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzzk : Lsun/misc/Unsafe;
    //   17: invokestatic zzey : ()Ljava/lang/Class;
    //   20: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzsk : Ljava/lang/Class;
    //   23: getstatic java/lang/Long.TYPE : Ljava/lang/Class;
    //   26: invokestatic zzk : (Ljava/lang/Class;)Z
    //   29: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzabw : Z
    //   32: getstatic java/lang/Integer.TYPE : Ljava/lang/Class;
    //   35: invokestatic zzk : (Ljava/lang/Class;)Z
    //   38: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzabx : Z
    //   41: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzzk : Lsun/misc/Unsafe;
    //   44: astore #4
    //   46: aconst_null
    //   47: astore_3
    //   48: aload #4
    //   50: ifnonnull -> 56
    //   53: goto -> 113
    //   56: invokestatic zzex : ()Z
    //   59: ifeq -> 102
    //   62: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzabw : Z
    //   65: ifeq -> 82
    //   68: new com/google/android/gms/internal/firebase_auth/zziw$zzb
    //   71: dup
    //   72: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzzk : Lsun/misc/Unsafe;
    //   75: invokespecial <init> : (Lsun/misc/Unsafe;)V
    //   78: astore_3
    //   79: goto -> 113
    //   82: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzabx : Z
    //   85: ifeq -> 113
    //   88: new com/google/android/gms/internal/firebase_auth/zziw$zza
    //   91: dup
    //   92: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzzk : Lsun/misc/Unsafe;
    //   95: invokespecial <init> : (Lsun/misc/Unsafe;)V
    //   98: astore_3
    //   99: goto -> 113
    //   102: new com/google/android/gms/internal/firebase_auth/zziw$zzc
    //   105: dup
    //   106: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzzk : Lsun/misc/Unsafe;
    //   109: invokespecial <init> : (Lsun/misc/Unsafe;)V
    //   112: astore_3
    //   113: aload_3
    //   114: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzaby : Lcom/google/android/gms/internal/firebase_auth/zziw$zzd;
    //   117: invokestatic zzjw : ()Z
    //   120: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzabz : Z
    //   123: invokestatic zzjv : ()Z
    //   126: putstatic com/google/android/gms/internal/firebase_auth/zziw.zztp : Z
    //   129: ldc [B
    //   131: invokestatic zzi : (Ljava/lang/Class;)I
    //   134: i2l
    //   135: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzaca : J
    //   138: ldc [Z
    //   140: invokestatic zzi : (Ljava/lang/Class;)I
    //   143: i2l
    //   144: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacb : J
    //   147: ldc [Z
    //   149: invokestatic zzj : (Ljava/lang/Class;)I
    //   152: i2l
    //   153: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacc : J
    //   156: ldc [I
    //   158: invokestatic zzi : (Ljava/lang/Class;)I
    //   161: i2l
    //   162: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacd : J
    //   165: ldc [I
    //   167: invokestatic zzj : (Ljava/lang/Class;)I
    //   170: i2l
    //   171: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzace : J
    //   174: ldc [J
    //   176: invokestatic zzi : (Ljava/lang/Class;)I
    //   179: i2l
    //   180: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacf : J
    //   183: ldc [J
    //   185: invokestatic zzj : (Ljava/lang/Class;)I
    //   188: i2l
    //   189: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacg : J
    //   192: ldc [F
    //   194: invokestatic zzi : (Ljava/lang/Class;)I
    //   197: i2l
    //   198: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzach : J
    //   201: ldc [F
    //   203: invokestatic zzj : (Ljava/lang/Class;)I
    //   206: i2l
    //   207: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzaci : J
    //   210: ldc [D
    //   212: invokestatic zzi : (Ljava/lang/Class;)I
    //   215: i2l
    //   216: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacj : J
    //   219: ldc [D
    //   221: invokestatic zzj : (Ljava/lang/Class;)I
    //   224: i2l
    //   225: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzack : J
    //   228: ldc [Ljava/lang/Object;
    //   230: invokestatic zzi : (Ljava/lang/Class;)I
    //   233: i2l
    //   234: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacl : J
    //   237: ldc [Ljava/lang/Object;
    //   239: invokestatic zzj : (Ljava/lang/Class;)I
    //   242: i2l
    //   243: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacm : J
    //   246: invokestatic zzjx : ()Ljava/lang/reflect/Field;
    //   249: astore_3
    //   250: aload_3
    //   251: ifnull -> 280
    //   254: getstatic com/google/android/gms/internal/firebase_auth/zziw.zzaby : Lcom/google/android/gms/internal/firebase_auth/zziw$zzd;
    //   257: astore #4
    //   259: aload #4
    //   261: ifnonnull -> 267
    //   264: goto -> 280
    //   267: aload #4
    //   269: getfield zzacp : Lsun/misc/Unsafe;
    //   272: aload_3
    //   273: invokevirtual objectFieldOffset : (Ljava/lang/reflect/Field;)J
    //   276: lstore_0
    //   277: goto -> 284
    //   280: ldc2_w -1
    //   283: lstore_0
    //   284: lload_0
    //   285: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzacn : J
    //   288: invokestatic nativeOrder : ()Ljava/nio/ByteOrder;
    //   291: getstatic java/nio/ByteOrder.BIG_ENDIAN : Ljava/nio/ByteOrder;
    //   294: if_acmpne -> 302
    //   297: iconst_1
    //   298: istore_2
    //   299: goto -> 304
    //   302: iconst_0
    //   303: istore_2
    //   304: iload_2
    //   305: putstatic com/google/android/gms/internal/firebase_auth/zziw.zzaco : Z
    //   308: return
  }
  
  static byte zza(byte[] paramArrayOfByte, long paramLong) { return zzaby.zzy(paramArrayOfByte, zzaca + paramLong); }
  
  private static void zza(Object paramObject, long paramLong, byte paramByte) {
    long l = 0xFFFFFFFFFFFFFFFCL & paramLong;
    int i = zzk(paramObject, l);
    int j = (((int)paramLong ^ 0xFFFFFFFF) & 0x3) << 3;
    zzb(paramObject, l, (0xFF & paramByte) << j | i & (255 << j ^ 0xFFFFFFFF));
  }
  
  static void zza(Object paramObject, long paramLong, double paramDouble) { zzaby.zza(paramObject, paramLong, paramDouble); }
  
  static void zza(Object paramObject, long paramLong, float paramFloat) { zzaby.zza(paramObject, paramLong, paramFloat); }
  
  static void zza(Object paramObject, long paramLong1, long paramLong2) { zzaby.zza(paramObject, paramLong1, paramLong2); }
  
  static void zza(Object paramObject1, long paramLong, Object paramObject2) { zzaby.zzacp.putObject(paramObject1, paramLong, paramObject2); }
  
  static void zza(Object paramObject, long paramLong, boolean paramBoolean) { zzaby.zza(paramObject, paramLong, paramBoolean); }
  
  static void zza(byte[] paramArrayOfByte, long paramLong, byte paramByte) { zzaby.zze(paramArrayOfByte, zzaca + paramLong, paramByte); }
  
  private static Field zzb(Class<?> paramClass, String paramString) {
    try {
      Field field = paramClass.getDeclaredField(paramString);
      field.setAccessible(true);
      return field;
    } catch (Throwable paramClass) {
      return null;
    } 
  }
  
  private static void zzb(Object paramObject, long paramLong, byte paramByte) {
    long l = 0xFFFFFFFFFFFFFFFCL & paramLong;
    int i = zzk(paramObject, l);
    int j = ((int)paramLong & 0x3) << 3;
    zzb(paramObject, l, (0xFF & paramByte) << j | i & (255 << j ^ 0xFFFFFFFF));
  }
  
  static void zzb(Object paramObject, long paramLong, int paramInt) { zzaby.zzb(paramObject, paramLong, paramInt); }
  
  private static void zzb(Object paramObject, long paramLong, boolean paramBoolean) { zza(paramObject, paramLong, (byte)paramBoolean); }
  
  private static void zzc(Object paramObject, long paramLong, boolean paramBoolean) { zzb(paramObject, paramLong, (byte)paramBoolean); }
  
  static <T> T zzh(Class<T> paramClass) {
    try {
      return (T)zzzk.allocateInstance(paramClass);
    } catch (InstantiationException paramClass) {
      throw new IllegalStateException(paramClass);
    } 
  }
  
  private static int zzi(Class<?> paramClass) { return zztp ? zzaby.zzacp.arrayBaseOffset(paramClass) : -1; }
  
  private static int zzj(Class<?> paramClass) { return zztp ? zzaby.zzacp.arrayIndexScale(paramClass) : -1; }
  
  static boolean zzjs() { return zztp; }
  
  static boolean zzjt() { return zzabz; }
  
  static Unsafe zzju() {
    try {
      return (Unsafe)AccessController.doPrivileged(new zzix());
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  private static boolean zzjv() {
    Unsafe unsafe = zzzk;
    if (unsafe == null)
      return false; 
    try {
      Class clazz = unsafe.getClass();
      clazz.getMethod("objectFieldOffset", new Class[] { Field.class });
      clazz.getMethod("arrayBaseOffset", new Class[] { Class.class });
      clazz.getMethod("arrayIndexScale", new Class[] { Class.class });
      clazz.getMethod("getInt", new Class[] { Object.class, long.class });
      clazz.getMethod("putInt", new Class[] { Object.class, long.class, int.class });
      clazz.getMethod("getLong", new Class[] { Object.class, long.class });
      clazz.getMethod("putLong", new Class[] { Object.class, long.class, long.class });
      clazz.getMethod("getObject", new Class[] { Object.class, long.class });
      clazz.getMethod("putObject", new Class[] { Object.class, long.class, Object.class });
      if (zzee.zzex())
        return true; 
      clazz.getMethod("getByte", new Class[] { Object.class, long.class });
      clazz.getMethod("putByte", new Class[] { Object.class, long.class, byte.class });
      clazz.getMethod("getBoolean", new Class[] { Object.class, long.class });
      clazz.getMethod("putBoolean", new Class[] { Object.class, long.class, boolean.class });
      clazz.getMethod("getFloat", new Class[] { Object.class, long.class });
      clazz.getMethod("putFloat", new Class[] { Object.class, long.class, float.class });
      clazz.getMethod("getDouble", new Class[] { Object.class, long.class });
      clazz.getMethod("putDouble", new Class[] { Object.class, long.class, double.class });
      return true;
    } catch (Throwable throwable) {
      Logger logger1 = logger;
      Level level = Level.WARNING;
      String str;
      StringBuilder stringBuilder = new StringBuilder((str = String.valueOf(throwable)).valueOf(str).length() + 71);
      stringBuilder.append("platform method missing - proto runtime falling back to safer methods: ");
      stringBuilder.append(str);
      logger1.logp(level, "com.google.protobuf.UnsafeUtil", "supportsUnsafeArrayOperations", stringBuilder.toString());
      return false;
    } 
  }
  
  private static boolean zzjw() {
    Unsafe unsafe = zzzk;
    if (unsafe == null)
      return false; 
    try {
      Class clazz = unsafe.getClass();
      clazz.getMethod("objectFieldOffset", new Class[] { Field.class });
      clazz.getMethod("getLong", new Class[] { Object.class, long.class });
      if (zzjx() == null)
        return false; 
      if (zzee.zzex())
        return true; 
      clazz.getMethod("getByte", new Class[] { long.class });
      clazz.getMethod("putByte", new Class[] { long.class, byte.class });
      clazz.getMethod("getInt", new Class[] { long.class });
      clazz.getMethod("putInt", new Class[] { long.class, int.class });
      clazz.getMethod("getLong", new Class[] { long.class });
      clazz.getMethod("putLong", new Class[] { long.class, long.class });
      clazz.getMethod("copyMemory", new Class[] { long.class, long.class, long.class });
      clazz.getMethod("copyMemory", new Class[] { Object.class, long.class, Object.class, long.class, long.class });
      return true;
    } catch (Throwable throwable) {
      Logger logger1 = logger;
      Level level = Level.WARNING;
      String str;
      StringBuilder stringBuilder = new StringBuilder((str = String.valueOf(throwable)).valueOf(str).length() + 71);
      stringBuilder.append("platform method missing - proto runtime falling back to safer methods: ");
      stringBuilder.append(str);
      logger1.logp(level, "com.google.protobuf.UnsafeUtil", "supportsUnsafeByteBufferOperations", stringBuilder.toString());
      return false;
    } 
  }
  
  private static Field zzjx() {
    if (zzee.zzex()) {
      Field field1 = zzb(java.nio.Buffer.class, "effectiveDirectAddress");
      if (field1 != null)
        return field1; 
    } 
    Field field = zzb(java.nio.Buffer.class, "address");
    return (field != null && field.getType() == long.class) ? field : null;
  }
  
  static int zzk(Object paramObject, long paramLong) { return zzaby.zzk(paramObject, paramLong); }
  
  private static boolean zzk(Class<?> paramClass) {
    if (!zzee.zzex())
      return false; 
    try {
      Class clazz = zzsk;
      clazz.getMethod("peekLong", new Class[] { paramClass, boolean.class });
      clazz.getMethod("pokeLong", new Class[] { paramClass, long.class, boolean.class });
      clazz.getMethod("pokeInt", new Class[] { paramClass, int.class, boolean.class });
      clazz.getMethod("peekInt", new Class[] { paramClass, boolean.class });
      clazz.getMethod("pokeByte", new Class[] { paramClass, byte.class });
      clazz.getMethod("peekByte", new Class[] { paramClass });
      clazz.getMethod("pokeByteArray", new Class[] { paramClass, byte[].class, int.class, int.class });
      clazz.getMethod("peekByteArray", new Class[] { paramClass, byte[].class, int.class, int.class });
      return true;
    } catch (Throwable paramClass) {
      return false;
    } 
  }
  
  static long zzl(Object paramObject, long paramLong) { return zzaby.zzl(paramObject, paramLong); }
  
  static boolean zzm(Object paramObject, long paramLong) { return zzaby.zzm(paramObject, paramLong); }
  
  static float zzn(Object paramObject, long paramLong) { return zzaby.zzn(paramObject, paramLong); }
  
  static double zzo(Object paramObject, long paramLong) { return zzaby.zzo(paramObject, paramLong); }
  
  static Object zzp(Object paramObject, long paramLong) { return zzaby.zzacp.getObject(paramObject, paramLong); }
  
  private static byte zzq(Object paramObject, long paramLong) { return (byte)(zzk(paramObject, 0xFFFFFFFFFFFFFFFCL & paramLong) >>> (int)(((paramLong ^ 0xFFFFFFFFFFFFFFFFL) & 0x3L) << 3)); }
  
  private static byte zzr(Object paramObject, long paramLong) { return (byte)(zzk(paramObject, 0xFFFFFFFFFFFFFFFCL & paramLong) >>> (int)((paramLong & 0x3L) << 3)); }
  
  private static boolean zzs(Object paramObject, long paramLong) { return (zzq(paramObject, paramLong) != 0); }
  
  private static boolean zzt(Object paramObject, long paramLong) { return (zzr(paramObject, paramLong) != 0); }
}
