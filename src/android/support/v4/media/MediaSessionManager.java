package android.support.v4.media;

import android.content.Context;
import android.os.Build;
import android.support.annotation.NonNull;
import android.util.Log;

public final class MediaSessionManager {
  static final boolean DEBUG = Log.isLoggable("MediaSessionManager", 3);
  
  static final String TAG = "MediaSessionManager";
  
  private static final Object sLock = new Object();
  
  MediaSessionManagerImpl mImpl;
  
  private MediaSessionManager(Context paramContext) {
    if (Build.VERSION.SDK_INT >= 28) {
      this.mImpl = new MediaSessionManagerImplApi28(paramContext);
      return;
    } 
    if (Build.VERSION.SDK_INT >= 21) {
      this.mImpl = new MediaSessionManagerImplApi21(paramContext);
      return;
    } 
    this.mImpl = new MediaSessionManagerImplBase(paramContext);
  }
  
  @NonNull
  public static MediaSessionManager getSessionManager(@NonNull Context paramContext) {
    MediaSessionManager mediaSessionManager = sSessionManager;
    if (mediaSessionManager == null)
      synchronized (sLock) {
        MediaSessionManager mediaSessionManager1 = sSessionManager;
        mediaSessionManager = mediaSessionManager1;
        if (mediaSessionManager1 == null) {
          sSessionManager = new MediaSessionManager(paramContext.getApplicationContext());
          mediaSessionManager = sSessionManager;
        } 
        return mediaSessionManager;
      }  
    return mediaSessionManager;
  }
  
  Context getContext() { return this.mImpl.getContext(); }
  
  public boolean isTrustedForMediaControl(@NonNull RemoteUserInfo paramRemoteUserInfo) {
    if (paramRemoteUserInfo != null)
      return this.mImpl.isTrustedForMediaControl(paramRemoteUserInfo.mImpl); 
    throw new IllegalArgumentException("userInfo should not be null");
  }
}
