package androidx.work;

import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;

public final class WorkInfo {
  @NonNull
  private UUID mId;
  
  @NonNull
  private Data mOutputData;
  
  @NonNull
  private State mState;
  
  @NonNull
  private Set<String> mTags;
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public WorkInfo(@NonNull UUID paramUUID, @NonNull State paramState, @NonNull Data paramData, @NonNull List<String> paramList) {
    this.mId = paramUUID;
    this.mState = paramState;
    this.mOutputData = paramData;
    this.mTags = new HashSet(paramList);
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject != null) {
      if (getClass() != paramObject.getClass())
        return false; 
      paramObject = (WorkInfo)paramObject;
      UUID uUID = this.mId;
      if (uUID != null) {
        if (!uUID.equals(paramObject.mId))
          return false; 
      } else if (paramObject.mId != null) {
        return false;
      } 
      if (this.mState != paramObject.mState)
        return false; 
      Data data = this.mOutputData;
      if (data != null) {
        if (!data.equals(paramObject.mOutputData))
          return false; 
      } else if (paramObject.mOutputData != null) {
        return false;
      } 
      Set set = this.mTags;
      return (set != null) ? set.equals(paramObject.mTags) : ((paramObject.mTags == null) ? 1 : 0);
    } 
    return false;
  }
  
  @NonNull
  public UUID getId() { return this.mId; }
  
  @NonNull
  public Data getOutputData() { return this.mOutputData; }
  
  @NonNull
  public State getState() { return this.mState; }
  
  @NonNull
  public Set<String> getTags() { return this.mTags; }
  
  public int hashCode() {
    byte b2;
    byte b1;
    boolean bool;
    UUID uUID = this.mId;
    int i = 0;
    if (uUID != null) {
      bool = uUID.hashCode();
    } else {
      bool = false;
    } 
    State state = this.mState;
    if (state != null) {
      b1 = state.hashCode();
    } else {
      b1 = 0;
    } 
    Data data = this.mOutputData;
    if (data != null) {
      b2 = data.hashCode();
    } else {
      b2 = 0;
    } 
    Set set = this.mTags;
    if (set != null)
      i = set.hashCode(); 
    return ((bool * 31 + b1) * 31 + b2) * 31 + i;
  }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("WorkInfo{mId='");
    stringBuilder.append(this.mId);
    stringBuilder.append('\'');
    stringBuilder.append(", mState=");
    stringBuilder.append(this.mState);
    stringBuilder.append(", mOutputData=");
    stringBuilder.append(this.mOutputData);
    stringBuilder.append(", mTags=");
    stringBuilder.append(this.mTags);
    stringBuilder.append('}');
    return stringBuilder.toString();
  }
}
