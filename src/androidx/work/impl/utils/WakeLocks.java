package androidx.work.impl.utils;

import android.content.Context;
import android.os.PowerManager;
import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import androidx.work.Logger;
import java.util.HashMap;
import java.util.WeakHashMap;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class WakeLocks {
  private static final String TAG = Logger.tagWithPrefix("WakeLocks");
  
  private static final WeakHashMap<PowerManager.WakeLock, String> sWakeLocks = new WeakHashMap();
  
  public static void checkWakeLocks() {
    null = new HashMap();
    synchronized (sWakeLocks) {
      null.putAll(sWakeLocks);
      for (PowerManager.WakeLock wakeLock : null.keySet()) {
        if (wakeLock != null && wakeLock.isHeld()) {
          String str = String.format("WakeLock held for %s", new Object[] { null.get(wakeLock) });
          Logger.get().warning(TAG, str, new Throwable[0]);
        } 
      } 
      return;
    } 
  }
  
  public static PowerManager.WakeLock newWakeLock(@NonNull Context paramContext, @NonNull String paramString) {
    PowerManager powerManager = (PowerManager)paramContext.getApplicationContext().getSystemService("power");
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("WorkManager: ");
    stringBuilder.append(paramString);
    paramString = stringBuilder.toString();
    PowerManager.WakeLock wakeLock = powerManager.newWakeLock(1, paramString);
    synchronized (sWakeLocks) {
      sWakeLocks.put(wakeLock, paramString);
      return wakeLock;
    } 
  }
}
