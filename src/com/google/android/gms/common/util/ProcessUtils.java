package com.google.android.gms.common.util;

import android.os.Process;
import android.os.StrictMode;
import com.google.android.gms.common.annotation.KeepForSdk;
import java.io.BufferedReader;
import java.io.Closeable;
import java.io.FileReader;
import java.io.IOException;
import javax.annotation.Nullable;

@KeepForSdk
public class ProcessUtils {
  private static String zzhe;
  
  private static int zzhf;
  
  static  {
  
  }
  
  @Nullable
  @KeepForSdk
  public static String getMyProcessName() {
    if (zzhe == null) {
      if (zzhf == 0)
        zzhf = Process.myPid(); 
      zzhe = zzd(zzhf);
    } 
    return zzhe;
  }
  
  @Nullable
  private static String zzd(int paramInt) {
    Object object = null;
    if (paramInt <= 0)
      return null; 
    try {
      StringBuilder stringBuilder = new StringBuilder(25);
      stringBuilder.append("/proc/");
      stringBuilder.append(paramInt);
      stringBuilder.append("/cmdline");
      closeable = zzj(stringBuilder.toString());
      try {
        return arrayOfByte;
      } catch (IOException null) {
      
      } finally {}
      IOUtils.closeQuietly(closeable);
      throw arrayOfByte;
    } catch (IOException null) {
    
    } finally {
      closeable = object;
      IOUtils.closeQuietly(closeable);
    } 
    IOUtils.closeQuietly(closeable);
    return null;
  }
  
  private static BufferedReader zzj(String paramString) throws IOException {
    threadPolicy = StrictMode.allowThreadDiskReads();
    try {
      return new BufferedReader(new FileReader(paramString));
    } finally {
      StrictMode.setThreadPolicy(threadPolicy);
    } 
  }
}
