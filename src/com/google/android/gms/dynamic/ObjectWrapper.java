package com.google.android.gms.dynamic;

import android.os.IBinder;
import com.google.android.gms.common.annotation.KeepForSdk;
import java.lang.reflect.Field;

@KeepForSdk
public final class ObjectWrapper<T> extends IObjectWrapper.Stub {
  private final T zzia;
  
  private ObjectWrapper(T paramT) { this.zzia = paramT; }
  
  @KeepForSdk
  public static <T> T unwrap(IObjectWrapper paramIObjectWrapper) {
    if (paramIObjectWrapper instanceof ObjectWrapper)
      return (T)((ObjectWrapper)paramIObjectWrapper).zzia; 
    IBinder iBinder = paramIObjectWrapper.asBinder();
    Field[] arrayOfField = iBinder.getClass().getDeclaredFields();
    int j = arrayOfField.length;
    int i = 0;
    paramIObjectWrapper = null;
    byte b;
    for (b = 0; i < j; b = b1) {
      Field field1 = arrayOfField[i];
      byte b1 = b;
      if (!field1.isSynthetic()) {
        b1 = b + true;
        field = field1;
      } 
      i++;
    } 
    if (b == 1) {
      if (!field.isAccessible()) {
        field.setAccessible(true);
        try {
          return (T)field.get(iBinder);
        } catch (NullPointerException field) {
          throw new IllegalArgumentException("Binder object is null.", field);
        } catch (IllegalAccessException field) {
          throw new IllegalArgumentException("Could not access the field in remoteBinder.", field);
        } 
      } 
      throw new IllegalArgumentException("IObjectWrapper declared field not private!");
    } 
    i = arrayOfField.length;
    StringBuilder stringBuilder = new StringBuilder(64);
    stringBuilder.append("Unexpected number of IObjectWrapper declared fields: ");
    stringBuilder.append(i);
    IllegalArgumentException illegalArgumentException = new IllegalArgumentException(stringBuilder.toString());
    throw illegalArgumentException;
  }
  
  @KeepForSdk
  public static <T> IObjectWrapper wrap(T paramT) { return new ObjectWrapper(paramT); }
}
