package android.support.v4.util;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import java.util.Collection;
import java.util.Map;
import java.util.Set;

public class ArrayMap<K, V> extends SimpleArrayMap<K, V> implements Map<K, V> {
  @Nullable
  MapCollections<K, V> mCollections;
  
  public ArrayMap() {}
  
  public ArrayMap(int paramInt) { super(paramInt); }
  
  public ArrayMap(SimpleArrayMap paramSimpleArrayMap) { super(paramSimpleArrayMap); }
  
  private MapCollections<K, V> getCollection() {
    if (this.mCollections == null)
      this.mCollections = new Object(this); 
    return this.mCollections;
  }
  
  public boolean containsAll(@NonNull Collection<?> paramCollection) { return MapCollections.containsAllHelper(this, paramCollection); }
  
  public Set<Map.Entry<K, V>> entrySet() { return getCollection().getEntrySet(); }
  
  public Set<K> keySet() { return getCollection().getKeySet(); }
  
  public void putAll(Map<? extends K, ? extends V> paramMap) {
    ensureCapacity(this.mSize + paramMap.size());
    for (Map.Entry entry : paramMap.entrySet())
      put(entry.getKey(), entry.getValue()); 
  }
  
  public boolean removeAll(@NonNull Collection<?> paramCollection) { return MapCollections.removeAllHelper(this, paramCollection); }
  
  public boolean retainAll(@NonNull Collection<?> paramCollection) { return MapCollections.retainAllHelper(this, paramCollection); }
  
  public Collection<V> values() { return getCollection().getValues(); }
}
