package androidx.work.impl.constraints.controllers;

import android.content.Context;
import android.os.Build;
import android.support.annotation.NonNull;
import androidx.work.NetworkType;
import androidx.work.impl.constraints.NetworkState;
import androidx.work.impl.constraints.trackers.Trackers;
import androidx.work.impl.model.WorkSpec;

public class NetworkConnectedController extends ConstraintController<NetworkState> {
  public NetworkConnectedController(Context paramContext) { super(Trackers.getInstance(paramContext).getNetworkStateTracker()); }
  
  boolean hasConstraint(@NonNull WorkSpec paramWorkSpec) { return (paramWorkSpec.constraints.getRequiredNetworkType() == NetworkType.CONNECTED); }
  
  boolean isConstrained(@NonNull NetworkState paramNetworkState) {
    int i = Build.VERSION.SDK_INT;
    boolean bool = true;
    if (i >= 26) {
      if (paramNetworkState.isConnected()) {
        if (!paramNetworkState.isValidated())
          return true; 
        bool = false;
      } 
      return bool;
    } 
    return paramNetworkState.isConnected() ^ true;
  }
}
