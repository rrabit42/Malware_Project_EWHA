package com.google.android.gms.auth.api.proxy;

import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import com.google.android.gms.common.annotation.KeepForSdkWithMembers;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Class;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Constructor;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Field;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Param;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.VersionField;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

@KeepForSdkWithMembers
@Class(creator = "ProxyRequestCreator")
public class ProxyRequest extends AbstractSafeParcelable {
  public static final Parcelable.Creator<ProxyRequest> CREATOR = new zza();
  
  public static final int HTTP_METHOD_DELETE;
  
  public static final int HTTP_METHOD_GET = 0;
  
  public static final int HTTP_METHOD_HEAD;
  
  public static final int HTTP_METHOD_OPTIONS;
  
  public static final int HTTP_METHOD_PATCH;
  
  public static final int HTTP_METHOD_POST = 1;
  
  public static final int HTTP_METHOD_PUT = 2;
  
  public static final int HTTP_METHOD_TRACE;
  
  public static final int LAST_CODE;
  
  public static final int VERSION_CODE = 2;
  
  @Field(id = 4)
  public final byte[] body;
  
  @Field(id = 2)
  public final int httpMethod;
  
  @Field(id = 3)
  public final long timeoutMillis;
  
  @Field(id = 1)
  public final String url;
  
  @VersionField(id = 1000)
  private final int versionCode;
  
  @Field(id = 5)
  private Bundle zzby;
  
  static  {
    HTTP_METHOD_DELETE = 3;
    HTTP_METHOD_HEAD = 4;
    HTTP_METHOD_OPTIONS = 5;
    HTTP_METHOD_TRACE = 6;
    HTTP_METHOD_PATCH = 7;
    LAST_CODE = 7;
  }
  
  @Constructor
  ProxyRequest(@Param(id = 1000) int paramInt1, @Param(id = 1) String paramString, @Param(id = 2) int paramInt2, @Param(id = 3) long paramLong, @Param(id = 4) byte[] paramArrayOfByte, @Param(id = 5) Bundle paramBundle) {
    this.versionCode = paramInt1;
    this.url = paramString;
    this.httpMethod = paramInt2;
    this.timeoutMillis = paramLong;
    this.body = paramArrayOfByte;
    this.zzby = paramBundle;
  }
  
  public Map<String, String> getHeaderMap() {
    LinkedHashMap linkedHashMap = new LinkedHashMap(this.zzby.size());
    for (String str : this.zzby.keySet())
      linkedHashMap.put(str, this.zzby.getString(str)); 
    return Collections.unmodifiableMap(linkedHashMap);
  }
  
  public String toString() {
    String str = this.url;
    int i = this.httpMethod;
    StringBuilder stringBuilder = new StringBuilder(String.valueOf(str).length() + 42);
    stringBuilder.append("ProxyRequest[ url: ");
    stringBuilder.append(str);
    stringBuilder.append(", method: ");
    stringBuilder.append(i);
    stringBuilder.append(" ]");
    return stringBuilder.toString();
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt) {
    paramInt = SafeParcelWriter.beginObjectHeader(paramParcel);
    SafeParcelWriter.writeString(paramParcel, 1, this.url, false);
    SafeParcelWriter.writeInt(paramParcel, 2, this.httpMethod);
    SafeParcelWriter.writeLong(paramParcel, 3, this.timeoutMillis);
    SafeParcelWriter.writeByteArray(paramParcel, 4, this.body, false);
    SafeParcelWriter.writeBundle(paramParcel, 5, this.zzby, false);
    SafeParcelWriter.writeInt(paramParcel, 1000, this.versionCode);
    SafeParcelWriter.finishObjectHeader(paramParcel, paramInt);
  }
}
