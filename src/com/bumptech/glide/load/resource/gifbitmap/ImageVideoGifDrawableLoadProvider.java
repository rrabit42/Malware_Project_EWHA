package com.bumptech.glide.load.resource.gifbitmap;

import android.graphics.Bitmap;
import com.bumptech.glide.load.Encoder;
import com.bumptech.glide.load.ResourceDecoder;
import com.bumptech.glide.load.ResourceEncoder;
import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
import com.bumptech.glide.load.model.ImageVideoWrapper;
import com.bumptech.glide.load.resource.file.FileToStreamDecoder;
import com.bumptech.glide.load.resource.gif.GifDrawable;
import com.bumptech.glide.provider.DataLoadProvider;
import java.io.File;
import java.io.InputStream;

public class ImageVideoGifDrawableLoadProvider extends Object implements DataLoadProvider<ImageVideoWrapper, GifBitmapWrapper> {
  private final ResourceDecoder<File, GifBitmapWrapper> cacheDecoder;
  
  private final ResourceEncoder<GifBitmapWrapper> encoder;
  
  private final ResourceDecoder<ImageVideoWrapper, GifBitmapWrapper> sourceDecoder;
  
  private final Encoder<ImageVideoWrapper> sourceEncoder;
  
  public ImageVideoGifDrawableLoadProvider(DataLoadProvider<ImageVideoWrapper, Bitmap> paramDataLoadProvider1, DataLoadProvider<InputStream, GifDrawable> paramDataLoadProvider2, BitmapPool paramBitmapPool) {
    GifBitmapWrapperResourceDecoder gifBitmapWrapperResourceDecoder = new GifBitmapWrapperResourceDecoder(paramDataLoadProvider1.getSourceDecoder(), paramDataLoadProvider2.getSourceDecoder(), paramBitmapPool);
    this.cacheDecoder = new FileToStreamDecoder(new GifBitmapWrapperStreamResourceDecoder(gifBitmapWrapperResourceDecoder));
    this.sourceDecoder = gifBitmapWrapperResourceDecoder;
    this.encoder = new GifBitmapWrapperResourceEncoder(paramDataLoadProvider1.getEncoder(), paramDataLoadProvider2.getEncoder());
    this.sourceEncoder = paramDataLoadProvider1.getSourceEncoder();
  }
  
  public ResourceDecoder<File, GifBitmapWrapper> getCacheDecoder() { return this.cacheDecoder; }
  
  public ResourceEncoder<GifBitmapWrapper> getEncoder() { return this.encoder; }
  
  public ResourceDecoder<ImageVideoWrapper, GifBitmapWrapper> getSourceDecoder() { return this.sourceDecoder; }
  
  public Encoder<ImageVideoWrapper> getSourceEncoder() { return this.sourceEncoder; }
}
