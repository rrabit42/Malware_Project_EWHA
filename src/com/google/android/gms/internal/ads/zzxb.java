package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.Bundle;
import android.os.RemoteException;
import android.os.SystemClock;
import android.text.TextUtils;
import com.google.ads.mediation.AdUrlAdapter;
import com.google.ads.mediation.admob.AdMobAdapter;
import com.google.android.gms.ads.formats.NativeAdOptions;
import com.google.android.gms.ads.internal.zzbv;
import com.google.android.gms.ads.mediation.MediationAdapter;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.dynamic.ObjectWrapper;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.concurrent.GuardedBy;
import org.json.JSONException;
import org.json.JSONObject;

@zzadh
public final class zzxb implements zzxf {
  private final Context mContext;
  
  private final Object mLock = new Object();
  
  private zzjj zzaao;
  
  private final zzjn zzaau;
  
  private final boolean zzael;
  
  private final String zzbth;
  
  private final long zzbti;
  
  private final zzwy zzbtj;
  
  private final zzwx zzbtk;
  
  private final List<String> zzbtl;
  
  private final List<String> zzbtm;
  
  private final boolean zzbtn;
  
  private final boolean zzbto;
  
  @GuardedBy("mLock")
  private zzxq zzbtp;
  
  @GuardedBy("mLock")
  private int zzbtq = -2;
  
  private zzxw zzbtr;
  
  private final zzxn zzwh;
  
  private final zzpl zzyb;
  
  private final List<String> zzyc;
  
  private final zzang zzyf;
  
  public zzxb(Context paramContext, String paramString, zzxn paramzzxn, zzwy paramzzwy, zzwx paramzzwx, zzjj paramzzjj, zzjn paramzzjn, zzang paramzzang, boolean paramBoolean1, boolean paramBoolean2, zzpl paramzzpl, List<String> paramList1, List<String> paramList2, List<String> paramList3, boolean paramBoolean3) {
    this.mContext = paramContext;
    this.zzwh = paramzzxn;
    this.zzbtk = paramzzwx;
    if ("com.google.ads.mediation.customevent.CustomEventAdapter".equals(paramString))
      str = zzmh(); 
    this.zzbth = str;
    this.zzbtj = paramzzwy;
    if (paramzzwx.zzbsl != -1L) {
      l = paramzzwx.zzbsl;
    } else if (paramzzwy.zzbsl != -1L) {
      l = paramzzwy.zzbsl;
    } else {
      l = 10000L;
    } 
    this.zzbti = l;
    this.zzaao = paramzzjj;
    this.zzaau = paramzzjn;
    this.zzyf = paramzzang;
    this.zzael = paramBoolean1;
    this.zzbtn = paramBoolean2;
    this.zzyb = paramzzpl;
    this.zzyc = paramList1;
    this.zzbtl = paramList2;
    this.zzbtm = paramList3;
    this.zzbto = paramBoolean3;
  }
  
  @VisibleForTesting
  private static zzxq zza(MediationAdapter paramMediationAdapter) { return new zzyk(paramMediationAdapter); }
  
  @GuardedBy("mLock")
  private final void zza(zzxa paramzzxa) {
    String str = zzbk(this.zzbtk.zzbsb);
    try {
      if (this.zzyf.zzcvf < 4100000) {
        if (this.zzaau.zzarc) {
          this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaao, str, paramzzxa);
          return;
        } 
        this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaau, this.zzaao, str, paramzzxa);
        return;
      } 
      if (this.zzael || this.zzbtk.zzmg()) {
        ArrayList arrayList = new ArrayList(this.zzyc);
        if (this.zzbtl != null)
          for (String str3 : this.zzbtl) {
            String str2 = ":false";
            String str1 = str2;
            if (this.zzbtm != null) {
              str1 = str2;
              if (this.zzbtm.contains(str3))
                str1 = ":true"; 
            } 
            StringBuilder stringBuilder = new StringBuilder(String.valueOf(str3).length() + 7 + str1.length());
            stringBuilder.append("custom:");
            stringBuilder.append(str3);
            stringBuilder.append(str1);
            arrayList.add(stringBuilder.toString());
          }  
        this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaao, str, this.zzbtk.zzbrr, paramzzxa, this.zzyb, arrayList);
        return;
      } 
      if (this.zzaau.zzarc) {
        this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaao, str, this.zzbtk.zzbrr, paramzzxa);
        return;
      } 
      if (this.zzbtn) {
        if (this.zzbtk.zzbsf != null) {
          this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaao, str, this.zzbtk.zzbrr, paramzzxa, new zzpl(zzbl(this.zzbtk.zzbsj)), this.zzbtk.zzbsi);
          return;
        } 
        this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaau, this.zzaao, str, this.zzbtk.zzbrr, paramzzxa);
        return;
      } 
      this.zzbtp.zza(ObjectWrapper.wrap(this.mContext), this.zzaau, this.zzaao, str, this.zzbtk.zzbrr, paramzzxa);
      return;
    } catch (RemoteException paramzzxa) {
      zzakb.zzc("Could not request ad from mediation adapter.", paramzzxa);
      zzx(5);
      return;
    } 
  }
  
  @GuardedBy("mLock")
  private final String zzbk(String paramString) {
    if (paramString != null && zzmk()) {
      if (zzy(2))
        return paramString; 
      try {
        JSONObject jSONObject = new JSONObject(paramString);
        jSONObject.remove("cpm_floor_cents");
        return jSONObject.toString();
      } catch (JSONException jSONException) {
        zzakb.zzdk("Could not remove field. Returning the original value");
      } 
    } 
    return paramString;
  }
  
  private static NativeAdOptions zzbl(String paramString) {
    NativeAdOptions.Builder builder = new NativeAdOptions.Builder();
    if (paramString == null)
      return builder.build(); 
    try {
      JSONObject jSONObject = new JSONObject(paramString);
      byte b = 0;
      builder.setRequestMultipleImages(jSONObject.optBoolean("multiple_images", false));
      builder.setReturnUrlsForImageAssets(jSONObject.optBoolean("only_urls", false));
      String str = jSONObject.optString("native_image_orientation", "any");
      if ("landscape".equals(str)) {
        b = 2;
      } else if ("portrait".equals(str)) {
        b = 1;
      } else if (!"any".equals(str)) {
        b = -1;
      } 
      builder.setImageOrientation(b);
    } catch (JSONException paramString) {
      zzakb.zzc("Exception occurred when creating native ad options", paramString);
    } 
    return builder.build();
  }
  
  private final String zzmh() {
    str = "com.google.ads.mediation.customevent.CustomEventAdapter";
    try {
      if (!TextUtils.isEmpty(this.zzbtk.zzbrv)) {
        if (this.zzwh.zzbn(this.zzbtk.zzbrv))
          str = "com.google.android.gms.ads.mediation.customevent.CustomEventAdapter"; 
        return str;
      } 
    } catch (RemoteException str) {
      zzakb.zzdk("Fail to determine the custom event's version, assuming the old one.");
    } 
    return "com.google.ads.mediation.customevent.CustomEventAdapter";
  }
  
  @GuardedBy("mLock")
  private final zzxw zzmi() {
    if (this.zzbtq != 0 || !zzmk())
      return null; 
    try {
      if (zzy(4) && this.zzbtr != null && this.zzbtr.zzmm() != 0)
        return this.zzbtr; 
    } catch (RemoteException remoteException) {
      zzakb.zzdk("Could not get cpm value from MediationResponseMetadata");
    } 
    return new zzxd(zzml());
  }
  
  @GuardedBy("mLock")
  private final zzxq zzmj() {
    String str = String.valueOf(this.zzbth);
    if (str.length() != 0) {
      str = "Instantiating mediation adapter: ".concat(str);
    } else {
      str = new String("Instantiating mediation adapter: ");
    } 
    zzakb.zzdj(str);
    if (!this.zzael && !this.zzbtk.zzmg()) {
      zzna zzna = zznk.zzbai;
      if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() && "com.google.ads.mediation.admob.AdMobAdapter".equals(this.zzbth))
        return zza(new AdMobAdapter()); 
      zzna = zznk.zzbaj;
      if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() && "com.google.ads.mediation.AdUrlAdapter".equals(this.zzbth))
        return zza(new AdUrlAdapter()); 
      if ("com.google.ads.mediation.admob.AdMobCustomTabsAdapter".equals(this.zzbth))
        return new zzyk(new zzzv()); 
    } 
    try {
      return this.zzwh.zzbm(this.zzbth);
    } catch (RemoteException remoteException) {
      str = String.valueOf(this.zzbth);
      if (str.length() != 0) {
        str = "Could not instantiate mediation adapter: ".concat(str);
      } else {
        str = new String("Could not instantiate mediation adapter: ");
      } 
      zzakb.zza(str, remoteException);
      return null;
    } 
  }
  
  private final boolean zzmk() { return (this.zzbtj.zzbsx != -1); }
  
  @GuardedBy("mLock")
  private final int zzml() {
    if (this.zzbtk.zzbsb == null)
      return 0; 
    try {
      boolean bool;
      JSONObject jSONObject = new JSONObject(this.zzbtk.zzbsb);
      if ("com.google.ads.mediation.admob.AdMobAdapter".equals(this.zzbth))
        return jSONObject.optInt("cpm_cents", 0); 
      if (zzy(2)) {
        bool = jSONObject.optInt("cpm_floor_cents", 0);
      } else {
        bool = false;
      } 
      int i = bool;
      if (!bool)
        i = jSONObject.optInt("penalized_average_cpm_cents", 0); 
      return i;
    } catch (JSONException jSONException) {
      zzakb.zzdk("Could not convert to json. Returning 0");
      return 0;
    } 
  }
  
  @GuardedBy("mLock")
  private final boolean zzy(int paramInt) {
    try {
      Bundle bundle;
      if (this.zzael) {
        bundle = this.zzbtp.zzmr();
      } else if (this.zzaau.zzarc) {
        bundle = this.zzbtp.getInterstitialAdapterInfo();
      } else {
        bundle = this.zzbtp.zzmq();
      } 
      return (bundle != null && (bundle.getInt("capabilities", 0) & paramInt) == paramInt);
    } catch (RemoteException remoteException) {
      zzakb.zzdk("Could not get adapter info. Returning false");
      return false;
    } 
  }
  
  public final void cancel() {
    Object object = this.mLock;
    /* monitor enter ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=null} */
    try {
      if (this.zzbtp != null)
        this.zzbtp.destroy(); 
    } catch (RemoteException remoteException) {
      zzakb.zzc("Could not destroy mediation adapter.", remoteException);
    } finally {
      JSONObject jSONObject;
    } 
    this.zzbtq = -1;
    this.mLock.notify();
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=null} */
  }
  
  public final zzxe zza(long paramLong1, long paramLong2) {
    synchronized (this.mLock) {
      long l1 = SystemClock.elapsedRealtime();
      zzxa zzxa = new zzxa();
      zzakk.zzcrm.post(new zzxc(this, zzxa));
      long l2 = this.zzbti;
      while (true) {
        if (this.zzbtq != -2) {
          paramLong1 = zzbv.zzer().elapsedRealtime();
          return new zzxe(this.zzbtk, this.zzbtp, this.zzbth, zzxa, this.zzbtq, zzmi(), paramLong1 - l1);
        } 
        long l4 = SystemClock.elapsedRealtime();
        long l3 = l2 - l4 - l1;
        l4 = paramLong2 - l4 - paramLong1;
        if (l3 <= 0L || l4 <= 0L) {
          zzakb.zzdj("Timed out waiting for adapter.");
          this.zzbtq = 3;
          continue;
        } 
        try {
          this.mLock.wait(Math.min(l3, l4));
        } catch (InterruptedException interruptedException) {
          this.zzbtq = 5;
        } 
      } 
    } 
  }
  
  public final void zza(int paramInt, zzxw paramzzxw) {
    synchronized (this.mLock) {
      this.zzbtq = 0;
      this.zzbtr = paramzzxw;
      this.mLock.notify();
      return;
    } 
  }
  
  public final void zzx(int paramInt) {
    synchronized (this.mLock) {
      this.zzbtq = paramInt;
      this.mLock.notify();
      return;
    } 
  }
}
