package com.google.android.gms.internal.ads;

import java.security.GeneralSecurityException;

final class zzauu extends Object implements zzaug<zzatz> {
  private final zzatz zzd(zzbah paramzzbah) throws GeneralSecurityException {
    try {
      zzavy zzavy = zzavy.zzo(paramzzbah);
      if (zzavy instanceof zzavy) {
        zzavy = (zzavy)zzavy;
        zzazq.zzj(zzavy.getVersion(), 0);
        zzazq.zzbi(zzavy.zzwv().size());
        if (zzavy.zzxe().zzxb() == 12 || zzavy.zzxe().zzxb() == 16)
          return (zzatz)new zzayi(zzavy.zzwv().toByteArray(), zzavy.zzxe().zzxb()); 
        throw new GeneralSecurityException("invalid IV size; acceptable values have 12 or 16 bytes");
      } 
      throw new GeneralSecurityException("expected AesEaxKey proto");
    } catch (zzbbu paramzzbah) {
      throw new GeneralSecurityException("expected serialized AesEaxKey proto", paramzzbah);
    } 
  }
  
  public final int getVersion() { return 0; }
  
  public final zzbcu zzb(zzbah paramzzbah) throws GeneralSecurityException {
    try {
      return zzb(zzawa.zzq(paramzzbah));
    } catch (zzbbu paramzzbah) {
      throw new GeneralSecurityException("expected serialized AesEaxKeyFormat proto", paramzzbah);
    } 
  }
  
  public final zzbcu zzb(zzbcu paramzzbcu) throws GeneralSecurityException {
    if (paramzzbcu instanceof zzawa) {
      zzawa zzawa = (zzawa)paramzzbcu;
      zzazq.zzbi(zzawa.getKeySize());
      if (zzawa.zzxe().zzxb() == 12 || zzawa.zzxe().zzxb() == 16)
        return (zzbbo)zzavy.zzxf().zzp(zzbah.zzo(zzazl.zzbh(zzawa.getKeySize()))).zzb(zzawa.zzxe()).zzan(0).zzadi(); 
      throw new GeneralSecurityException("invalid IV size; acceptable values have 12 or 16 bytes");
    } 
    throw new GeneralSecurityException("expected AesEaxKeyFormat proto");
  }
  
  public final zzaxi zzc(zzbah paramzzbah) throws GeneralSecurityException {
    zzavy zzavy = (zzavy)zzb(paramzzbah);
    return (zzaxi)zzaxi.zzyz().zzeb("type.googleapis.com/google.crypto.tink.AesEaxKey").zzai(zzavy.zzaav()).zzb(zzaxi.zzb.zzdkx).zzadi();
  }
}
