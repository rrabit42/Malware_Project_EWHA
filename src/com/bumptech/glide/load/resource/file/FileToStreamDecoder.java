package com.bumptech.glide.load.resource.file;

import com.bumptech.glide.load.ResourceDecoder;
import com.bumptech.glide.load.engine.Resource;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

public class FileToStreamDecoder<T> extends Object implements ResourceDecoder<File, T> {
  private static final FileOpener DEFAULT_FILE_OPENER = new FileOpener();
  
  private final FileOpener fileOpener;
  
  private ResourceDecoder<InputStream, T> streamDecoder;
  
  public FileToStreamDecoder(ResourceDecoder<InputStream, T> paramResourceDecoder) { this(paramResourceDecoder, DEFAULT_FILE_OPENER); }
  
  FileToStreamDecoder(ResourceDecoder<InputStream, T> paramResourceDecoder, FileOpener paramFileOpener) {
    this.streamDecoder = paramResourceDecoder;
    this.fileOpener = paramFileOpener;
  }
  
  public Resource<T> decode(File paramFile, int paramInt1, int paramInt2) throws IOException {
    inputStream = null;
    try {
      inputStream1 = this.fileOpener.open(paramFile);
      inputStream = inputStream1;
      return this.streamDecoder.decode(inputStream1, paramInt1, paramInt2);
    } finally {
      if (inputStream != null)
        try {
          inputStream.close();
        } catch (IOException inputStream) {} 
    } 
  }
  
  public String getId() { return ""; }
}
