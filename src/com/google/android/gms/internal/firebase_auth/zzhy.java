package com.google.android.gms.internal.firebase_auth;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;

final class zzhy {
  private static final Class<?> zzaau = zzjd();
  
  private static final zziq<?, ?> zzaav = zzv(false);
  
  private static final zziq<?, ?> zzaaw = zzv(true);
  
  private static final zziq<?, ?> zzaax = new zzis();
  
  static <UT, UB> UB zza(int paramInt1, int paramInt2, UB paramUB, zziq<UT, UB> paramzziq) {
    UB uB = paramUB;
    if (paramUB == null)
      uB = (UB)paramzziq.zzjo(); 
    paramzziq.zza(uB, paramInt1, paramInt2);
    return uB;
  }
  
  static <UT, UB> UB zza(int paramInt, List<Integer> paramList, zzfy paramzzfy, UB paramUB, zziq<UT, UB> paramzziq) {
    UB uB;
    if (paramzzfy == null)
      return paramUB; 
    if (paramList instanceof java.util.RandomAccess) {
      int i = paramList.size();
      byte b1 = 0;
      byte b2 = 0;
      while (b1 < i) {
        int j = ((Integer)paramList.get(b1)).intValue();
        if (paramzzfy.zzc(j)) {
          if (b1 != b2)
            paramList.set(b2, Integer.valueOf(j)); 
          b2++;
        } else {
          paramUB = (UB)zza(paramInt, j, paramUB, paramzziq);
        } 
        b1++;
      } 
      uB = paramUB;
      if (b2 != i) {
        paramList.subList(b2, i).clear();
        return paramUB;
      } 
    } else {
      Iterator iterator = paramList.iterator();
      while (true) {
        uB = paramUB;
        if (iterator.hasNext()) {
          int i = ((Integer)iterator.next()).intValue();
          if (!paramzzfy.zzc(i)) {
            paramUB = (UB)zza(paramInt, i, paramUB, paramzziq);
            iterator.remove();
          } 
          continue;
        } 
        break;
      } 
    } 
    return uB;
  }
  
  public static void zza(int paramInt, List<String> paramList, zzjl paramzzjl) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zza(paramInt, paramList); 
  }
  
  public static void zza(int paramInt, List<?> paramList, zzjl paramzzjl, zzhw paramzzhw) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zza(paramInt, paramList, paramzzhw); 
  }
  
  public static void zza(int paramInt, List<Double> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzg(paramInt, paramList, paramBoolean); 
  }
  
  static <T, FT extends zzfm<FT>> void zza(zzfh<FT> paramzzfh, T paramT1, T paramT2) {
    paramT2 = (T)paramzzfh.zzd(paramT2);
    if (!paramT2.isEmpty())
      paramzzfh.zze(paramT1).zza(paramT2); 
  }
  
  static <T> void zza(zzgx paramzzgx, T paramT1, T paramT2, long paramLong) { zziw.zza(paramT1, paramLong, paramzzgx.zzb(zziw.zzp(paramT1, paramLong), zziw.zzp(paramT2, paramLong))); }
  
  static <T, UT, UB> void zza(zziq<UT, UB> paramzziq, T paramT1, T paramT2) { paramzziq.zze(paramT1, paramzziq.zzg(paramzziq.zzs(paramT1), paramzziq.zzs(paramT2))); }
  
  static int zzaa(List<?> paramList) { return paramList.size() << 2; }
  
  static int zzab(List<?> paramList) { return paramList.size() << 3; }
  
  static int zzac(List<?> paramList) { return paramList.size(); }
  
  public static void zzb(int paramInt, List<zzeh> paramList, zzjl paramzzjl) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzb(paramInt, paramList); 
  }
  
  public static void zzb(int paramInt, List<?> paramList, zzjl paramzzjl, zzhw paramzzhw) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzb(paramInt, paramList, paramzzhw); 
  }
  
  public static void zzb(int paramInt, List<Float> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzf(paramInt, paramList, paramBoolean); 
  }
  
  static int zzc(int paramInt, Object paramObject, zzhw paramzzhw) { return (paramObject instanceof zzgj) ? zzfa.zza(paramInt, (zzgj)paramObject) : zzfa.zzb(paramInt, (zzhc)paramObject, paramzzhw); }
  
  static int zzc(int paramInt, List<?> paramList) {
    zzgl zzgl;
    int j = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (j == 0)
      return 0; 
    int i = zzfa.zzag(paramInt) * j;
    paramInt = i;
    if (paramList instanceof zzgl) {
      zzgl = (zzgl)paramList;
      paramInt = i;
      b1 = b2;
      while (true) {
        i = paramInt;
        if (b1 < j) {
          Object object = zzgl.zzat(b1);
          if (object instanceof zzeh) {
            i = zzfa.zzb((zzeh)object);
          } else {
            i = zzfa.zzdb((String)object);
          } 
          paramInt += i;
          b1++;
          continue;
        } 
        break;
      } 
    } else {
      while (true) {
        i = paramInt;
        if (b1 < j) {
          Object object = zzgl.get(b1);
          if (object instanceof zzeh) {
            i = zzfa.zzb((zzeh)object);
          } else {
            i = zzfa.zzdb((String)object);
          } 
          paramInt += i;
          b1++;
          continue;
        } 
        break;
      } 
    } 
    return i;
  }
  
  static int zzc(int paramInt, List<?> paramList, zzhw paramzzhw) {
    int k = paramList.size();
    int j = 0;
    if (k == 0)
      return 0; 
    int i = zzfa.zzag(paramInt) * k;
    for (paramInt = j; paramInt < k; paramInt++) {
      Object object = paramList.get(paramInt);
      if (object instanceof zzgj) {
        j = zzfa.zza((zzgj)object);
      } else {
        j = zzfa.zza((zzhc)object, paramzzhw);
      } 
      i += j;
    } 
    return i;
  }
  
  public static void zzc(int paramInt, List<Long> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzc(paramInt, paramList, paramBoolean); 
  }
  
  static int zzd(int paramInt, List<zzeh> paramList) {
    int j = paramList.size();
    int i = 0;
    if (j == 0)
      return 0; 
    j *= zzfa.zzag(paramInt);
    paramInt = i;
    i = j;
    while (paramInt < paramList.size()) {
      i += zzfa.zzb((zzeh)paramList.get(paramInt));
      paramInt++;
    } 
    return i;
  }
  
  static int zzd(int paramInt, List<zzhc> paramList, zzhw paramzzhw) {
    int j = paramList.size();
    byte b = 0;
    if (j == 0)
      return 0; 
    int i = 0;
    while (b < j) {
      i += zzfa.zzc(paramInt, (zzhc)paramList.get(b), paramzzhw);
      b++;
    } 
    return i;
  }
  
  public static void zzd(int paramInt, List<Long> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzd(paramInt, paramList, paramBoolean); 
  }
  
  static boolean zzd(Object paramObject1, Object paramObject2) { return (paramObject1 == paramObject2 || (paramObject1 != null && paramObject1.equals(paramObject2))); }
  
  public static void zze(int paramInt, List<Long> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzn(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzf(int paramInt, List<Long> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zze(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzg(int paramInt, List<Long> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzl(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzg(Class<?> paramClass) {
    if (!zzft.class.isAssignableFrom(paramClass)) {
      Class clazz = zzaau;
      if (clazz != null) {
        if (clazz.isAssignableFrom(paramClass))
          return; 
        throw new IllegalArgumentException("Message classes must extend GeneratedMessage or GeneratedMessageLite");
      } 
    } 
  }
  
  public static void zzh(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zza(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzi(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzj(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzj(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzm(paramInt, paramList, paramBoolean); 
  }
  
  public static zziq<?, ?> zzja() { return zzaav; }
  
  public static zziq<?, ?> zzjb() { return zzaaw; }
  
  public static zziq<?, ?> zzjc() { return zzaax; }
  
  private static Class<?> zzjd() {
    try {
      return Class.forName("com.google.protobuf.GeneratedMessage");
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  private static Class<?> zzje() {
    try {
      return Class.forName("com.google.protobuf.UnknownFieldSetSchema");
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  public static void zzk(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzb(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzl(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzk(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzm(int paramInt, List<Integer> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzh(paramInt, paramList, paramBoolean); 
  }
  
  public static void zzn(int paramInt, List<Boolean> paramList, zzjl paramzzjl, boolean paramBoolean) throws IOException {
    if (paramList != null && !paramList.isEmpty())
      paramzzjl.zzi(paramInt, paramList, paramBoolean); 
  }
  
  static int zzo(int paramInt, List<Long> paramList, boolean paramBoolean) { return (paramList.size() == 0) ? 0 : (zzt(paramList) + paramList.size() * zzfa.zzag(paramInt)); }
  
  static int zzp(int paramInt, List<Long> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzu(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzq(int paramInt, List<Long> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzv(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzr(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzw(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzs(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzx(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzt(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzy(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzt(List<Long> paramList) {
    zzgq zzgq;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzgq) {
      zzgq = (zzgq)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zze(zzgq.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zze(((Long)zzgq.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzu(int paramInt, List<Integer> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (zzz(paramList) + i * zzfa.zzag(paramInt));
  }
  
  static int zzu(List<Long> paramList) {
    zzgq zzgq;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzgq) {
      zzgq = (zzgq)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzf(zzgq.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzf(((Long)zzgq.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzv(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzfa.zzn(paramInt, 0));
  }
  
  static int zzv(List<Long> paramList) {
    zzgq zzgq;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzgq) {
      zzgq = (zzgq)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzg(zzgq.getLong(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzg(((Long)zzgq.get(b2)).longValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  private static zziq<?, ?> zzv(boolean paramBoolean) {
    try {
      Class clazz = zzje();
      return (clazz == null) ? null : (zziq)clazz.getConstructor(new Class[] { boolean.class }).newInstance(new Object[] { Boolean.valueOf(paramBoolean) });
    } catch (Throwable throwable) {
      return null;
    } 
  }
  
  static int zzw(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzfa.zzg(paramInt, 0L));
  }
  
  static int zzw(List<Integer> paramList) {
    zzfu zzfu;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzfu) {
      zzfu = (zzfu)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzam(zzfu.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzam(((Integer)zzfu.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzx(int paramInt, List<?> paramList, boolean paramBoolean) {
    int i = paramList.size();
    return (i == 0) ? 0 : (i * zzfa.zzc(paramInt, true));
  }
  
  static int zzx(List<Integer> paramList) {
    zzfu zzfu;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzfu) {
      zzfu = (zzfu)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzah(zzfu.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzah(((Integer)zzfu.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzy(List<Integer> paramList) {
    zzfu zzfu;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzfu) {
      zzfu = (zzfu)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzai(zzfu.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzai(((Integer)zzfu.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
  
  static int zzz(List<Integer> paramList) {
    zzfu zzfu;
    int i = paramList.size();
    byte b1 = 0;
    byte b2 = 0;
    if (i == 0)
      return 0; 
    if (paramList instanceof zzfu) {
      zzfu = (zzfu)paramList;
      int j = 0;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzaj(zzfu.getInt(b2));
          b2++;
          continue;
        } 
        break;
      } 
    } else {
      int j = 0;
      b2 = b1;
      while (true) {
        b1 = j;
        if (b2 < i) {
          j += zzfa.zzaj(((Integer)zzfu.get(b2)).intValue());
          b2++;
          continue;
        } 
        break;
      } 
    } 
    return b1;
  }
}
