package com.google.android.gms.common.api.internal;

import android.support.annotation.WorkerThread;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.internal.BaseGmsClient;
import com.google.android.gms.common.internal.GoogleApiAvailabilityCache;
import java.util.ArrayList;
import java.util.Map;

final class zaan extends zaau {
  private final Map<Api.Client, zaam> zagk;
  
  public zaan(zaak paramzaak, Map<Api.Client, zaam> paramMap) {
    super(paramzaak, null);
    this.zagk = paramMap;
  }
  
  @WorkerThread
  public final void zaan() {
    ConnectionResult connectionResult = new GoogleApiAvailabilityCache(zaak.zab(this.zagi));
    ArrayList arrayList1 = new ArrayList();
    ArrayList arrayList2 = new ArrayList();
    for (Api.Client client : this.zagk.keySet()) {
      if (client.requiresGooglePlayServices() && !zaam.zaa((zaam)this.zagk.get(client))) {
        arrayList1.add(client);
        continue;
      } 
      arrayList2.add(client);
    } 
    int i = -1;
    boolean bool = arrayList1.isEmpty();
    int k = 0;
    int j = 0;
    if (bool) {
      arrayList1 = (ArrayList)arrayList2;
      int m = arrayList1.size();
      while (j < m) {
        Object object = arrayList1.get(j);
        j++;
        object = (Api.Client)object;
        k = connectionResult.getClientAvailability(zaak.zaa(this.zagi), object);
        i = k;
        if (k == 0) {
          i = k;
          break;
        } 
      } 
    } else {
      arrayList1 = (ArrayList)arrayList1;
      int m = arrayList1.size();
      j = k;
      while (j < m) {
        Object object = arrayList1.get(j);
        j++;
        object = (Api.Client)object;
        k = connectionResult.getClientAvailability(zaak.zaa(this.zagi), object);
        i = k;
        if (k != 0) {
          i = k;
          break;
        } 
      } 
    } 
    if (i != 0) {
      connectionResult = new ConnectionResult(i, null);
      zaak.zad(this.zagi).zaa(new zaao(this, this.zagi, connectionResult));
      return;
    } 
    if (zaak.zae(this.zagi))
      zaak.zaf(this.zagi).connect(); 
    for (Api.Client client : this.zagk.keySet()) {
      BaseGmsClient.ConnectionProgressReportCallbacks connectionProgressReportCallbacks = (BaseGmsClient.ConnectionProgressReportCallbacks)this.zagk.get(client);
      if (client.requiresGooglePlayServices() && connectionResult.getClientAvailability(zaak.zaa(this.zagi), client) != 0) {
        zaak.zad(this.zagi).zaa(new zaap(this, this.zagi, connectionProgressReportCallbacks));
        continue;
      } 
      client.connect(connectionProgressReportCallbacks);
    } 
  }
}
