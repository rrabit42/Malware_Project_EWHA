package com.google.firebase.auth.internal;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.internal.firebase_auth.zzdr;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.FacebookAuthCredential;
import com.google.firebase.auth.GithubAuthCredential;
import com.google.firebase.auth.GoogleAuthCredential;
import com.google.firebase.auth.PlayGamesAuthCredential;
import com.google.firebase.auth.TwitterAuthCredential;
import com.google.firebase.auth.zzd;

public final class zzb {
  @NonNull
  public static zzdr zza(@NonNull AuthCredential paramAuthCredential, @Nullable String paramString) {
    Preconditions.checkNotNull(paramAuthCredential);
    if (GoogleAuthCredential.class.isAssignableFrom(paramAuthCredential.getClass()))
      return GoogleAuthCredential.zza((GoogleAuthCredential)paramAuthCredential, paramString); 
    if (FacebookAuthCredential.class.isAssignableFrom(paramAuthCredential.getClass()))
      return FacebookAuthCredential.zza((FacebookAuthCredential)paramAuthCredential, paramString); 
    if (TwitterAuthCredential.class.isAssignableFrom(paramAuthCredential.getClass()))
      return TwitterAuthCredential.zza((TwitterAuthCredential)paramAuthCredential, paramString); 
    if (GithubAuthCredential.class.isAssignableFrom(paramAuthCredential.getClass()))
      return GithubAuthCredential.zza((GithubAuthCredential)paramAuthCredential, paramString); 
    if (PlayGamesAuthCredential.class.isAssignableFrom(paramAuthCredential.getClass()))
      return PlayGamesAuthCredential.zza((PlayGamesAuthCredential)paramAuthCredential, paramString); 
    if (zzd.class.isAssignableFrom(paramAuthCredential.getClass()))
      return zzd.zza((zzd)paramAuthCredential, paramString); 
    throw new IllegalArgumentException("Unsupported credential type.");
  }
}
