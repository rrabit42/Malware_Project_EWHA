package com.google.android.gms.internal.measurement;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.SortedMap;
import java.util.TreeMap;

class zzwo<K extends Comparable<K>, V> extends AbstractMap<K, V> {
  private boolean zzbpy;
  
  private final int zzcbr;
  
  private List<zzwv> zzcbs;
  
  private Map<K, V> zzcbt;
  
  private Map<K, V> zzcbv;
  
  private zzwo(int paramInt) {
    this.zzcbr = paramInt;
    this.zzcbs = Collections.emptyList();
    this.zzcbt = Collections.emptyMap();
    this.zzcbv = Collections.emptyMap();
  }
  
  private final int zza(K paramK) {
    int j = this.zzcbs.size() - 1;
    if (j >= 0) {
      int k = paramK.compareTo((Comparable)((zzwv)this.zzcbs.get(j)).getKey());
      if (k > 0)
        return -(j + 2); 
      if (k == 0)
        return j; 
    } 
    int i = 0;
    while (i <= j) {
      int k = (i + j) / 2;
      int m = paramK.compareTo((Comparable)((zzwv)this.zzcbs.get(k)).getKey());
      if (m < 0) {
        j = k - 1;
        continue;
      } 
      if (m > 0) {
        i = k + 1;
        continue;
      } 
      return k;
    } 
    return -(i + 1);
  }
  
  static <FieldDescriptorType extends zzuh<FieldDescriptorType>> zzwo<FieldDescriptorType, Object> zzbw(int paramInt) { return new zzwp(paramInt); }
  
  private final V zzby(int paramInt) {
    zzyf();
    Object object = ((zzwv)this.zzcbs.remove(paramInt)).getValue();
    if (!this.zzcbt.isEmpty()) {
      Iterator iterator = zzyg().entrySet().iterator();
      this.zzcbs.add(new zzwv(this, (Map.Entry)iterator.next()));
      iterator.remove();
    } 
    return (V)object;
  }
  
  private final void zzyf() {
    if (!this.zzbpy)
      return; 
    throw new UnsupportedOperationException();
  }
  
  private final SortedMap<K, V> zzyg() {
    zzyf();
    if (this.zzcbt.isEmpty() && !(this.zzcbt instanceof TreeMap)) {
      this.zzcbt = new TreeMap();
      this.zzcbv = ((TreeMap)this.zzcbt).descendingMap();
    } 
    return (SortedMap)this.zzcbt;
  }
  
  public void clear() {
    zzyf();
    if (!this.zzcbs.isEmpty())
      this.zzcbs.clear(); 
    if (!this.zzcbt.isEmpty())
      this.zzcbt.clear(); 
  }
  
  public boolean containsKey(Object paramObject) {
    paramObject = (Comparable)paramObject;
    return (zza(paramObject) >= 0 || this.zzcbt.containsKey(paramObject));
  }
  
  public Set<Map.Entry<K, V>> entrySet() {
    if (this.zzcbu == null)
      this.zzcbu = new zzwx(this, null); 
    return this.zzcbu;
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (!(paramObject instanceof zzwo))
      return super.equals(paramObject); 
    paramObject = (zzwo)paramObject;
    int i = size();
    if (i != paramObject.size())
      return false; 
    int j = zzyc();
    if (j != paramObject.zzyc())
      return entrySet().equals(paramObject.entrySet()); 
    for (byte b = 0; b < j; b++) {
      if (!zzbx(b).equals(paramObject.zzbx(b)))
        return false; 
    } 
    return (j != i) ? this.zzcbt.equals(paramObject.zzcbt) : 1;
  }
  
  public V get(Object paramObject) {
    paramObject = (Comparable)paramObject;
    int i = zza(paramObject);
    return (i >= 0) ? (V)((zzwv)this.zzcbs.get(i)).getValue() : (V)this.zzcbt.get(paramObject);
  }
  
  public int hashCode() {
    int k = zzyc();
    int j = 0;
    int i = 0;
    while (j < k) {
      i += ((zzwv)this.zzcbs.get(j)).hashCode();
      j++;
    } 
    j = i;
    if (this.zzcbt.size() > 0)
      j = i + this.zzcbt.hashCode(); 
    return j;
  }
  
  public final boolean isImmutable() { return this.zzbpy; }
  
  public V remove(Object paramObject) {
    zzyf();
    paramObject = (Comparable)paramObject;
    int i = zza(paramObject);
    return (i >= 0) ? (V)zzby(i) : (this.zzcbt.isEmpty() ? null : (V)this.zzcbt.remove(paramObject));
  }
  
  public int size() { return this.zzcbs.size() + this.zzcbt.size(); }
  
  public final V zza(K paramK, V paramV) {
    zzyf();
    int i = zza(paramK);
    if (i >= 0)
      return (V)((zzwv)this.zzcbs.get(i)).setValue(paramV); 
    zzyf();
    if (this.zzcbs.isEmpty() && !(this.zzcbs instanceof ArrayList))
      this.zzcbs = new ArrayList(this.zzcbr); 
    i = -(i + 1);
    if (i >= this.zzcbr)
      return (V)zzyg().put(paramK, paramV); 
    int j = this.zzcbs.size();
    int k = this.zzcbr;
    if (j == k) {
      zzwv zzwv = (zzwv)this.zzcbs.remove(k - 1);
      zzyg().put((Comparable)zzwv.getKey(), zzwv.getValue());
    } 
    this.zzcbs.add(i, new zzwv(this, paramK, paramV));
    return null;
  }
  
  public final Map.Entry<K, V> zzbx(int paramInt) { return (Map.Entry)this.zzcbs.get(paramInt); }
  
  public void zzsw() {
    if (!this.zzbpy) {
      Map map;
      if (this.zzcbt.isEmpty()) {
        map = Collections.emptyMap();
      } else {
        map = Collections.unmodifiableMap(this.zzcbt);
      } 
      this.zzcbt = map;
      if (this.zzcbv.isEmpty()) {
        map = Collections.emptyMap();
      } else {
        map = Collections.unmodifiableMap(this.zzcbv);
      } 
      this.zzcbv = map;
      this.zzbpy = true;
    } 
  }
  
  public final int zzyc() { return this.zzcbs.size(); }
  
  public final Iterable<Map.Entry<K, V>> zzyd() { return this.zzcbt.isEmpty() ? zzws.zzyi() : this.zzcbt.entrySet(); }
  
  final Set<Map.Entry<K, V>> zzye() {
    if (this.zzcbw == null)
      this.zzcbw = new zzwr(this, null); 
    return this.zzcbw;
  }
}
