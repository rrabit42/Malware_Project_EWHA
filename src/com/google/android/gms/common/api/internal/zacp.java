package com.google.android.gms.common.api.internal;

import android.os.IBinder;
import android.os.RemoteException;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;

public final class zacp {
  public static final Status zakw = new Status(8, "The connection to Google Play services was lost");
  
  private static final BasePendingResult<?>[] zakx = new BasePendingResult[0];
  
  private final Map<Api.AnyClientKey<?>, Api.Client> zagy;
  
  @VisibleForTesting
  final Set<BasePendingResult<?>> zaky = Collections.synchronizedSet(Collections.newSetFromMap(new WeakHashMap()));
  
  private final zacs zakz = new zacq(this);
  
  public zacp(Map<Api.AnyClientKey<?>, Api.Client> paramMap) { this.zagy = paramMap; }
  
  public final void release() {
    BasePendingResult[] arrayOfBasePendingResult = (BasePendingResult[])this.zaky.toArray(zakx);
    int i = arrayOfBasePendingResult.length;
    byte b = 0;
    while (true) {
      if (b < i) {
        BasePendingResult basePendingResult = arrayOfBasePendingResult[b];
        basePendingResult.zaa(null);
        if (basePendingResult.zam() == null) {
          if (basePendingResult.zat())
            this.zaky.remove(basePendingResult); 
        } else {
          basePendingResult.setResultCallback(null);
          iBinder = ((Api.Client)this.zagy.get(((BaseImplementation.ApiMethodImpl)basePendingResult).getClientKey())).getServiceBrokerBinder();
          if (basePendingResult.isReady()) {
            basePendingResult.zaa(new zacr(basePendingResult, null, iBinder, null));
          } else {
            if (iBinder != null && iBinder.isBinderAlive()) {
              zacr zacr = new zacr(basePendingResult, null, iBinder, null);
              basePendingResult.zaa(zacr);
              try {
                iBinder.linkToDeath(zacr, 0);
                this.zaky.remove(basePendingResult);
              } catch (RemoteException iBinder) {
                basePendingResult.cancel();
                basePendingResult.zam().intValue();
                throw new NullPointerException();
              } 
            } 
            basePendingResult.zaa(null);
            basePendingResult.cancel();
            basePendingResult.zam().intValue();
            throw new NullPointerException();
          } 
          this.zaky.remove(basePendingResult);
        } 
        b++;
        continue;
      } 
      return;
    } 
  }
  
  final void zab(BasePendingResult<? extends Result> paramBasePendingResult) {
    this.zaky.add(paramBasePendingResult);
    paramBasePendingResult.zaa(this.zakz);
  }
  
  public final void zabx() {
    BasePendingResult[] arrayOfBasePendingResult = (BasePendingResult[])this.zaky.toArray(zakx);
    int i = arrayOfBasePendingResult.length;
    for (byte b = 0; b < i; b++)
      arrayOfBasePendingResult[b].zab(zakw); 
  }
}
