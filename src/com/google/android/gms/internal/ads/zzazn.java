package com.google.android.gms.internal.ads;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.IntBuffer;
import java.security.GeneralSecurityException;
import java.security.InvalidKeyException;

abstract class zzazn implements zzazi {
  static final int[] zzdoo = zza(ByteBuffer.wrap(new byte[] { 
          101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 
          98, 121, 116, 101, 32, 107 }));
  
  final zzazh zzdop;
  
  private final int zzdoq;
  
  zzazn(byte[] paramArrayOfByte, int paramInt) throws InvalidKeyException {
    if (paramArrayOfByte.length == 32) {
      this.zzdop = zzazh.zzm(paramArrayOfByte);
      this.zzdoq = paramInt;
      return;
    } 
    throw new InvalidKeyException("The key length in bytes must be 32.");
  }
  
  static int rotateLeft(int paramInt1, int paramInt2) { return paramInt1 >>> -paramInt2 | paramInt1 << paramInt2; }
  
  static int[] zza(ByteBuffer paramByteBuffer) {
    IntBuffer intBuffer = paramByteBuffer.order(ByteOrder.LITTLE_ENDIAN).asIntBuffer();
    int[] arrayOfInt = new int[intBuffer.remaining()];
    intBuffer.get(arrayOfInt);
    return arrayOfInt;
  }
  
  final void zza(ByteBuffer paramByteBuffer, byte[] paramArrayOfByte) throws GeneralSecurityException {
    if (paramByteBuffer.remaining() - zzaao() >= paramArrayOfByte.length) {
      byte[] arrayOfByte = zzazl.zzbh(zzaao());
      ByteBuffer byteBuffer = paramByteBuffer.put(arrayOfByte).wrap(paramArrayOfByte);
      int j = byteBuffer.remaining();
      int k = j / 64 + 1;
      for (int i = 0; i < k; i++) {
        ByteBuffer byteBuffer1 = zzb(arrayOfByte, this.zzdoq + i);
        if (i == k - 1) {
          zzayk.zza(paramByteBuffer, byteBuffer, byteBuffer1, j % 64);
        } else {
          zzayk.zza(paramByteBuffer, byteBuffer, byteBuffer1, 64);
        } 
      } 
      return;
    } 
    IllegalArgumentException illegalArgumentException = new IllegalArgumentException("Given ByteBuffer output is too small");
    throw illegalArgumentException;
  }
  
  abstract int zzaao();
  
  abstract ByteBuffer zzb(byte[] paramArrayOfByte, int paramInt);
  
  public final byte[] zzk(byte[] paramArrayOfByte) throws GeneralSecurityException {
    int i = paramArrayOfByte.length;
    zzaao();
    if (i <= 2147483635) {
      ByteBuffer byteBuffer = ByteBuffer.allocate(zzaao() + paramArrayOfByte.length);
      zza(byteBuffer, paramArrayOfByte);
      return byteBuffer.array();
    } 
    throw new GeneralSecurityException("plaintext too long");
  }
}
