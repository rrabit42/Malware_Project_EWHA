package com.google.android.gms.common.api;

import android.content.Context;
import android.os.Looper;
import android.support.annotation.NonNull;
import android.support.v4.app.FragmentActivity;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.api.internal.ListenerHolder;
import com.google.android.gms.common.api.internal.SignInConnectionListener;
import com.google.android.gms.common.api.internal.zacm;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.util.Collections;
import java.util.Set;
import java.util.WeakHashMap;
import java.util.concurrent.TimeUnit;
import javax.annotation.concurrent.GuardedBy;

@KeepForSdk
public abstract class GoogleApiClient {
  @KeepForSdk
  public static final String DEFAULT_ACCOUNT = "<<default account>>";
  
  public static final int SIGN_IN_MODE_OPTIONAL = 2;
  
  public static final int SIGN_IN_MODE_REQUIRED = 1;
  
  @GuardedBy("sAllClients")
  private static final Set<GoogleApiClient> zabq = Collections.newSetFromMap(new WeakHashMap());
  
  public static void dumpAll(String paramString, FileDescriptor paramFileDescriptor, PrintWriter paramPrintWriter, String[] paramArrayOfString) { // Byte code:
    //   0: getstatic com/google/android/gms/common/api/GoogleApiClient.zabq : Ljava/util/Set;
    //   3: astore #5
    //   5: aload #5
    //   7: monitorenter
    //   8: iconst_0
    //   9: istore #4
    //   11: aload_0
    //   12: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15: ldc '  '
    //   17: invokevirtual concat : (Ljava/lang/String;)Ljava/lang/String;
    //   20: astore #6
    //   22: getstatic com/google/android/gms/common/api/GoogleApiClient.zabq : Ljava/util/Set;
    //   25: invokeinterface iterator : ()Ljava/util/Iterator;
    //   30: astore #7
    //   32: aload #7
    //   34: invokeinterface hasNext : ()Z
    //   39: ifeq -> 88
    //   42: aload #7
    //   44: invokeinterface next : ()Ljava/lang/Object;
    //   49: checkcast com/google/android/gms/common/api/GoogleApiClient
    //   52: astore #8
    //   54: aload_2
    //   55: aload_0
    //   56: invokevirtual append : (Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
    //   59: ldc 'GoogleApiClient#'
    //   61: invokevirtual append : (Ljava/lang/CharSequence;)Ljava/io/PrintWriter;
    //   64: iload #4
    //   66: invokevirtual println : (I)V
    //   69: aload #8
    //   71: aload #6
    //   73: aload_1
    //   74: aload_2
    //   75: aload_3
    //   76: invokevirtual dump : (Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    //   79: iload #4
    //   81: iconst_1
    //   82: iadd
    //   83: istore #4
    //   85: goto -> 32
    //   88: aload #5
    //   90: monitorexit
    //   91: return
    //   92: astore_0
    //   93: aload #5
    //   95: monitorexit
    //   96: goto -> 101
    //   99: aload_0
    //   100: athrow
    //   101: goto -> 99
    // Exception table:
    //   from	to	target	type
    //   11	32	92	finally
    //   32	79	92	finally
    //   88	91	92	finally
    //   93	96	92	finally }
  
  @KeepForSdk
  public static Set<GoogleApiClient> getAllClients() {
    synchronized (zabq) {
      return zabq;
    } 
  }
  
  public abstract ConnectionResult blockingConnect();
  
  public abstract ConnectionResult blockingConnect(long paramLong, @NonNull TimeUnit paramTimeUnit);
  
  public abstract PendingResult<Status> clearDefaultAccountAndReconnect();
  
  public abstract void connect();
  
  public void connect(int paramInt) { throw new UnsupportedOperationException(); }
  
  public abstract void disconnect();
  
  public abstract void dump(String paramString, FileDescriptor paramFileDescriptor, PrintWriter paramPrintWriter, String[] paramArrayOfString);
  
  @KeepForSdk
  public <A extends Api.AnyClient, R extends Result, T extends com.google.android.gms.common.api.internal.BaseImplementation.ApiMethodImpl<R, A>> T enqueue(@NonNull T paramT) { throw new UnsupportedOperationException(); }
  
  @KeepForSdk
  public <A extends Api.AnyClient, T extends com.google.android.gms.common.api.internal.BaseImplementation.ApiMethodImpl<? extends Result, A>> T execute(@NonNull T paramT) { throw new UnsupportedOperationException(); }
  
  @NonNull
  @KeepForSdk
  public <C extends Api.Client> C getClient(@NonNull Api.AnyClientKey<C> paramAnyClientKey) { throw new UnsupportedOperationException(); }
  
  @NonNull
  public abstract ConnectionResult getConnectionResult(@NonNull Api<?> paramApi);
  
  @KeepForSdk
  public Context getContext() { throw new UnsupportedOperationException(); }
  
  @KeepForSdk
  public Looper getLooper() { throw new UnsupportedOperationException(); }
  
  @KeepForSdk
  public boolean hasApi(@NonNull Api<?> paramApi) { throw new UnsupportedOperationException(); }
  
  public abstract boolean hasConnectedApi(@NonNull Api<?> paramApi);
  
  public abstract boolean isConnected();
  
  public abstract boolean isConnecting();
  
  public abstract boolean isConnectionCallbacksRegistered(@NonNull ConnectionCallbacks paramConnectionCallbacks);
  
  public abstract boolean isConnectionFailedListenerRegistered(@NonNull OnConnectionFailedListener paramOnConnectionFailedListener);
  
  @KeepForSdk
  public boolean maybeSignIn(SignInConnectionListener paramSignInConnectionListener) { throw new UnsupportedOperationException(); }
  
  @KeepForSdk
  public void maybeSignOut() { throw new UnsupportedOperationException(); }
  
  public abstract void reconnect();
  
  public abstract void registerConnectionCallbacks(@NonNull ConnectionCallbacks paramConnectionCallbacks);
  
  public abstract void registerConnectionFailedListener(@NonNull OnConnectionFailedListener paramOnConnectionFailedListener);
  
  @KeepForSdk
  public <L> ListenerHolder<L> registerListener(@NonNull L paramL) { throw new UnsupportedOperationException(); }
  
  public abstract void stopAutoManage(@NonNull FragmentActivity paramFragmentActivity);
  
  public abstract void unregisterConnectionCallbacks(@NonNull ConnectionCallbacks paramConnectionCallbacks);
  
  public abstract void unregisterConnectionFailedListener(@NonNull OnConnectionFailedListener paramOnConnectionFailedListener);
  
  public void zaa(zacm paramzacm) { throw new UnsupportedOperationException(); }
  
  public void zab(zacm paramzacm) { throw new UnsupportedOperationException(); }
}
