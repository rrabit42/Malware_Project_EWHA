package com.google.android.gms.internal.ads;

import android.content.Context;
import android.graphics.Color;
import android.net.Uri;
import android.os.RemoteException;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import com.google.android.gms.ads.internal.zzbc;
import com.google.android.gms.ads.internal.zzbv;
import com.google.android.gms.common.util.VisibleForTesting;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

@zzadh
public final class zzabv extends Object implements Callable<zzajh> {
  @VisibleForTesting
  private static long zzbzx = 10L;
  
  private final Context mContext;
  
  private int mErrorCode;
  
  private final Object mLock = new Object();
  
  private final zzacm zzaad;
  
  private final zzci zzbjc;
  
  private final zzaji zzbze;
  
  private final zzalt zzbzy;
  
  private final zzbc zzbzz;
  
  private boolean zzcaa;
  
  private List<String> zzcab;
  
  private JSONObject zzcac;
  
  private String zzcad;
  
  @Nullable
  private String zzcae;
  
  private final zznx zzvr;
  
  static  {
  
  }
  
  public zzabv(Context paramContext, zzbc paramzzbc, zzalt paramzzalt, zzci paramzzci, zzaji paramzzaji, zznx paramzznx) {
    this.mContext = paramContext;
    this.zzbzz = paramzzbc;
    this.zzbzy = paramzzalt;
    this.zzbze = paramzzaji;
    this.zzbjc = paramzzci;
    this.zzvr = paramzznx;
    this.zzaad = paramzzbc.zzdr();
    this.zzcaa = false;
    this.mErrorCode = -2;
    this.zzcab = null;
    this.zzcad = null;
    this.zzcae = null;
  }
  
  private final zzajh zza(zzpb paramzzpb, boolean paramBoolean) {
    synchronized (this.mLock) {
      int i = this.mErrorCode;
      if (paramzzpb == null && this.mErrorCode == -2)
        i = 0; 
      if (i != -2)
        paramzzpb = null; 
      return new zzajh(this.zzbze.zzcgs.zzccv, null, this.zzbze.zzcos.zzbsn, i, this.zzbze.zzcos.zzbso, this.zzcab, this.zzbze.zzcos.orientation, this.zzbze.zzcos.zzbsu, this.zzbze.zzcgs.zzccy, false, null, null, null, null, null, 0L, this.zzbze.zzacv, this.zzbze.zzcos.zzcep, this.zzbze.zzcoh, this.zzbze.zzcoi, this.zzbze.zzcos.zzcev, this.zzcac, paramzzpb, null, null, null, this.zzbze.zzcos.zzcfh, this.zzbze.zzcos.zzcfi, null, this.zzbze.zzcos.zzbsr, this.zzcad, this.zzbze.zzcoq, this.zzbze.zzcos.zzzl, this.zzbze.zzcor, paramBoolean, this.zzbze.zzcos.zzbsp, this.zzbze.zzcos.zzzm, this.zzcae);
    } 
  }
  
  private final zzanz<zzon> zza(JSONObject paramJSONObject, boolean paramBoolean1, boolean paramBoolean2) throws JSONException {
    String str;
    if (paramBoolean1) {
      str = paramJSONObject.getString("url");
    } else {
      str = paramJSONObject.optString("url");
    } 
    double d = paramJSONObject.optDouble("scale", 1.0D);
    boolean bool = paramJSONObject.optBoolean("is_transparent", true);
    if (TextUtils.isEmpty(str)) {
      zzd(0, paramBoolean1);
      return zzano.zzi(null);
    } 
    return paramBoolean2 ? zzano.zzi(new zzon(null, Uri.parse(str), d)) : this.zzbzy.zza(str, new zzacb(this, paramBoolean1, d, bool, str));
  }
  
  private final void zzab(int paramInt) {
    synchronized (this.mLock) {
      this.zzcaa = true;
      this.mErrorCode = paramInt;
      return;
    } 
  }
  
  private static zzaqw zzb(zzanz<zzaqw> paramzzanz) {
    try {
      zzna zzna = zznk.zzbby;
      return (zzaqw)paramzzanz.get(((Integer)zzkb.zzik().zzd(zzna)).intValue(), TimeUnit.MILLISECONDS);
    } catch (InterruptedException paramzzanz) {
      zzane.zzc("", paramzzanz);
      Thread.currentThread().interrupt();
    } catch (ExecutionException paramzzanz) {
      zzane.zzc("", paramzzanz);
    } catch (TimeoutException paramzzanz) {
      zzane.zzc("", paramzzanz);
    } catch (CancellationException paramzzanz) {
      zzane.zzc("", paramzzanz);
    } 
    return null;
  }
  
  private static Integer zzb(JSONObject paramJSONObject, String paramString) {
    try {
      paramJSONObject = paramJSONObject.getJSONObject(paramString);
      int i = Color.rgb(paramJSONObject.getInt("r"), paramJSONObject.getInt("g"), paramJSONObject.getInt("b"));
      return Integer.valueOf(i);
    } catch (JSONException paramJSONObject) {
      return null;
    } 
  }
  
  static zzaqw zzc(zzanz<zzaqw> paramzzanz) {
    try {
      zzna zzna = zznk.zzbbx;
      return (zzaqw)paramzzanz.get(((Integer)zzkb.zzik().zzd(zzna)).intValue(), TimeUnit.SECONDS);
    } catch (InterruptedException paramzzanz) {
      zzakb.zzc("InterruptedException occurred while waiting for video to load", paramzzanz);
      Thread.currentThread().interrupt();
    } catch (ExecutionException paramzzanz) {
      zzakb.zzc("Exception occurred while waiting for video to load", paramzzanz);
    } catch (TimeoutException paramzzanz) {
      zzakb.zzc("Exception occurred while waiting for video to load", paramzzanz);
    } catch (CancellationException paramzzanz) {
      zzakb.zzc("Exception occurred while waiting for video to load", paramzzanz);
    } 
    return null;
  }
  
  private final void zzc(zzqs paramzzqs, String paramString) {
    try {
      zzrc zzrc = this.zzbzz.zzr(paramzzqs.getCustomTemplateId());
      if (zzrc != null)
        zzrc.zzb(paramzzqs, paramString); 
      return;
    } catch (RemoteException paramzzqs) {
      StringBuilder stringBuilder = new StringBuilder(String.valueOf(paramString).length() + 40);
      stringBuilder.append("Failed to call onCustomClick for asset ");
      stringBuilder.append(paramString);
      stringBuilder.append(".");
      zzakb.zzc(stringBuilder.toString(), paramzzqs);
      return;
    } 
  }
  
  private static <V> List<V> zzk(List<zzanz<V>> paramList) throws ExecutionException, InterruptedException {
    ArrayList arrayList = new ArrayList();
    Iterator iterator = paramList.iterator();
    while (iterator.hasNext()) {
      Object object = ((zzanz)iterator.next()).get();
      if (object != null)
        arrayList.add(object); 
    } 
    return arrayList;
  }
  
  private final zzajh zznw() { // Byte code:
    //   0: aload_0
    //   1: getfield zzbzz : Lcom/google/android/gms/ads/internal/zzbc;
    //   4: invokevirtual getUuid : ()Ljava/lang/String;
    //   7: astore #10
    //   9: aload_0
    //   10: invokespecial zznx : ()Z
    //   13: ifne -> 888
    //   16: new org/json/JSONObject
    //   19: dup
    //   20: aload_0
    //   21: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   24: getfield zzcos : Lcom/google/android/gms/internal/ads/zzaej;
    //   27: getfield zzceo : Ljava/lang/String;
    //   30: invokespecial <init> : (Ljava/lang/String;)V
    //   33: astore #6
    //   35: new org/json/JSONObject
    //   38: dup
    //   39: aload_0
    //   40: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   43: getfield zzcos : Lcom/google/android/gms/internal/ads/zzaej;
    //   46: getfield zzceo : Ljava/lang/String;
    //   49: invokespecial <init> : (Ljava/lang/String;)V
    //   52: astore #5
    //   54: aload #5
    //   56: invokevirtual length : ()I
    //   59: istore_1
    //   60: iload_1
    //   61: ifeq -> 103
    //   64: aload #5
    //   66: ldc_w 'ads'
    //   69: invokevirtual optJSONArray : (Ljava/lang/String;)Lorg/json/JSONArray;
    //   72: astore #5
    //   74: aload #5
    //   76: ifnull -> 882
    //   79: aload #5
    //   81: iconst_0
    //   82: invokevirtual optJSONObject : (I)Lorg/json/JSONObject;
    //   85: astore #5
    //   87: goto -> 90
    //   90: aload #5
    //   92: ifnull -> 103
    //   95: aload #5
    //   97: invokevirtual length : ()I
    //   100: ifne -> 108
    //   103: aload_0
    //   104: iconst_3
    //   105: invokespecial zzab : (I)V
    //   108: aload_0
    //   109: getfield zzaad : Lcom/google/android/gms/internal/ads/zzacm;
    //   112: aload #6
    //   114: invokeinterface zzh : (Lorg/json/JSONObject;)Lcom/google/android/gms/internal/ads/zzanz;
    //   119: getstatic com/google/android/gms/internal/ads/zzabv.zzbzx : J
    //   122: getstatic java/util/concurrent/TimeUnit.SECONDS : Ljava/util/concurrent/TimeUnit;
    //   125: invokeinterface get : (JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
    //   130: checkcast org/json/JSONObject
    //   133: astore #5
    //   135: aload #5
    //   137: ldc_w 'success'
    //   140: iconst_0
    //   141: invokevirtual optBoolean : (Ljava/lang/String;Z)Z
    //   144: ifeq -> 888
    //   147: aload #5
    //   149: ldc_w 'json'
    //   152: invokevirtual getJSONObject : (Ljava/lang/String;)Lorg/json/JSONObject;
    //   155: ldc_w 'ads'
    //   158: invokevirtual optJSONArray : (Ljava/lang/String;)Lorg/json/JSONArray;
    //   161: iconst_0
    //   162: invokevirtual getJSONObject : (I)Lorg/json/JSONObject;
    //   165: astore #6
    //   167: goto -> 170
    //   170: aload #6
    //   172: ldc_w 'enable_omid'
    //   175: invokevirtual optBoolean : (Ljava/lang/String;)Z
    //   178: istore #4
    //   180: iload #4
    //   182: ifne -> 194
    //   185: aconst_null
    //   186: invokestatic zzi : (Ljava/lang/Object;)Lcom/google/android/gms/internal/ads/zzany;
    //   189: astore #7
    //   191: goto -> 262
    //   194: aload #6
    //   196: ldc_w 'omid_settings'
    //   199: invokevirtual optJSONObject : (Ljava/lang/String;)Lorg/json/JSONObject;
    //   202: astore #5
    //   204: aload #5
    //   206: ifnonnull -> 212
    //   209: goto -> 185
    //   212: aload #5
    //   214: ldc_w 'omid_html'
    //   217: invokevirtual optString : (Ljava/lang/String;)Ljava/lang/String;
    //   220: astore #5
    //   222: aload #5
    //   224: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   227: ifeq -> 233
    //   230: goto -> 185
    //   233: new com/google/android/gms/internal/ads/zzaoj
    //   236: dup
    //   237: invokespecial <init> : ()V
    //   240: astore #7
    //   242: getstatic com/google/android/gms/internal/ads/zzaoe.zzcvy : Ljava/util/concurrent/Executor;
    //   245: new com/google/android/gms/internal/ads/zzabw
    //   248: dup
    //   249: aload_0
    //   250: aload #7
    //   252: aload #5
    //   254: invokespecial <init> : (Lcom/google/android/gms/internal/ads/zzabv;Lcom/google/android/gms/internal/ads/zzaoj;Ljava/lang/String;)V
    //   257: invokeinterface execute : (Ljava/lang/Runnable;)V
    //   262: aload_0
    //   263: invokespecial zznx : ()Z
    //   266: ifne -> 904
    //   269: aload #6
    //   271: ifnonnull -> 277
    //   274: goto -> 904
    //   277: aload #6
    //   279: ldc_w 'template_id'
    //   282: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
    //   285: astore #5
    //   287: aload_0
    //   288: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   291: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   294: getfield zzadj : Lcom/google/android/gms/internal/ads/zzpl;
    //   297: ifnull -> 894
    //   300: aload_0
    //   301: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   304: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   307: getfield zzadj : Lcom/google/android/gms/internal/ads/zzpl;
    //   310: getfield zzbjn : Z
    //   313: istore_2
    //   314: goto -> 317
    //   317: aload_0
    //   318: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   321: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   324: getfield zzadj : Lcom/google/android/gms/internal/ads/zzpl;
    //   327: ifnull -> 899
    //   330: aload_0
    //   331: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   334: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   337: getfield zzadj : Lcom/google/android/gms/internal/ads/zzpl;
    //   340: getfield zzbjp : Z
    //   343: istore_3
    //   344: goto -> 347
    //   347: ldc_w '2'
    //   350: aload #5
    //   352: invokevirtual equals : (Ljava/lang/Object;)Z
    //   355: ifeq -> 379
    //   358: new com/google/android/gms/internal/ads/zzacn
    //   361: dup
    //   362: iload_2
    //   363: iload_3
    //   364: aload_0
    //   365: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   368: getfield zzcor : Z
    //   371: invokespecial <init> : (ZZZ)V
    //   374: astore #5
    //   376: goto -> 549
    //   379: ldc_w '1'
    //   382: aload #5
    //   384: invokevirtual equals : (Ljava/lang/Object;)Z
    //   387: ifeq -> 411
    //   390: new com/google/android/gms/internal/ads/zzaco
    //   393: dup
    //   394: iload_2
    //   395: iload_3
    //   396: aload_0
    //   397: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   400: getfield zzcor : Z
    //   403: invokespecial <init> : (ZZZ)V
    //   406: astore #5
    //   408: goto -> 549
    //   411: ldc_w '3'
    //   414: aload #5
    //   416: invokevirtual equals : (Ljava/lang/Object;)Z
    //   419: ifeq -> 541
    //   422: aload #6
    //   424: ldc_w 'custom_template_id'
    //   427: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
    //   430: astore #5
    //   432: new com/google/android/gms/internal/ads/zzaoj
    //   435: dup
    //   436: invokespecial <init> : ()V
    //   439: astore #8
    //   441: getstatic com/google/android/gms/internal/ads/zzakk.zzcrm : Landroid/os/Handler;
    //   444: new com/google/android/gms/internal/ads/zzaby
    //   447: dup
    //   448: aload_0
    //   449: aload #8
    //   451: aload #5
    //   453: invokespecial <init> : (Lcom/google/android/gms/internal/ads/zzabv;Lcom/google/android/gms/internal/ads/zzaoj;Ljava/lang/String;)V
    //   456: invokevirtual post : (Ljava/lang/Runnable;)Z
    //   459: pop
    //   460: aload #8
    //   462: getstatic com/google/android/gms/internal/ads/zzabv.zzbzx : J
    //   465: getstatic java/util/concurrent/TimeUnit.SECONDS : Ljava/util/concurrent/TimeUnit;
    //   468: invokevirtual get : (JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
    //   471: ifnull -> 487
    //   474: new com/google/android/gms/internal/ads/zzacp
    //   477: dup
    //   478: iload_2
    //   479: invokespecial <init> : (Z)V
    //   482: astore #5
    //   484: goto -> 549
    //   487: aload #6
    //   489: ldc_w 'custom_template_id'
    //   492: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
    //   495: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   498: astore #5
    //   500: aload #5
    //   502: invokevirtual length : ()I
    //   505: ifeq -> 521
    //   508: ldc_w 'No handler for custom template: '
    //   511: aload #5
    //   513: invokevirtual concat : (Ljava/lang/String;)Ljava/lang/String;
    //   516: astore #5
    //   518: goto -> 533
    //   521: new java/lang/String
    //   524: dup
    //   525: ldc_w 'No handler for custom template: '
    //   528: invokespecial <init> : (Ljava/lang/String;)V
    //   531: astore #5
    //   533: aload #5
    //   535: invokestatic e : (Ljava/lang/String;)V
    //   538: goto -> 904
    //   541: aload_0
    //   542: iconst_0
    //   543: invokespecial zzab : (I)V
    //   546: goto -> 904
    //   549: aload_0
    //   550: invokespecial zznx : ()Z
    //   553: ifne -> 921
    //   556: aload #5
    //   558: ifnull -> 921
    //   561: aload #6
    //   563: ifnonnull -> 569
    //   566: goto -> 921
    //   569: aload #6
    //   571: ldc_w 'tracking_urls_and_actions'
    //   574: invokevirtual getJSONObject : (Ljava/lang/String;)Lorg/json/JSONObject;
    //   577: astore #11
    //   579: aload #11
    //   581: ldc_w 'impression_tracking_urls'
    //   584: invokevirtual optJSONArray : (Ljava/lang/String;)Lorg/json/JSONArray;
    //   587: astore #12
    //   589: aload #12
    //   591: ifnonnull -> 600
    //   594: aconst_null
    //   595: astore #8
    //   597: goto -> 910
    //   600: aload #12
    //   602: invokevirtual length : ()I
    //   605: anewarray java/lang/String
    //   608: astore #9
    //   610: iconst_0
    //   611: istore_1
    //   612: aload #9
    //   614: astore #8
    //   616: iload_1
    //   617: aload #12
    //   619: invokevirtual length : ()I
    //   622: if_icmpge -> 910
    //   625: aload #9
    //   627: iload_1
    //   628: aload #12
    //   630: iload_1
    //   631: invokevirtual getString : (I)Ljava/lang/String;
    //   634: aastore
    //   635: iload_1
    //   636: iconst_1
    //   637: iadd
    //   638: istore_1
    //   639: goto -> 612
    //   642: aload #8
    //   644: invokestatic asList : ([Ljava/lang/Object;)Ljava/util/List;
    //   647: astore #8
    //   649: aload_0
    //   650: aload #8
    //   652: putfield zzcab : Ljava/util/List;
    //   655: aload_0
    //   656: aload #11
    //   658: ldc_w 'active_view'
    //   661: invokevirtual optJSONObject : (Ljava/lang/String;)Lorg/json/JSONObject;
    //   664: putfield zzcac : Lorg/json/JSONObject;
    //   667: aload_0
    //   668: aload #6
    //   670: ldc_w 'debug_signals'
    //   673: invokevirtual optString : (Ljava/lang/String;)Ljava/lang/String;
    //   676: putfield zzcad : Ljava/lang/String;
    //   679: aload_0
    //   680: aload #6
    //   682: ldc_w 'omid_settings'
    //   685: invokevirtual optString : (Ljava/lang/String;)Ljava/lang/String;
    //   688: putfield zzcae : Ljava/lang/String;
    //   691: aload #5
    //   693: aload_0
    //   694: aload #6
    //   696: invokeinterface zza : (Lcom/google/android/gms/internal/ads/zzabv;Lorg/json/JSONObject;)Lcom/google/android/gms/internal/ads/zzpb;
    //   701: astore #5
    //   703: aload #5
    //   705: new com/google/android/gms/internal/ads/zzpd
    //   708: dup
    //   709: aload_0
    //   710: getfield mContext : Landroid/content/Context;
    //   713: aload_0
    //   714: getfield zzbzz : Lcom/google/android/gms/ads/internal/zzbc;
    //   717: aload_0
    //   718: getfield zzaad : Lcom/google/android/gms/internal/ads/zzacm;
    //   721: aload_0
    //   722: getfield zzbjc : Lcom/google/android/gms/internal/ads/zzci;
    //   725: aload #6
    //   727: aload #5
    //   729: aload_0
    //   730: getfield zzbze : Lcom/google/android/gms/internal/ads/zzaji;
    //   733: getfield zzcgs : Lcom/google/android/gms/internal/ads/zzaef;
    //   736: getfield zzacr : Lcom/google/android/gms/internal/ads/zzang;
    //   739: aload #10
    //   741: invokespecial <init> : (Landroid/content/Context;Lcom/google/android/gms/internal/ads/zzpa;Lcom/google/android/gms/internal/ads/zzacm;Lcom/google/android/gms/internal/ads/zzci;Lorg/json/JSONObject;Lcom/google/android/gms/internal/ads/zzpb;Lcom/google/android/gms/internal/ads/zzang;Ljava/lang/String;)V
    //   744: invokeinterface zzb : (Lcom/google/android/gms/internal/ads/zzoz;)V
    //   749: goto -> 752
    //   752: aload #5
    //   754: instanceof com/google/android/gms/internal/ads/zzos
    //   757: ifeq -> 789
    //   760: new com/google/android/gms/internal/ads/zzabz
    //   763: dup
    //   764: aload_0
    //   765: aload #5
    //   767: checkcast com/google/android/gms/internal/ads/zzos
    //   770: invokespecial <init> : (Lcom/google/android/gms/internal/ads/zzabv;Lcom/google/android/gms/internal/ads/zzos;)V
    //   773: astore #6
    //   775: aload_0
    //   776: getfield zzaad : Lcom/google/android/gms/internal/ads/zzacm;
    //   779: ldc_w '/nativeAdCustomClick'
    //   782: aload #6
    //   784: invokeinterface zza : (Ljava/lang/String;Lcom/google/android/gms/ads/internal/gmsg/zzv;)V
    //   789: aload_0
    //   790: aload #5
    //   792: iload #4
    //   794: invokespecial zza : (Lcom/google/android/gms/internal/ads/zzpb;Z)Lcom/google/android/gms/internal/ads/zzajh;
    //   797: astore #5
    //   799: aload_0
    //   800: getfield zzbzz : Lcom/google/android/gms/ads/internal/zzbc;
    //   803: aload #7
    //   805: invokestatic zzb : (Lcom/google/android/gms/internal/ads/zzanz;)Lcom/google/android/gms/internal/ads/zzaqw;
    //   808: invokevirtual zzg : (Lcom/google/android/gms/internal/ads/zzaqw;)V
    //   811: aload #5
    //   813: areturn
    //   814: astore #5
    //   816: ldc_w 'Error occured while doing native ads initialization.'
    //   819: astore #6
    //   821: goto -> 856
    //   824: astore #5
    //   826: ldc_w 'Timeout when loading native ad.'
    //   829: astore #6
    //   831: goto -> 856
    //   834: astore #5
    //   836: goto -> 851
    //   839: astore #5
    //   841: goto -> 851
    //   844: astore #5
    //   846: goto -> 851
    //   849: astore #5
    //   851: ldc_w 'Malformed native JSON response.'
    //   854: astore #6
    //   856: aload #6
    //   858: aload #5
    //   860: invokestatic zzc : (Ljava/lang/String;Ljava/lang/Throwable;)V
    //   863: aload_0
    //   864: getfield zzcaa : Z
    //   867: ifne -> 875
    //   870: aload_0
    //   871: iconst_0
    //   872: invokespecial zzab : (I)V
    //   875: aload_0
    //   876: aconst_null
    //   877: iconst_0
    //   878: invokespecial zza : (Lcom/google/android/gms/internal/ads/zzpb;Z)Lcom/google/android/gms/internal/ads/zzajh;
    //   881: areturn
    //   882: aconst_null
    //   883: astore #5
    //   885: goto -> 90
    //   888: aconst_null
    //   889: astore #6
    //   891: goto -> 170
    //   894: iconst_0
    //   895: istore_2
    //   896: goto -> 317
    //   899: iconst_0
    //   900: istore_3
    //   901: goto -> 347
    //   904: aconst_null
    //   905: astore #5
    //   907: goto -> 549
    //   910: aload #8
    //   912: ifnonnull -> 642
    //   915: aconst_null
    //   916: astore #8
    //   918: goto -> 649
    //   921: aconst_null
    //   922: astore #5
    //   924: goto -> 752
    // Exception table:
    //   from	to	target	type
    //   0	60	849	java/util/concurrent/CancellationException
    //   0	60	844	java/util/concurrent/ExecutionException
    //   0	60	839	java/lang/InterruptedException
    //   0	60	834	org/json/JSONException
    //   0	60	824	java/util/concurrent/TimeoutException
    //   0	60	814	java/lang/Exception
    //   64	74	849	java/util/concurrent/CancellationException
    //   64	74	844	java/util/concurrent/ExecutionException
    //   64	74	839	java/lang/InterruptedException
    //   64	74	834	org/json/JSONException
    //   64	74	824	java/util/concurrent/TimeoutException
    //   64	74	814	java/lang/Exception
    //   79	87	849	java/util/concurrent/CancellationException
    //   79	87	844	java/util/concurrent/ExecutionException
    //   79	87	839	java/lang/InterruptedException
    //   79	87	834	org/json/JSONException
    //   79	87	824	java/util/concurrent/TimeoutException
    //   79	87	814	java/lang/Exception
    //   95	103	849	java/util/concurrent/CancellationException
    //   95	103	844	java/util/concurrent/ExecutionException
    //   95	103	839	java/lang/InterruptedException
    //   95	103	834	org/json/JSONException
    //   95	103	824	java/util/concurrent/TimeoutException
    //   95	103	814	java/lang/Exception
    //   103	108	849	java/util/concurrent/CancellationException
    //   103	108	844	java/util/concurrent/ExecutionException
    //   103	108	839	java/lang/InterruptedException
    //   103	108	834	org/json/JSONException
    //   103	108	824	java/util/concurrent/TimeoutException
    //   103	108	814	java/lang/Exception
    //   108	167	849	java/util/concurrent/CancellationException
    //   108	167	844	java/util/concurrent/ExecutionException
    //   108	167	839	java/lang/InterruptedException
    //   108	167	834	org/json/JSONException
    //   108	167	824	java/util/concurrent/TimeoutException
    //   108	167	814	java/lang/Exception
    //   170	180	849	java/util/concurrent/CancellationException
    //   170	180	844	java/util/concurrent/ExecutionException
    //   170	180	839	java/lang/InterruptedException
    //   170	180	834	org/json/JSONException
    //   170	180	824	java/util/concurrent/TimeoutException
    //   170	180	814	java/lang/Exception
    //   185	191	849	java/util/concurrent/CancellationException
    //   185	191	844	java/util/concurrent/ExecutionException
    //   185	191	839	java/lang/InterruptedException
    //   185	191	834	org/json/JSONException
    //   185	191	824	java/util/concurrent/TimeoutException
    //   185	191	814	java/lang/Exception
    //   194	204	849	java/util/concurrent/CancellationException
    //   194	204	844	java/util/concurrent/ExecutionException
    //   194	204	839	java/lang/InterruptedException
    //   194	204	834	org/json/JSONException
    //   194	204	824	java/util/concurrent/TimeoutException
    //   194	204	814	java/lang/Exception
    //   212	230	849	java/util/concurrent/CancellationException
    //   212	230	844	java/util/concurrent/ExecutionException
    //   212	230	839	java/lang/InterruptedException
    //   212	230	834	org/json/JSONException
    //   212	230	824	java/util/concurrent/TimeoutException
    //   212	230	814	java/lang/Exception
    //   233	262	849	java/util/concurrent/CancellationException
    //   233	262	844	java/util/concurrent/ExecutionException
    //   233	262	839	java/lang/InterruptedException
    //   233	262	834	org/json/JSONException
    //   233	262	824	java/util/concurrent/TimeoutException
    //   233	262	814	java/lang/Exception
    //   262	269	849	java/util/concurrent/CancellationException
    //   262	269	844	java/util/concurrent/ExecutionException
    //   262	269	839	java/lang/InterruptedException
    //   262	269	834	org/json/JSONException
    //   262	269	824	java/util/concurrent/TimeoutException
    //   262	269	814	java/lang/Exception
    //   277	314	849	java/util/concurrent/CancellationException
    //   277	314	844	java/util/concurrent/ExecutionException
    //   277	314	839	java/lang/InterruptedException
    //   277	314	834	org/json/JSONException
    //   277	314	824	java/util/concurrent/TimeoutException
    //   277	314	814	java/lang/Exception
    //   317	344	849	java/util/concurrent/CancellationException
    //   317	344	844	java/util/concurrent/ExecutionException
    //   317	344	839	java/lang/InterruptedException
    //   317	344	834	org/json/JSONException
    //   317	344	824	java/util/concurrent/TimeoutException
    //   317	344	814	java/lang/Exception
    //   347	376	849	java/util/concurrent/CancellationException
    //   347	376	844	java/util/concurrent/ExecutionException
    //   347	376	839	java/lang/InterruptedException
    //   347	376	834	org/json/JSONException
    //   347	376	824	java/util/concurrent/TimeoutException
    //   347	376	814	java/lang/Exception
    //   379	408	849	java/util/concurrent/CancellationException
    //   379	408	844	java/util/concurrent/ExecutionException
    //   379	408	839	java/lang/InterruptedException
    //   379	408	834	org/json/JSONException
    //   379	408	824	java/util/concurrent/TimeoutException
    //   379	408	814	java/lang/Exception
    //   411	484	849	java/util/concurrent/CancellationException
    //   411	484	844	java/util/concurrent/ExecutionException
    //   411	484	839	java/lang/InterruptedException
    //   411	484	834	org/json/JSONException
    //   411	484	824	java/util/concurrent/TimeoutException
    //   411	484	814	java/lang/Exception
    //   487	518	849	java/util/concurrent/CancellationException
    //   487	518	844	java/util/concurrent/ExecutionException
    //   487	518	839	java/lang/InterruptedException
    //   487	518	834	org/json/JSONException
    //   487	518	824	java/util/concurrent/TimeoutException
    //   487	518	814	java/lang/Exception
    //   521	533	849	java/util/concurrent/CancellationException
    //   521	533	844	java/util/concurrent/ExecutionException
    //   521	533	839	java/lang/InterruptedException
    //   521	533	834	org/json/JSONException
    //   521	533	824	java/util/concurrent/TimeoutException
    //   521	533	814	java/lang/Exception
    //   533	538	849	java/util/concurrent/CancellationException
    //   533	538	844	java/util/concurrent/ExecutionException
    //   533	538	839	java/lang/InterruptedException
    //   533	538	834	org/json/JSONException
    //   533	538	824	java/util/concurrent/TimeoutException
    //   533	538	814	java/lang/Exception
    //   541	546	849	java/util/concurrent/CancellationException
    //   541	546	844	java/util/concurrent/ExecutionException
    //   541	546	839	java/lang/InterruptedException
    //   541	546	834	org/json/JSONException
    //   541	546	824	java/util/concurrent/TimeoutException
    //   541	546	814	java/lang/Exception
    //   549	556	849	java/util/concurrent/CancellationException
    //   549	556	844	java/util/concurrent/ExecutionException
    //   549	556	839	java/lang/InterruptedException
    //   549	556	834	org/json/JSONException
    //   549	556	824	java/util/concurrent/TimeoutException
    //   549	556	814	java/lang/Exception
    //   569	589	849	java/util/concurrent/CancellationException
    //   569	589	844	java/util/concurrent/ExecutionException
    //   569	589	839	java/lang/InterruptedException
    //   569	589	834	org/json/JSONException
    //   569	589	824	java/util/concurrent/TimeoutException
    //   569	589	814	java/lang/Exception
    //   600	610	849	java/util/concurrent/CancellationException
    //   600	610	844	java/util/concurrent/ExecutionException
    //   600	610	839	java/lang/InterruptedException
    //   600	610	834	org/json/JSONException
    //   600	610	824	java/util/concurrent/TimeoutException
    //   600	610	814	java/lang/Exception
    //   616	635	849	java/util/concurrent/CancellationException
    //   616	635	844	java/util/concurrent/ExecutionException
    //   616	635	839	java/lang/InterruptedException
    //   616	635	834	org/json/JSONException
    //   616	635	824	java/util/concurrent/TimeoutException
    //   616	635	814	java/lang/Exception
    //   642	649	849	java/util/concurrent/CancellationException
    //   642	649	844	java/util/concurrent/ExecutionException
    //   642	649	839	java/lang/InterruptedException
    //   642	649	834	org/json/JSONException
    //   642	649	824	java/util/concurrent/TimeoutException
    //   642	649	814	java/lang/Exception
    //   649	749	849	java/util/concurrent/CancellationException
    //   649	749	844	java/util/concurrent/ExecutionException
    //   649	749	839	java/lang/InterruptedException
    //   649	749	834	org/json/JSONException
    //   649	749	824	java/util/concurrent/TimeoutException
    //   649	749	814	java/lang/Exception
    //   752	789	849	java/util/concurrent/CancellationException
    //   752	789	844	java/util/concurrent/ExecutionException
    //   752	789	839	java/lang/InterruptedException
    //   752	789	834	org/json/JSONException
    //   752	789	824	java/util/concurrent/TimeoutException
    //   752	789	814	java/lang/Exception
    //   789	811	849	java/util/concurrent/CancellationException
    //   789	811	844	java/util/concurrent/ExecutionException
    //   789	811	839	java/lang/InterruptedException
    //   789	811	834	org/json/JSONException
    //   789	811	824	java/util/concurrent/TimeoutException
    //   789	811	814	java/lang/Exception }
  
  private final boolean zznx() {
    synchronized (this.mLock) {
      return this.zzcaa;
    } 
  }
  
  public final zzanz<zzon> zza(JSONObject paramJSONObject, String paramString, boolean paramBoolean1, boolean paramBoolean2) throws JSONException {
    if (paramBoolean1) {
      paramJSONObject = paramJSONObject.getJSONObject(paramString);
    } else {
      paramJSONObject = paramJSONObject.optJSONObject(paramString);
    } 
    JSONObject jSONObject = paramJSONObject;
    if (paramJSONObject == null)
      jSONObject = new JSONObject(); 
    return zza(jSONObject, paramBoolean1, paramBoolean2);
  }
  
  public final List<zzanz<zzon>> zza(JSONObject paramJSONObject, String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3) throws JSONException {
    boolean bool;
    JSONArray jSONArray = paramJSONObject.optJSONArray(paramString);
    ArrayList arrayList = new ArrayList();
    if (jSONArray == null || jSONArray.length() == 0) {
      zzd(0, false);
      return arrayList;
    } 
    if (paramBoolean3) {
      bool = jSONArray.length();
    } else {
      bool = true;
    } 
    byte b;
    for (b = 0; b < bool; b++) {
      JSONObject jSONObject = jSONArray.getJSONObject(b);
      paramJSONObject = jSONObject;
      if (jSONObject == null)
        paramJSONObject = new JSONObject(); 
      arrayList.add(zza(paramJSONObject, false, paramBoolean2));
    } 
    return arrayList;
  }
  
  public final Future<zzon> zza(JSONObject paramJSONObject, String paramString, boolean paramBoolean) throws JSONException {
    JSONObject jSONObject = paramJSONObject.getJSONObject(paramString);
    boolean bool = jSONObject.optBoolean("require", true);
    paramJSONObject = jSONObject;
    if (jSONObject == null)
      paramJSONObject = new JSONObject(); 
    return zza(paramJSONObject, bool, paramBoolean);
  }
  
  public final zzanz<zzaqw> zzc(JSONObject paramJSONObject, String paramString) throws JSONException {
    paramJSONObject = paramJSONObject.optJSONObject(paramString);
    if (paramJSONObject == null)
      return zzano.zzi(null); 
    if (TextUtils.isEmpty(paramJSONObject.optString("vast_xml"))) {
      zzakb.zzdk("Required field 'vast_xml' is missing");
      return zzano.zzi(null);
    } 
    zzace zzace = new zzace(this.mContext, this.zzbjc, this.zzbze, this.zzvr, this.zzbzz);
    zzaoj zzaoj = new zzaoj();
    zzaoe.zzcvy.execute(new zzacf(zzace, paramJSONObject, zzaoj));
    return zzaoj;
  }
  
  public final void zzd(int paramInt, boolean paramBoolean) {
    if (paramBoolean)
      zzab(paramInt); 
  }
  
  public final zzanz<zzoj> zzg(JSONObject paramJSONObject) throws JSONException {
    byte b;
    JSONObject jSONObject = paramJSONObject.optJSONObject("attribution");
    if (jSONObject == null)
      return zzano.zzi(null); 
    String str = jSONObject.optString("text");
    int i = jSONObject.optInt("text_size", -1);
    Integer integer1 = zzb(jSONObject, "text_color");
    Integer integer2 = zzb(jSONObject, "bg_color");
    int j = jSONObject.optInt("animation_ms", 1000);
    int k = jSONObject.optInt("presentation_ms", 4000);
    if (this.zzbze.zzcgs.zzadj != null && this.zzbze.zzcgs.zzadj.versionCode >= 2) {
      b = this.zzbze.zzcgs.zzadj.zzbjq;
    } else {
      b = 1;
    } 
    boolean bool = jSONObject.optBoolean("allow_pub_rendering");
    List list = new ArrayList();
    if (jSONObject.optJSONArray("images") != null) {
      list = zza(jSONObject, "images", false, false, true);
    } else {
      list.add(zza(jSONObject, "image", false, false));
    } 
    zzaoj zzaoj = new zzaoj();
    int m = list.size();
    AtomicInteger atomicInteger = new AtomicInteger(0);
    Iterator iterator = list.iterator();
    while (iterator.hasNext())
      ((zzanz)iterator.next()).zza(new zzacc(atomicInteger, m, zzaoj, list), zzaki.zzcrj); 
    return zzano.zza(zzaoj, new zzaca(this, str, integer2, integer1, i, k, j, b, bool), zzaki.zzcrj);
  }
}
