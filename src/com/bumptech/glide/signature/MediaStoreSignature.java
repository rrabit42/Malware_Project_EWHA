package com.bumptech.glide.signature;

import com.bumptech.glide.load.Key;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.security.MessageDigest;

public class MediaStoreSignature implements Key {
  private final long dateModified;
  
  private final String mimeType;
  
  private final int orientation;
  
  public MediaStoreSignature(String paramString, long paramLong, int paramInt) {
    this.mimeType = paramString;
    this.dateModified = paramLong;
    this.orientation = paramInt;
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject != null) {
      if (getClass() != paramObject.getClass())
        return false; 
      paramObject = (MediaStoreSignature)paramObject;
      if (this.dateModified != paramObject.dateModified)
        return false; 
      if (this.orientation != paramObject.orientation)
        return false; 
      String str = this.mimeType;
      if (str != null) {
        if (!str.equals(paramObject.mimeType))
          return false; 
      } else if (paramObject.mimeType != null) {
        return false;
      } 
      return true;
    } 
    return false;
  }
  
  public int hashCode() {
    boolean bool;
    String str = this.mimeType;
    if (str != null) {
      bool = str.hashCode();
    } else {
      bool = false;
    } 
    long l = this.dateModified;
    return (bool * 31 + (int)(l ^ l >>> 32)) * 31 + this.orientation;
  }
  
  public void updateDiskCacheKey(MessageDigest paramMessageDigest) throws UnsupportedEncodingException {
    paramMessageDigest.update(ByteBuffer.allocate(12).putLong(this.dateModified).putInt(this.orientation).array());
    paramMessageDigest.update(this.mimeType.getBytes("UTF-8"));
  }
}
