package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.Bundle;
import com.google.android.gms.ads.internal.zzw;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import javax.annotation.concurrent.GuardedBy;

@zzadh
public final class zzagq extends zzaha {
  private final Context mContext;
  
  private final Object mLock = new Object();
  
  @GuardedBy("mLock")
  private final zzagr zzcld;
  
  private final zzang zzyf;
  
  public zzagq(Context paramContext, zzw paramzzw, zzxn paramzzxn, zzang paramzzang) { this(paramContext, paramzzang, new zzagr(paramContext, paramzzw, zzjn.zzhx(), paramzzxn, paramzzang)); }
  
  @VisibleForTesting
  private zzagq(Context paramContext, zzang paramzzang, zzagr paramzzagr) {
    this.mContext = paramContext;
    this.zzyf = paramzzang;
    this.zzcld = paramzzagr;
  }
  
  public final void destroy() { zzf(null); }
  
  public final String getMediationAdapterClassName() {
    synchronized (this.mLock) {
      return this.zzcld.getMediationAdapterClassName();
    } 
  }
  
  public final boolean isLoaded() {
    synchronized (this.mLock) {
      return this.zzcld.isLoaded();
    } 
  }
  
  public final void pause() { zzd(null); }
  
  public final void resume() { zze(null); }
  
  public final void setImmersiveMode(boolean paramBoolean) {
    synchronized (this.mLock) {
      this.zzcld.setImmersiveMode(paramBoolean);
      return;
    } 
  }
  
  public final void setUserId(String paramString) {
    synchronized (this.mLock) {
      this.zzcld.setUserId(paramString);
      return;
    } 
  }
  
  public final void show() {
    synchronized (this.mLock) {
      this.zzcld.zzoy();
      return;
    } 
  }
  
  public final void zza(zzagx paramzzagx) {
    synchronized (this.mLock) {
      this.zzcld.zza(paramzzagx);
      return;
    } 
  }
  
  public final void zza(zzahe paramzzahe) {
    synchronized (this.mLock) {
      this.zzcld.zza(paramzzahe);
      return;
    } 
  }
  
  public final void zza(zzahk paramzzahk) {
    synchronized (this.mLock) {
      this.zzcld.zza(paramzzahk);
      return;
    } 
  }
  
  public final void zza(zzkx paramzzkx) {
    zzna zzna = zznk.zzayf;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue())
      synchronized (this.mLock) {
        this.zzcld.zza(paramzzkx);
        return;
      }  
  }
  
  public final Bundle zzba() {
    zzna zzna = zznk.zzayf;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue())
      synchronized (this.mLock) {
        return this.zzcld.zzba();
      }  
    return new Bundle();
  }
  
  public final void zzd(IObjectWrapper paramIObjectWrapper) {
    synchronized (this.mLock) {
      this.zzcld.pause();
      return;
    } 
  }
  
  public final void zze(IObjectWrapper paramIObjectWrapper) {
    Object object = this.mLock;
    /* monitor enter ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=null} */
    if (paramIObjectWrapper == null) {
      paramIObjectWrapper = null;
    } else {
      try {
        Context context = (Context)ObjectWrapper.unwrap(paramIObjectWrapper);
        if (context != null)
          this.zzcld.onContextChanged(context); 
      } catch (Exception paramIObjectWrapper) {
        zzakb.zzc("Unable to extract updated context.", paramIObjectWrapper);
      } finally {}
      this.zzcld.resume();
      /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=null} */
      return;
    } 
    if (paramIObjectWrapper != null)
      this.zzcld.onContextChanged(paramIObjectWrapper); 
  }
  
  public final void zzf(IObjectWrapper paramIObjectWrapper) {
    synchronized (this.mLock) {
      this.zzcld.destroy();
      return;
    } 
  }
}
