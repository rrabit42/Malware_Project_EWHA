package com.google.android.gms.internal.ads;

import android.app.KeyguardManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.IntentFilter;
import android.graphics.Rect;
import android.os.Build;
import android.os.Handler;
import android.os.PowerManager;
import android.provider.Settings;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.WindowManager;
import com.google.android.gms.ads.internal.zzbv;
import com.google.android.gms.common.util.VisibleForTesting;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.UUID;
import javax.annotation.ParametersAreNonnullByDefault;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

@zzadh
@ParametersAreNonnullByDefault
public final class zzet implements ViewTreeObserver.OnGlobalLayoutListener, ViewTreeObserver.OnScrollChangedListener {
  private final Object mLock = new Object();
  
  private boolean zzaaq = false;
  
  private zzamj zzadz;
  
  private final Context zzaeo;
  
  private final WeakReference<zzajh> zzaeq;
  
  private WeakReference<ViewTreeObserver> zzaer;
  
  private final zzgd zzaes;
  
  protected final zzer zzaet;
  
  private final WindowManager zzaeu;
  
  private final PowerManager zzaev;
  
  private final KeyguardManager zzaew;
  
  private final DisplayMetrics zzaex;
  
  @Nullable
  private zzfa zzaey;
  
  private boolean zzaez;
  
  private boolean zzafa = false;
  
  private boolean zzafb;
  
  private boolean zzafc;
  
  private boolean zzafd;
  
  @Nullable
  @VisibleForTesting
  private BroadcastReceiver zzafe;
  
  private final HashSet<zzeq> zzaff = new HashSet();
  
  private final HashSet<zzfo> zzafg = new HashSet();
  
  private final Rect zzafh = new Rect();
  
  private final zzew zzafi;
  
  private float zzafj;
  
  public zzet(Context paramContext, zzjn paramzzjn, zzajh paramzzajh, zzang paramzzang, zzgd paramzzgd) {
    this.zzaeq = new WeakReference(paramzzajh);
    this.zzaes = paramzzgd;
    this.zzaer = new WeakReference(null);
    this.zzafb = true;
    this.zzafd = false;
    this.zzadz = new zzamj(200L);
    this.zzaet = new zzer(UUID.randomUUID().toString(), paramzzang, paramzzjn.zzarb, paramzzajh.zzcob, paramzzajh.zzfz(), paramzzjn.zzare);
    this.zzaeu = (WindowManager)paramContext.getSystemService("window");
    this.zzaev = (PowerManager)paramContext.getApplicationContext().getSystemService("power");
    this.zzaew = (KeyguardManager)paramContext.getSystemService("keyguard");
    this.zzaeo = paramContext;
    this.zzafi = new zzew(this, new Handler());
    this.zzaeo.getContentResolver().registerContentObserver(Settings.System.CONTENT_URI, true, this.zzafi);
    this.zzaex = paramContext.getResources().getDisplayMetrics();
    Display display = this.zzaeu.getDefaultDisplay();
    this.zzafh.right = display.getWidth();
    this.zzafh.bottom = display.getHeight();
    zzgb();
  }
  
  @VisibleForTesting
  private final boolean isScreenOn() { return (Build.VERSION.SDK_INT >= 20) ? this.zzaev.isInteractive() : this.zzaev.isScreenOn(); }
  
  private static int zza(int paramInt, DisplayMetrics paramDisplayMetrics) {
    float f = paramDisplayMetrics.density;
    return (int)(paramInt / f);
  }
  
  private final JSONObject zza(@Nullable View paramView, @Nullable Boolean paramBoolean) throws JSONException {
    if (paramView == null)
      return zzgg().put("isAttachedToWindow", false).put("isScreenOn", isScreenOn()).put("isVisible", false); 
    boolean bool1 = zzbv.zzem().isAttachedToWindow(paramView);
    int[] arrayOfInt1 = new int[2];
    arrayOfInt2 = new int[2];
    try {
      paramView.getLocationOnScreen(arrayOfInt1);
      paramView.getLocationInWindow(arrayOfInt2);
    } catch (Exception arrayOfInt2) {
      zzakb.zzb("Failure getting view location.", arrayOfInt2);
    } 
    Rect rect1 = new Rect();
    rect1.left = arrayOfInt1[0];
    rect1.top = arrayOfInt1[1];
    rect1.right = rect1.left + paramView.getWidth();
    rect1.bottom = rect1.top + paramView.getHeight();
    Rect rect2 = new Rect();
    boolean bool2 = paramView.getGlobalVisibleRect(rect2, null);
    Rect rect3 = new Rect();
    boolean bool3 = paramView.getLocalVisibleRect(rect3);
    Rect rect4 = new Rect();
    paramView.getHitRect(rect4);
    JSONObject jSONObject = zzgg();
    jSONObject.put("windowVisibility", paramView.getWindowVisibility()).put("isAttachedToWindow", bool1).put("viewBox", (new JSONObject()).put("top", zza(this.zzafh.top, this.zzaex)).put("bottom", zza(this.zzafh.bottom, this.zzaex)).put("left", zza(this.zzafh.left, this.zzaex)).put("right", zza(this.zzafh.right, this.zzaex))).put("adBox", (new JSONObject()).put("top", zza(rect1.top, this.zzaex)).put("bottom", zza(rect1.bottom, this.zzaex)).put("left", zza(rect1.left, this.zzaex)).put("right", zza(rect1.right, this.zzaex))).put("globalVisibleBox", (new JSONObject()).put("top", zza(rect2.top, this.zzaex)).put("bottom", zza(rect2.bottom, this.zzaex)).put("left", zza(rect2.left, this.zzaex)).put("right", zza(rect2.right, this.zzaex))).put("globalVisibleBoxVisible", bool2).put("localVisibleBox", (new JSONObject()).put("top", zza(rect3.top, this.zzaex)).put("bottom", zza(rect3.bottom, this.zzaex)).put("left", zza(rect3.left, this.zzaex)).put("right", zza(rect3.right, this.zzaex))).put("localVisibleBoxVisible", bool3).put("hitBox", (new JSONObject()).put("top", zza(rect4.top, this.zzaex)).put("bottom", zza(rect4.bottom, this.zzaex)).put("left", zza(rect4.left, this.zzaex)).put("right", zza(rect4.right, this.zzaex))).put("screenDensity", this.zzaex.density);
    if (paramBoolean == null)
      paramBoolean = Boolean.valueOf(zzbv.zzek().zza(paramView, this.zzaev, this.zzaew)); 
    jSONObject.put("isVisible", paramBoolean.booleanValue());
    return jSONObject;
  }
  
  private static JSONObject zza(JSONObject paramJSONObject) throws JSONException {
    JSONArray jSONArray = new JSONArray();
    JSONObject jSONObject = new JSONObject();
    jSONArray.put(paramJSONObject);
    jSONObject.put("units", jSONArray);
    return jSONObject;
  }
  
  private final void zza(JSONObject paramJSONObject, boolean paramBoolean) {
    try {
      paramJSONObject = zza(paramJSONObject);
      ArrayList arrayList = (ArrayList)new ArrayList(this.zzafg);
      int i = arrayList.size();
      byte b = 0;
      while (b < i) {
        Object object = arrayList.get(b);
        b++;
        ((zzfo)object).zzb(paramJSONObject, paramBoolean);
      } 
      return;
    } catch (Throwable paramJSONObject) {
      zzakb.zzb("Skipping active view message.", paramJSONObject);
      return;
    } 
  }
  
  private final void zzgd() {
    zzfa zzfa1 = this.zzaey;
    if (zzfa1 != null)
      zzfa1.zza(this); 
  }
  
  private final void zzgf() {
    ViewTreeObserver viewTreeObserver = (ViewTreeObserver)this.zzaer.get();
    if (viewTreeObserver != null) {
      if (!viewTreeObserver.isAlive())
        return; 
      viewTreeObserver.removeOnScrollChangedListener(this);
      viewTreeObserver.removeGlobalOnLayoutListener(this);
    } 
  }
  
  private final JSONObject zzgg() throws JSONException {
    JSONObject jSONObject = new JSONObject();
    jSONObject.put("afmaVersion", this.zzaet.zzfw()).put("activeViewJSON", this.zzaet.zzfx()).put("timestamp", zzbv.zzer().elapsedRealtime()).put("adFormat", this.zzaet.zzfv()).put("hashCode", this.zzaet.zzfy()).put("isMraid", this.zzaet.zzfz()).put("isStopped", this.zzafa).put("isPaused", this.zzaaq).put("isNative", this.zzaet.zzga()).put("isScreenOn", isScreenOn()).put("appMuted", zzbv.zzfj().zzdp()).put("appVolume", zzbv.zzfj().zzdo()).put("deviceVolume", this.zzafj);
    return jSONObject;
  }
  
  public final void onGlobalLayout() { zzl(2); }
  
  public final void onScrollChanged() { zzl(1); }
  
  public final void pause() {
    synchronized (this.mLock) {
      this.zzaaq = true;
      zzl(3);
      return;
    } 
  }
  
  public final void resume() {
    synchronized (this.mLock) {
      this.zzaaq = false;
      zzl(3);
      return;
    } 
  }
  
  public final void stop() {
    synchronized (this.mLock) {
      this.zzafa = true;
      zzl(3);
      return;
    } 
  }
  
  public final void zza(zzfa paramzzfa) {
    synchronized (this.mLock) {
      this.zzaey = paramzzfa;
      return;
    } 
  }
  
  public final void zza(zzfo paramzzfo) {
    if (this.zzafg.isEmpty())
      synchronized (this.mLock) {
        if (this.zzafe == null) {
          IntentFilter intentFilter = new IntentFilter();
          intentFilter.addAction("android.intent.action.SCREEN_ON");
          intentFilter.addAction("android.intent.action.SCREEN_OFF");
          this.zzafe = new zzeu(this);
          zzbv.zzfk().zza(this.zzaeo, this.zzafe, intentFilter);
        } 
        zzl(3);
      }  
    this.zzafg.add(paramzzfo);
    try {
      paramzzfo.zzb(zza(zza(this.zzaes.zzgh(), null)), false);
      return;
    } catch (JSONException paramzzfo) {
      zzakb.zzb("Skipping measurement update for new client.", paramzzfo);
      return;
    } 
  }
  
  final void zza(zzfo paramzzfo, Map<String, String> paramMap) {
    String str = String.valueOf(this.zzaet.zzfy());
    if (str.length() != 0) {
      str = "Received request to untrack: ".concat(str);
    } else {
      str = new String("Received request to untrack: ");
    } 
    zzakb.zzck(str);
    zzb(paramzzfo);
  }
  
  public final void zzb(zzfo paramzzfo) {
    this.zzafg.remove(paramzzfo);
    paramzzfo.zzgl();
    if (this.zzafg.isEmpty())
      synchronized (this.mLock) {
        zzgf();
        synchronized (this.mLock) {
          broadcastReceiver = this.zzafe;
          if (broadcastReceiver != null) {
            try {
              zzbv.zzfk().zza(this.zzaeo, this.zzafe);
            } catch (IllegalStateException broadcastReceiver) {
              zzakb.zzb("Failed trying to unregister the receiver", broadcastReceiver);
            } catch (Exception broadcastReceiver) {
              zzbv.zzeo().zza(broadcastReceiver, "ActiveViewUnit.stopScreenStatusMonitoring");
            } 
            this.zzafe = null;
          } 
          this.zzaeo.getContentResolver().unregisterContentObserver(this.zzafi);
          byte b = 0;
          this.zzafb = false;
          zzgd();
          null = (ArrayList)new ArrayList(this.zzafg);
          int i = null.size();
          while (b < i) {
            Object object = null.get(b);
            b++;
            zzb((zzfo)object);
          } 
          return;
        } 
      }  
  }
  
  final boolean zzc(@Nullable Map<String, String> paramMap) {
    if (paramMap == null)
      return false; 
    String str = (String)paramMap.get("hashCode");
    return (!TextUtils.isEmpty(str) && str.equals(this.zzaet.zzfy()));
  }
  
  final void zzd(Map<String, String> paramMap) { zzl(3); }
  
  final void zze(Map<String, String> paramMap) {
    boolean bool;
    if (!paramMap.containsKey("isVisible"))
      return; 
    if ("1".equals(paramMap.get("isVisible")) || "true".equals(paramMap.get("isVisible"))) {
      bool = true;
    } else {
      bool = false;
    } 
    Iterator iterator = this.zzaff.iterator();
    while (iterator.hasNext())
      ((zzeq)iterator.next()).zza(this, bool); 
  }
  
  public final void zzgb() { this.zzafj = zzalb.zzay(this.zzaeo); }
  
  public final void zzgc() { // Byte code:
    //   0: aload_0
    //   1: getfield mLock : Ljava/lang/Object;
    //   4: astore_3
    //   5: aload_3
    //   6: monitorenter
    //   7: aload_0
    //   8: getfield zzafb : Z
    //   11: ifeq -> 101
    //   14: aload_0
    //   15: iconst_1
    //   16: putfield zzafc : Z
    //   19: aload_0
    //   20: invokespecial zzgg : ()Lorg/json/JSONObject;
    //   23: astore_1
    //   24: aload_1
    //   25: ldc_w 'doneReasonCode'
    //   28: ldc_w 'u'
    //   31: invokevirtual put : (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   34: pop
    //   35: aload_0
    //   36: aload_1
    //   37: iconst_1
    //   38: invokespecial zza : (Lorg/json/JSONObject;Z)V
    //   41: goto -> 57
    //   44: astore_1
    //   45: ldc_w 'Failure while processing active view data.'
    //   48: astore_2
    //   49: aload_2
    //   50: aload_1
    //   51: invokestatic zzb : (Ljava/lang/String;Ljava/lang/Throwable;)V
    //   54: goto -> 57
    //   57: aload_0
    //   58: getfield zzaet : Lcom/google/android/gms/internal/ads/zzer;
    //   61: invokevirtual zzfy : ()Ljava/lang/String;
    //   64: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   67: astore_1
    //   68: aload_1
    //   69: invokevirtual length : ()I
    //   72: ifeq -> 86
    //   75: ldc_w 'Untracking ad unit: '
    //   78: aload_1
    //   79: invokevirtual concat : (Ljava/lang/String;)Ljava/lang/String;
    //   82: astore_1
    //   83: goto -> 97
    //   86: new java/lang/String
    //   89: dup
    //   90: ldc_w 'Untracking ad unit: '
    //   93: invokespecial <init> : (Ljava/lang/String;)V
    //   96: astore_1
    //   97: aload_1
    //   98: invokestatic zzck : (Ljava/lang/String;)V
    //   101: aload_3
    //   102: monitorexit
    //   103: return
    //   104: astore_1
    //   105: aload_3
    //   106: monitorexit
    //   107: goto -> 112
    //   110: aload_1
    //   111: athrow
    //   112: goto -> 110
    //   115: astore_1
    //   116: ldc_w 'JSON failure while processing active view data.'
    //   119: astore_2
    //   120: goto -> 49
    // Exception table:
    //   from	to	target	type
    //   7	19	104	finally
    //   19	41	115	org/json/JSONException
    //   19	41	44	java/lang/RuntimeException
    //   19	41	104	finally
    //   49	54	104	finally
    //   57	83	104	finally
    //   86	97	104	finally
    //   97	101	104	finally
    //   101	103	104	finally
    //   105	107	104	finally }
  
  public final boolean zzge() {
    synchronized (this.mLock) {
      return this.zzafb;
    } 
  }
  
  protected final void zzl(int paramInt) { // Byte code:
    //   0: aload_0
    //   1: getfield mLock : Ljava/lang/Object;
    //   4: astore #6
    //   6: aload #6
    //   8: monitorenter
    //   9: aload_0
    //   10: getfield zzafg : Ljava/util/HashSet;
    //   13: invokevirtual iterator : ()Ljava/util/Iterator;
    //   16: astore #5
    //   18: aload #5
    //   20: invokeinterface hasNext : ()Z
    //   25: ifeq -> 371
    //   28: aload #5
    //   30: invokeinterface next : ()Ljava/lang/Object;
    //   35: checkcast com/google/android/gms/internal/ads/zzfo
    //   38: invokeinterface zzgk : ()Z
    //   43: ifeq -> 18
    //   46: iconst_1
    //   47: istore_2
    //   48: goto -> 51
    //   51: iload_2
    //   52: ifeq -> 353
    //   55: aload_0
    //   56: getfield zzafb : Z
    //   59: ifne -> 65
    //   62: goto -> 353
    //   65: aload_0
    //   66: getfield zzaes : Lcom/google/android/gms/internal/ads/zzgd;
    //   69: invokeinterface zzgh : ()Landroid/view/View;
    //   74: astore #5
    //   76: aload #5
    //   78: ifnull -> 376
    //   81: invokestatic zzek : ()Lcom/google/android/gms/internal/ads/zzakk;
    //   84: aload #5
    //   86: aload_0
    //   87: getfield zzaev : Landroid/os/PowerManager;
    //   90: aload_0
    //   91: getfield zzaew : Landroid/app/KeyguardManager;
    //   94: invokevirtual zza : (Landroid/view/View;Landroid/os/PowerManager;Landroid/app/KeyguardManager;)Z
    //   97: ifeq -> 376
    //   100: iconst_1
    //   101: istore_3
    //   102: goto -> 105
    //   105: aload #5
    //   107: ifnull -> 381
    //   110: iload_3
    //   111: ifeq -> 381
    //   114: aload #5
    //   116: new android/graphics/Rect
    //   119: dup
    //   120: invokespecial <init> : ()V
    //   123: aconst_null
    //   124: invokevirtual getGlobalVisibleRect : (Landroid/graphics/Rect;Landroid/graphics/Point;)Z
    //   127: ifeq -> 381
    //   130: iconst_1
    //   131: istore #4
    //   133: goto -> 136
    //   136: aload_0
    //   137: getfield zzaes : Lcom/google/android/gms/internal/ads/zzgd;
    //   140: invokeinterface zzgi : ()Z
    //   145: ifeq -> 156
    //   148: aload_0
    //   149: invokevirtual zzgc : ()V
    //   152: aload #6
    //   154: monitorexit
    //   155: return
    //   156: iload_1
    //   157: iconst_1
    //   158: if_icmpne -> 184
    //   161: aload_0
    //   162: getfield zzadz : Lcom/google/android/gms/internal/ads/zzamj;
    //   165: invokevirtual tryAcquire : ()Z
    //   168: ifne -> 184
    //   171: iload #4
    //   173: aload_0
    //   174: getfield zzafd : Z
    //   177: if_icmpne -> 184
    //   180: aload #6
    //   182: monitorexit
    //   183: return
    //   184: iload #4
    //   186: ifne -> 205
    //   189: aload_0
    //   190: getfield zzafd : Z
    //   193: ifne -> 205
    //   196: iload_1
    //   197: iconst_1
    //   198: if_icmpne -> 205
    //   201: aload #6
    //   203: monitorexit
    //   204: return
    //   205: aload_0
    //   206: aload_0
    //   207: aload #5
    //   209: iload_3
    //   210: invokestatic valueOf : (Z)Ljava/lang/Boolean;
    //   213: invokespecial zza : (Landroid/view/View;Ljava/lang/Boolean;)Lorg/json/JSONObject;
    //   216: iconst_0
    //   217: invokespecial zza : (Lorg/json/JSONObject;Z)V
    //   220: aload_0
    //   221: iload #4
    //   223: putfield zzafd : Z
    //   226: goto -> 244
    //   229: astore #5
    //   231: goto -> 236
    //   234: astore #5
    //   236: ldc_w 'Active view update failed.'
    //   239: aload #5
    //   241: invokestatic zza : (Ljava/lang/String;Ljava/lang/Throwable;)V
    //   244: aload_0
    //   245: getfield zzaes : Lcom/google/android/gms/internal/ads/zzgd;
    //   248: invokeinterface zzgj : ()Lcom/google/android/gms/internal/ads/zzgd;
    //   253: invokeinterface zzgh : ()Landroid/view/View;
    //   258: astore #7
    //   260: aload #7
    //   262: ifnull -> 345
    //   265: aload_0
    //   266: getfield zzaer : Ljava/lang/ref/WeakReference;
    //   269: invokevirtual get : ()Ljava/lang/Object;
    //   272: checkcast android/view/ViewTreeObserver
    //   275: astore #5
    //   277: aload #7
    //   279: invokevirtual getViewTreeObserver : ()Landroid/view/ViewTreeObserver;
    //   282: astore #7
    //   284: aload #7
    //   286: aload #5
    //   288: if_acmpeq -> 345
    //   291: aload_0
    //   292: invokespecial zzgf : ()V
    //   295: aload_0
    //   296: getfield zzaez : Z
    //   299: ifeq -> 315
    //   302: aload #5
    //   304: ifnull -> 332
    //   307: aload #5
    //   309: invokevirtual isAlive : ()Z
    //   312: ifeq -> 332
    //   315: aload_0
    //   316: iconst_1
    //   317: putfield zzaez : Z
    //   320: aload #7
    //   322: aload_0
    //   323: invokevirtual addOnScrollChangedListener : (Landroid/view/ViewTreeObserver$OnScrollChangedListener;)V
    //   326: aload #7
    //   328: aload_0
    //   329: invokevirtual addOnGlobalLayoutListener : (Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;)V
    //   332: aload_0
    //   333: new java/lang/ref/WeakReference
    //   336: dup
    //   337: aload #7
    //   339: invokespecial <init> : (Ljava/lang/Object;)V
    //   342: putfield zzaer : Ljava/lang/ref/WeakReference;
    //   345: aload_0
    //   346: invokespecial zzgd : ()V
    //   349: aload #6
    //   351: monitorexit
    //   352: return
    //   353: aload #6
    //   355: monitorexit
    //   356: return
    //   357: astore #5
    //   359: aload #6
    //   361: monitorexit
    //   362: goto -> 368
    //   365: aload #5
    //   367: athrow
    //   368: goto -> 365
    //   371: iconst_0
    //   372: istore_2
    //   373: goto -> 51
    //   376: iconst_0
    //   377: istore_3
    //   378: goto -> 105
    //   381: iconst_0
    //   382: istore #4
    //   384: goto -> 136
    // Exception table:
    //   from	to	target	type
    //   9	18	357	finally
    //   18	46	357	finally
    //   55	62	357	finally
    //   65	76	357	finally
    //   81	100	357	finally
    //   114	130	357	finally
    //   136	155	357	finally
    //   161	183	357	finally
    //   189	196	357	finally
    //   201	204	357	finally
    //   205	226	234	org/json/JSONException
    //   205	226	229	java/lang/RuntimeException
    //   205	226	357	finally
    //   236	244	357	finally
    //   244	260	357	finally
    //   265	284	357	finally
    //   291	302	357	finally
    //   307	315	357	finally
    //   315	332	357	finally
    //   332	345	357	finally
    //   345	352	357	finally
    //   353	356	357	finally
    //   359	362	357	finally }
}
