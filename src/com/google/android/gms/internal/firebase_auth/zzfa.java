package com.google.android.gms.internal.firebase_auth;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public abstract class zzfa extends zzeg {
  private static final Logger logger = Logger.getLogger(zzfa.class.getName());
  
  private static final boolean zztp = zziw.zzjs();
  
  zzfc zztq;
  
  private zzfa() {}
  
  public static int zza(int paramInt, zzgj paramzzgj) {
    paramInt = zzag(paramInt);
    int i = paramzzgj.zzgw();
    return paramInt + zzai(i) + i;
  }
  
  public static int zza(zzgj paramzzgj) {
    int i = paramzzgj.zzgw();
    return zzai(i) + i;
  }
  
  static int zza(zzhc paramzzhc, zzhw paramzzhw) {
    zzdz zzdz = (zzdz)paramzzhc;
    int j = zzdz.zzes();
    int i = j;
    if (j == -1) {
      i = paramzzhw.zzp(zzdz);
      zzdz.zzg(i);
    } 
    return zzai(i) + i;
  }
  
  public static int zzag(int paramInt) { return zzai(paramInt << 3); }
  
  public static int zzah(int paramInt) { return (paramInt >= 0) ? zzai(paramInt) : 10; }
  
  public static int zzai(int paramInt) { return ((paramInt & 0xFFFFFF80) == 0) ? 1 : (((paramInt & 0xFFFFC000) == 0) ? 2 : (((0xFFE00000 & paramInt) == 0) ? 3 : (((paramInt & 0xF0000000) == 0) ? 4 : 5))); }
  
  public static int zzaj(int paramInt) { return zzai(zzan(paramInt)); }
  
  public static int zzak(int paramInt) { return 4; }
  
  public static int zzal(int paramInt) { return 4; }
  
  public static int zzam(int paramInt) { return zzah(paramInt); }
  
  private static int zzan(int paramInt) { return paramInt >> 31 ^ paramInt << 1; }
  
  @Deprecated
  public static int zzao(int paramInt) { return zzai(paramInt); }
  
  public static int zzb(double paramDouble) { return 8; }
  
  public static int zzb(float paramFloat) { return 4; }
  
  public static int zzb(int paramInt, double paramDouble) { return zzag(paramInt) + 8; }
  
  public static int zzb(int paramInt, float paramFloat) { return zzag(paramInt) + 4; }
  
  public static int zzb(int paramInt, zzgj paramzzgj) { return (zzag(1) << 1) + zzl(2, paramInt) + zza(3, paramzzgj); }
  
  public static int zzb(int paramInt, zzhc paramzzhc) { return (zzag(1) << 1) + zzl(2, paramInt) + zzag(3) + zzd(paramzzhc); }
  
  static int zzb(int paramInt, zzhc paramzzhc, zzhw paramzzhw) { return zzag(paramInt) + zza(paramzzhc, paramzzhw); }
  
  public static int zzb(int paramInt, String paramString) { return zzag(paramInt) + zzdb(paramString); }
  
  public static int zzb(zzeh paramzzeh) {
    int i = paramzzeh.size();
    return zzai(i) + i;
  }
  
  public static zzfa zzb(byte[] paramArrayOfByte) { return new zza(paramArrayOfByte, 0, paramArrayOfByte.length); }
  
  public static int zzc(int paramInt, zzeh paramzzeh) {
    paramInt = zzag(paramInt);
    int i = paramzzeh.size();
    return paramInt + zzai(i) + i;
  }
  
  @Deprecated
  static int zzc(int paramInt, zzhc paramzzhc, zzhw paramzzhw) {
    int j = zzag(paramInt);
    zzdz zzdz = (zzdz)paramzzhc;
    int i = zzdz.zzes();
    paramInt = i;
    if (i == -1) {
      paramInt = paramzzhw.zzp(zzdz);
      zzdz.zzg(paramInt);
    } 
    return (j << 1) + paramInt;
  }
  
  public static int zzc(int paramInt, boolean paramBoolean) { return zzag(paramInt) + 1; }
  
  public static int zzc(byte[] paramArrayOfByte) {
    int i = paramArrayOfByte.length;
    return zzai(i) + i;
  }
  
  public static int zzd(int paramInt, long paramLong) { return zzag(paramInt) + zzf(paramLong); }
  
  public static int zzd(int paramInt, zzeh paramzzeh) { return (zzag(1) << 1) + zzl(2, paramInt) + zzc(3, paramzzeh); }
  
  public static int zzd(zzhc paramzzhc) {
    int i = paramzzhc.zzgw();
    return zzai(i) + i;
  }
  
  public static int zzdb(String paramString) {
    int i;
    try {
      i = zziy.zza(paramString);
    } catch (zzjc zzjc) {
      i = paramString.getBytes(zzfv.UTF_8).length;
    } 
    return zzai(i) + i;
  }
  
  public static int zze(int paramInt, long paramLong) { return zzag(paramInt) + zzf(paramLong); }
  
  public static int zze(long paramLong) { return zzf(paramLong); }
  
  @Deprecated
  public static int zze(zzhc paramzzhc) { return paramzzhc.zzgw(); }
  
  public static int zzf(int paramInt, long paramLong) { return zzag(paramInt) + zzf(zzj(paramLong)); }
  
  public static int zzf(long paramLong) {
    if ((0xFFFFFFFFFFFFFF80L & paramLong) == 0L)
      return 1; 
    if (paramLong < 0L)
      return 10; 
    if ((0xFFFFFFF800000000L & paramLong) != 0L) {
      b2 = 6;
      paramLong >>>= 28;
    } else {
      b2 = 2;
    } 
    byte b1 = b2;
    long l = paramLong;
    if ((0xFFFFFFFFFFE00000L & paramLong) != 0L) {
      b1 = b2 + 2;
      l = paramLong >>> 14;
    } 
    byte b2 = b1;
    if ((l & 0xFFFFFFFFFFFFC000L) != 0L)
      b2 = b1 + 1; 
    return b2;
  }
  
  public static int zzg(int paramInt, long paramLong) { return zzag(paramInt) + 8; }
  
  public static int zzg(long paramLong) { return zzf(zzj(paramLong)); }
  
  public static int zzh(int paramInt, long paramLong) { return zzag(paramInt) + 8; }
  
  public static int zzh(long paramLong) { return 8; }
  
  public static int zzi(long paramLong) { return 8; }
  
  private static long zzj(long paramLong) { return paramLong >> 63 ^ paramLong << true; }
  
  public static int zzk(int paramInt1, int paramInt2) { return zzag(paramInt1) + zzah(paramInt2); }
  
  public static int zzl(int paramInt1, int paramInt2) { return zzag(paramInt1) + zzai(paramInt2); }
  
  public static int zzm(int paramInt1, int paramInt2) { return zzag(paramInt1) + zzai(zzan(paramInt2)); }
  
  public static int zzn(int paramInt1, int paramInt2) { return zzag(paramInt1) + 4; }
  
  public static int zzo(int paramInt1, int paramInt2) { return zzag(paramInt1) + 4; }
  
  public static int zzp(int paramInt1, int paramInt2) { return zzag(paramInt1) + zzah(paramInt2); }
  
  public static int zzt(boolean paramBoolean) { return 1; }
  
  public final void zza(double paramDouble) throws IOException { zzd(Double.doubleToRawLongBits(paramDouble)); }
  
  public final void zza(float paramFloat) throws IOException { zzaf(Float.floatToRawIntBits(paramFloat)); }
  
  public final void zza(int paramInt, double paramDouble) throws IOException { zzc(paramInt, Double.doubleToRawLongBits(paramDouble)); }
  
  public final void zza(int paramInt, float paramFloat) throws IOException { zzj(paramInt, Float.floatToRawIntBits(paramFloat)); }
  
  public abstract void zza(int paramInt, long paramLong) throws IOException;
  
  public abstract void zza(int paramInt, zzeh paramzzeh) throws IOException;
  
  public abstract void zza(int paramInt, zzhc paramzzhc) throws IOException;
  
  abstract void zza(int paramInt, zzhc paramzzhc, zzhw paramzzhw) throws IOException;
  
  public abstract void zza(int paramInt, String paramString) throws IOException;
  
  public abstract void zza(zzeh paramzzeh) throws IOException;
  
  final void zza(String paramString, zzjc paramzzjc) throws IOException {
    logger.logp(Level.WARNING, "com.google.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", paramzzjc);
    arrayOfByte = paramString.getBytes(zzfv.UTF_8);
    try {
      zzad(arrayOfByte.length);
      zza(arrayOfByte, 0, arrayOfByte.length);
      return;
    } catch (IndexOutOfBoundsException arrayOfByte) {
      throw new zzb(arrayOfByte);
    } catch (zzb arrayOfByte) {
      throw arrayOfByte;
    } 
  }
  
  public abstract void zzac(int paramInt) throws IOException;
  
  public abstract void zzad(int paramInt) throws IOException;
  
  public final void zzae(int paramInt) throws IOException { zzad(zzan(paramInt)); }
  
  public abstract void zzaf(int paramInt) throws IOException;
  
  public final void zzb(int paramInt, long paramLong) throws IOException { zza(paramInt, zzj(paramLong)); }
  
  public abstract void zzb(int paramInt, zzeh paramzzeh) throws IOException;
  
  public abstract void zzb(int paramInt, boolean paramBoolean) throws IOException;
  
  public abstract void zzb(long paramLong) throws IOException;
  
  public abstract void zzc(byte paramByte) throws IOException;
  
  public abstract void zzc(int paramInt, long paramLong) throws IOException;
  
  public final void zzc(long paramLong) throws IOException { zzb(zzj(paramLong)); }
  
  public abstract void zzc(zzhc paramzzhc) throws IOException;
  
  public abstract void zzd(long paramLong) throws IOException;
  
  abstract void zzd(byte[] paramArrayOfByte, int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zzda(String paramString) throws IOException;
  
  public abstract void zzf(int paramInt1, int paramInt2) throws IOException;
  
  public abstract void zzg(int paramInt1, int paramInt2) throws IOException;
  
  public abstract int zzgi();
  
  public final void zzgj() {
    if (zzgi() == 0)
      return; 
    throw new IllegalStateException("Did not write as much data as expected.");
  }
  
  public abstract void zzh(int paramInt1, int paramInt2) throws IOException;
  
  public final void zzi(int paramInt1, int paramInt2) throws IOException { zzh(paramInt1, zzan(paramInt2)); }
  
  public abstract void zzj(int paramInt1, int paramInt2) throws IOException;
  
  public final void zzs(boolean paramBoolean) throws IOException { zzc((byte)paramBoolean); }
}
