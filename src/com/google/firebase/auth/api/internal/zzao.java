package com.google.firebase.auth.api.internal;

import android.app.Activity;
import android.content.Context;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.internal.firebase_auth.zzct;
import com.google.android.gms.internal.firebase_auth.zzdb;
import com.google.android.gms.internal.firebase_auth.zzdj;
import com.google.android.gms.internal.firebase_auth.zzjo;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.Tasks;
import com.google.firebase.FirebaseApp;
import com.google.firebase.auth.ActionCodeResult;
import com.google.firebase.auth.ActionCodeSettings;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.EmailAuthCredential;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GetTokenResult;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.auth.ProviderQueryResult;
import com.google.firebase.auth.SignInMethodQueryResult;
import com.google.firebase.auth.UserProfileChangeRequest;
import com.google.firebase.auth.internal.zza;
import com.google.firebase.auth.internal.zzah;
import com.google.firebase.auth.internal.zzh;
import com.google.firebase.auth.internal.zzl;
import com.google.firebase.auth.internal.zzn;
import com.google.firebase.auth.internal.zzv;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public final class zzao extends zzah {
  @NonNull
  private final Context zzjx;
  
  @NonNull
  private final zzef zzjy;
  
  private final Future<zzai<zzef>> zzjz;
  
  zzao(@NonNull Context paramContext, @NonNull zzef paramzzef) {
    this.zzjx = paramContext;
    this.zzjy = paramzzef;
    this.zzjz = super.zzcw();
  }
  
  @NonNull
  @VisibleForTesting
  private final <ResultT> Task<ResultT> zza(@NonNull Task<ResultT> paramTask, @NonNull zzam<zzdq, ResultT> paramzzam) { return paramTask.continueWithTask(new zzap(this, paramzzam)); }
  
  @NonNull
  @VisibleForTesting
  static zzl zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull zzct paramzzct) {
    Preconditions.checkNotNull(paramFirebaseApp);
    Preconditions.checkNotNull(paramzzct);
    ArrayList arrayList = new ArrayList();
    arrayList.add(new zzh(paramzzct, "firebase"));
    List list = paramzzct.zzdu();
    if (list != null && !list.isEmpty())
      for (byte b = 0; b < list.size(); b++)
        arrayList.add(new zzh((zzdb)list.get(b)));  
    zzl zzl = new zzl(paramFirebaseApp, arrayList);
    zzl.zza(new zzn(paramzzct.getLastSignInTimestamp(), paramzzct.getCreationTimestamp()));
    zzl.zzr(paramzzct.isNewUser());
    zzl.zzb(paramzzct.zzcv());
    return zzl;
  }
  
  @NonNull
  public final Task<Void> setFirebaseUIVersion(@NonNull String paramString) {
    zzck zzck = new zzck(paramString);
    return zza(zzb(zzck), zzck);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @Nullable ActionCodeSettings paramActionCodeSettings, @NonNull String paramString) {
    zzcg zzcg = (zzcg)(new zzcg(paramString, paramActionCodeSettings)).zza(paramFirebaseApp);
    return zza(zzb(zzcg), zzcg);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull AuthCredential paramAuthCredential, @Nullable String paramString, @NonNull zza paramzza) {
    zzco zzco = (zzco)(new zzco(paramAuthCredential, paramString)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzco), zzco);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull EmailAuthCredential paramEmailAuthCredential, @NonNull zza paramzza) {
    zzcu zzcu = (zzcu)(new zzcu(paramEmailAuthCredential)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzcu), zzcu);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull AuthCredential paramAuthCredential, @NonNull zzah paramzzah) {
    EmailAuthCredential emailAuthCredential;
    zzbk zzbk;
    Preconditions.checkNotNull(paramFirebaseApp);
    Preconditions.checkNotNull(paramAuthCredential);
    Preconditions.checkNotNull(paramFirebaseUser);
    Preconditions.checkNotNull(paramzzah);
    List list = paramFirebaseUser.getProviders();
    if (list != null && list.contains(paramAuthCredential.getProvider()))
      return Tasks.forException(zzds.zzb(new Status(17015))); 
    if (paramAuthCredential instanceof EmailAuthCredential) {
      zzbg zzbg;
      emailAuthCredential = (EmailAuthCredential)paramAuthCredential;
      if (!emailAuthCredential.zzbz()) {
        zzbg = (zzbg)(new zzbg(emailAuthCredential)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
        return zza(zzb(zzbg), zzbg);
      } 
      zzbk = (zzbm)(new zzbm(emailAuthCredential)).zza(zzbg).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
      return zza(zzb(zzbk), zzbk);
    } 
    if (emailAuthCredential instanceof PhoneAuthCredential) {
      zzbk = (zzbk)(new zzbk((PhoneAuthCredential)emailAuthCredential)).zza(zzbk).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
      return zza(zzb(zzbk), zzbk);
    } 
    Preconditions.checkNotNull(zzbk);
    Preconditions.checkNotNull(emailAuthCredential);
    Preconditions.checkNotNull(paramFirebaseUser);
    Preconditions.checkNotNull(paramzzah);
    zzbi zzbi = (zzbi)(new zzbi(emailAuthCredential)).zza(zzbk).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbi), zzbi);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull AuthCredential paramAuthCredential, @Nullable String paramString, @NonNull zzah paramzzah) {
    zzbo zzbo = (zzbo)(new zzbo(paramAuthCredential, paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbo), zzbo);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull EmailAuthCredential paramEmailAuthCredential, @NonNull zzah paramzzah) {
    zzbs zzbs = (zzbs)(new zzbs(paramEmailAuthCredential)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbs), zzbs);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull PhoneAuthCredential paramPhoneAuthCredential, @NonNull zzah paramzzah) {
    zzdg zzdg = (zzdg)(new zzdg(paramPhoneAuthCredential)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzdg), zzdg);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull PhoneAuthCredential paramPhoneAuthCredential, @Nullable String paramString, @NonNull zzah paramzzah) {
    zzca zzca = (zzca)(new zzca(paramPhoneAuthCredential, paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzca), zzca);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull UserProfileChangeRequest paramUserProfileChangeRequest, @NonNull zzah paramzzah) {
    zzdi zzdi = (zzdi)(new zzdi(paramUserProfileChangeRequest)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzdi), zzdi);
  }
  
  @NonNull
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull zzah paramzzah) {
    zzce zzce = (zzce)(new zzce()).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zza(zzce), zzce);
  }
  
  public final Task<GetTokenResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString, @NonNull zzah paramzzah) {
    zzbe zzbe = (zzbe)(new zzbe(paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zza(zzbe), zzbe);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString1, @NonNull String paramString2, @Nullable String paramString3, @NonNull zzah paramzzah) {
    zzbw zzbw = (zzbw)(new zzbw(paramString1, paramString2, paramString3)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbw), zzbw);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull PhoneAuthCredential paramPhoneAuthCredential, @Nullable String paramString, @NonNull zza paramzza) {
    zzcw zzcw = (zzcw)(new zzcw(paramPhoneAuthCredential, paramString)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzcw), zzcw);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull zza paramzza, @Nullable String paramString) {
    zzcm zzcm = (zzcm)(new zzcm(paramString)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzcm), zzcm);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @NonNull ActionCodeSettings paramActionCodeSettings, @Nullable String paramString2) {
    paramActionCodeSettings.zza(zzjo.zzaeh);
    zzci zzci = (zzci)(new zzci(paramString1, paramActionCodeSettings, paramString2, "sendPasswordResetEmail")).zza(paramFirebaseApp);
    return zza(zzb(zzci), zzci);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString, @NonNull zza paramzza) {
    zzcq zzcq = (zzcq)(new zzcq(paramString)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzcq), zzcq);
  }
  
  public final Task<ProviderQueryResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @Nullable String paramString2) {
    zzba zzba = (zzba)(new zzba(paramString1, paramString2)).zza(paramFirebaseApp);
    return zza(zza(zzba), zzba);
  }
  
  public final Task<Void> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @NonNull String paramString2, @Nullable String paramString3) {
    zzau zzau = (zzau)(new zzau(paramString1, paramString2, paramString3)).zza(paramFirebaseApp);
    return zza(zzb(zzau), zzau);
  }
  
  public final Task<AuthResult> zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @NonNull String paramString2, @NonNull String paramString3, @NonNull zza paramzza) {
    zzaw zzaw = (zzaw)(new zzaw(paramString1, paramString2, paramString3)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzaw), zzaw);
  }
  
  @NonNull
  public final Task<Void> zza(@NonNull FirebaseUser paramFirebaseUser, @NonNull zzv paramzzv) {
    zzay zzay = (zzay)(new zzay()).zzf(paramFirebaseUser).zzb(paramzzv).zza(paramzzv);
    return zza(zzb(zzay), zzay);
  }
  
  public final void zza(@NonNull FirebaseApp paramFirebaseApp, @NonNull zzdj paramzzdj, @NonNull PhoneAuthProvider.OnVerificationStateChangedCallbacks paramOnVerificationStateChangedCallbacks, @Nullable Activity paramActivity, @NonNull Executor paramExecutor) {
    zzdm zzdm = (zzdm)(new zzdm(paramzzdj)).zza(paramFirebaseApp).zza(paramOnVerificationStateChangedCallbacks, paramActivity, paramExecutor);
    zza(zzb(zzdm), zzdm);
  }
  
  public final Task<AuthResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull AuthCredential paramAuthCredential, @Nullable String paramString, @NonNull zzah paramzzah) {
    zzbq zzbq = (zzbq)(new zzbq(paramAuthCredential, paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbq), zzbq);
  }
  
  public final Task<AuthResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull EmailAuthCredential paramEmailAuthCredential, @NonNull zzah paramzzah) {
    zzbu zzbu = (zzbu)(new zzbu(paramEmailAuthCredential)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzbu), zzbu);
  }
  
  public final Task<AuthResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull PhoneAuthCredential paramPhoneAuthCredential, @Nullable String paramString, @NonNull zzah paramzzah) {
    zzcc zzcc = (zzcc)(new zzcc(paramPhoneAuthCredential, paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzcc), zzcc);
  }
  
  public final Task<Void> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString, @NonNull zzah paramzzah) {
    zzdc zzdc = (zzdc)(new zzdc(paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzdc), zzdc);
  }
  
  public final Task<AuthResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString1, @NonNull String paramString2, @NonNull String paramString3, @NonNull zzah paramzzah) {
    zzby zzby = (zzby)(new zzby(paramString1, paramString2, paramString3)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzby), zzby);
  }
  
  public final Task<Void> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @NonNull ActionCodeSettings paramActionCodeSettings, @Nullable String paramString2) {
    paramActionCodeSettings.zza(zzjo.zzaem);
    zzci zzci = (zzci)(new zzci(paramString1, paramActionCodeSettings, paramString2, "sendSignInLinkToEmail")).zza(paramFirebaseApp);
    return zza(zzb(zzci), zzci);
  }
  
  public final Task<SignInMethodQueryResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @Nullable String paramString2) {
    zzbc zzbc = (zzbc)(new zzbc(paramString1, paramString2)).zza(paramFirebaseApp);
    return zza(zza(zzbc), zzbc);
  }
  
  public final Task<AuthResult> zzb(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @NonNull String paramString2, @Nullable String paramString3, @NonNull zza paramzza) {
    zzcs zzcs = (zzcs)(new zzcs(paramString1, paramString2, paramString3)).zza(paramFirebaseApp).zzb(paramzza);
    return zza(zzb(zzcs), zzcs);
  }
  
  public final Task<Void> zzc(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString, @NonNull zzah paramzzah) {
    zzde zzde = (zzde)(new zzde(paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzde), zzde);
  }
  
  public final Task<ActionCodeResult> zzc(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @Nullable String paramString2) {
    zzas zzas = (zzas)(new zzas(paramString1, paramString2)).zza(paramFirebaseApp);
    return zza(zzb(zzas), zzas);
  }
  
  final Future<zzai<zzef>> zzcw() {
    Future future = this.zzjz;
    if (future != null)
      return future; 
    Context context = this.zzjx;
    zzdo zzdo = new zzdo(this.zzjy, context);
    return Executors.newSingleThreadExecutor().submit(zzdo);
  }
  
  public final Task<AuthResult> zzd(@NonNull FirebaseApp paramFirebaseApp, @NonNull FirebaseUser paramFirebaseUser, @NonNull String paramString, @NonNull zzah paramzzah) {
    zzda zzda;
    Preconditions.checkNotNull(paramFirebaseApp);
    Preconditions.checkNotEmpty(paramString);
    Preconditions.checkNotNull(paramFirebaseUser);
    Preconditions.checkNotNull(paramzzah);
    List list = paramFirebaseUser.getProviders();
    if ((list != null && !list.contains(paramString)) || paramFirebaseUser.isAnonymous())
      return Tasks.forException(zzds.zzb(new Status(17016, paramString))); 
    byte b = -1;
    if (paramString.hashCode() == 1216985755 && paramString.equals("password"))
      b = 0; 
    if (b != 0) {
      zzda = (zzda)(new zzda(paramString)).zza(paramFirebaseApp).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
      return zza(zzb(zzda), zzda);
    } 
    zzcy zzcy = (zzcy)(new zzcy()).zza(zzda).zzf(paramFirebaseUser).zzb(paramzzah).zza(paramzzah);
    return zza(zzb(zzcy), zzcy);
  }
  
  public final Task<Void> zzd(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @Nullable String paramString2) {
    zzaq zzaq = (zzaq)(new zzaq(paramString1, paramString2)).zza(paramFirebaseApp);
    return zza(zzb(zzaq), zzaq);
  }
  
  public final Task<String> zze(@NonNull FirebaseApp paramFirebaseApp, @NonNull String paramString1, @Nullable String paramString2) {
    zzdk zzdk = (zzdk)(new zzdk(paramString1, paramString2)).zza(paramFirebaseApp);
    return zza(zzb(zzdk), zzdk);
  }
}
