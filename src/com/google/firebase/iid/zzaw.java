package com.google.firebase.iid;

import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.Log;
import java.util.concurrent.TimeUnit;
import org.json.JSONException;
import org.json.JSONObject;

final class zzaw {
  private static final long zzdk = TimeUnit.DAYS.toMillis(7L);
  
  private final long timestamp;
  
  final String zzbx;
  
  private final String zzdl;
  
  private zzaw(String paramString1, String paramString2, long paramLong) {
    this.zzbx = paramString1;
    this.zzdl = paramString2;
    this.timestamp = paramLong;
  }
  
  static String zza(String paramString1, String paramString2, long paramLong) {
    try {
      JSONObject jSONObject = new JSONObject();
      jSONObject.put("token", paramString1);
      jSONObject.put("appVersion", paramString2);
      jSONObject.put("timestamp", paramLong);
      return jSONObject.toString();
    } catch (JSONException paramString1) {
      StringBuilder stringBuilder = new StringBuilder((paramString1 = (paramString1 = null).valueOf(paramString1)).valueOf(paramString1).length() + 24);
      stringBuilder.append("Failed to encode token: ");
      stringBuilder.append(paramString1);
      Log.w("FirebaseInstanceId", stringBuilder.toString());
      return null;
    } 
  }
  
  static String zzb(@Nullable zzaw paramzzaw) { return (paramzzaw == null) ? null : paramzzaw.zzbx; }
  
  static zzaw zzf(String paramString) {
    if (TextUtils.isEmpty(paramString))
      return null; 
    if (paramString.startsWith("{"))
      try {
        JSONObject jSONObject = new JSONObject(paramString);
        return new zzaw(jSONObject.getString("token"), jSONObject.getString("appVersion"), jSONObject.getLong("timestamp"));
      } catch (JSONException paramString) {
        StringBuilder stringBuilder = new StringBuilder((paramString = (paramString = null).valueOf(paramString)).valueOf(paramString).length() + 23);
        stringBuilder.append("Failed to parse token: ");
        stringBuilder.append(paramString);
        Log.w("FirebaseInstanceId", stringBuilder.toString());
        return null;
      }  
    return new zzaw(paramString, null, 0L);
  }
  
  final boolean zzg(String paramString) { return (System.currentTimeMillis() > this.timestamp + zzdk || !paramString.equals(this.zzdl)); }
}
