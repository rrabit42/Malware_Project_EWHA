package com.android.volley.cache;

import android.annotation.TargetApi;
import android.graphics.Bitmap;
import android.support.v4.app.FragmentManager;
import android.support.v4.util.LruCache;
import com.android.volley.VolleyLog;
import com.android.volley.misc.Utils;
import com.android.volley.toolbox.ImageCache;

public class BitmapCache implements ImageCache {
  private static final float DEFAULT_MEM_CACHE_PERCENT = 0.15F;
  
  private static final String TAG = "BitmapCache";
  
  private LruCache<String, Bitmap> mMemoryCache;
  
  private BitmapCache(int paramInt) { init(paramInt); }
  
  public static int calculateMemCacheSize(float paramFloat) {
    if (paramFloat >= 0.05F && paramFloat <= 0.8F)
      return Math.round(paramFloat * (float)Runtime.getRuntime().maxMemory() / 1024.0F); 
    throw new IllegalArgumentException("setMemCacheSizePercent - percent must be between 0.05 and 0.8 (inclusive)");
  }
  
  @TargetApi(12)
  public static int getBitmapSize(Bitmap paramBitmap) { return Utils.hasHoneycombMR1() ? paramBitmap.getByteCount() : (paramBitmap.getRowBytes() * paramBitmap.getHeight()); }
  
  public static BitmapCache getInstance(FragmentManager paramFragmentManager) { return getInstance(paramFragmentManager, 0.15F); }
  
  public static BitmapCache getInstance(FragmentManager paramFragmentManager, float paramFloat) { return getInstance(paramFragmentManager, calculateMemCacheSize(paramFloat)); }
  
  public static BitmapCache getInstance(FragmentManager paramFragmentManager, int paramInt) { return getInstance(paramFragmentManager, "BitmapCache", paramInt); }
  
  public static BitmapCache getInstance(FragmentManager paramFragmentManager, String paramString, int paramInt) {
    String str = null;
    if (paramFragmentManager != null) {
      RetainFragment retainFragment = getRetainFragment(paramFragmentManager, paramString);
      BitmapCache bitmapCache1 = (BitmapCache)retainFragment.getObject();
    } else {
      paramFragmentManager = null;
      paramString = str;
    } 
    BitmapCache bitmapCache = paramFragmentManager;
    if (paramFragmentManager == null) {
      BitmapCache bitmapCache1 = new BitmapCache(paramInt);
      bitmapCache = bitmapCache1;
      if (paramString != null) {
        paramString.setObject(bitmapCache1);
        bitmapCache = bitmapCache1;
      } 
    } 
    return bitmapCache;
  }
  
  private static RetainFragment getRetainFragment(FragmentManager paramFragmentManager, String paramString) {
    RetainFragment retainFragment2 = (RetainFragment)paramFragmentManager.findFragmentByTag(paramString);
    RetainFragment retainFragment1 = retainFragment2;
    if (retainFragment2 == null) {
      retainFragment1 = new RetainFragment();
      paramFragmentManager.beginTransaction().add(retainFragment1, paramString).commitAllowingStateLoss();
    } 
    return retainFragment1;
  }
  
  private void init(int paramInt) {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("Memory cache created (size = ");
    stringBuilder.append(paramInt);
    stringBuilder.append("KB)");
    VolleyLog.d("BitmapCache", new Object[] { stringBuilder.toString() });
    this.mMemoryCache = new Object(this, paramInt);
  }
  
  public void addBitmapToCache(String paramString, Bitmap paramBitmap) {
    if (paramString != null) {
      if (paramBitmap == null)
        return; 
      synchronized (this.mMemoryCache) {
        if (this.mMemoryCache.get(paramString) == null) {
          StringBuilder stringBuilder = new StringBuilder();
          stringBuilder.append("Memory cache put - ");
          stringBuilder.append(paramString);
          VolleyLog.d("BitmapCache", new Object[] { stringBuilder.toString() });
          this.mMemoryCache.put(paramString, paramBitmap);
        } 
        return;
      } 
    } 
  }
  
  public void clear() { clearCache(); }
  
  public void clearCache() {
    LruCache lruCache = this.mMemoryCache;
    if (lruCache != null) {
      lruCache.evictAll();
      VolleyLog.d("BitmapCache", new Object[] { "Memory cache cleared" });
    } 
  }
  
  public Bitmap getBitmap(String paramString) { return getBitmapFromMemCache(paramString); }
  
  public Bitmap getBitmapFromMemCache(String paramString) {
    if (paramString != null)
      synchronized (this.mMemoryCache) {
        Bitmap bitmap = (Bitmap)this.mMemoryCache.get(paramString);
        if (bitmap != null) {
          StringBuilder stringBuilder = new StringBuilder();
          stringBuilder.append("Memory cache hit - ");
          stringBuilder.append(paramString);
          VolleyLog.d("BitmapCache", new Object[] { stringBuilder.toString() });
          return bitmap;
        } 
        null = new StringBuilder();
        null.append("Memory cache miss - ");
        null.append(paramString);
        VolleyLog.d("BitmapCache", new Object[] { null.toString() });
      }  
    return null;
  }
  
  public void invalidateBitmap(String paramString) {
    if (paramString == null)
      return; 
    synchronized (this.mMemoryCache) {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Memory cache remove - ");
      stringBuilder.append(paramString);
      VolleyLog.d("BitmapCache", new Object[] { stringBuilder.toString() });
      this.mMemoryCache.remove(paramString);
      return;
    } 
  }
  
  public void putBitmap(String paramString, Bitmap paramBitmap) { addBitmapToCache(paramString, paramBitmap); }
}
