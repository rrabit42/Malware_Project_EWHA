package android.arch.lifecycle;

import android.os.Handler;
import android.support.annotation.NonNull;

public class ServiceLifecycleDispatcher {
  private final Handler mHandler;
  
  private DispatchRunnable mLastDispatchRunnable;
  
  private final LifecycleRegistry mRegistry;
  
  public ServiceLifecycleDispatcher(@NonNull LifecycleOwner paramLifecycleOwner) {
    this.mRegistry = new LifecycleRegistry(paramLifecycleOwner);
    this.mHandler = new Handler();
  }
  
  private void postDispatchRunnable(Lifecycle.Event paramEvent) {
    DispatchRunnable dispatchRunnable = this.mLastDispatchRunnable;
    if (dispatchRunnable != null)
      dispatchRunnable.run(); 
    this.mLastDispatchRunnable = new DispatchRunnable(this.mRegistry, paramEvent);
    this.mHandler.postAtFrontOfQueue(this.mLastDispatchRunnable);
  }
  
  public Lifecycle getLifecycle() { return this.mRegistry; }
  
  public void onServicePreSuperOnBind() { postDispatchRunnable(Lifecycle.Event.ON_START); }
  
  public void onServicePreSuperOnCreate() { postDispatchRunnable(Lifecycle.Event.ON_CREATE); }
  
  public void onServicePreSuperOnDestroy() {
    postDispatchRunnable(Lifecycle.Event.ON_STOP);
    postDispatchRunnable(Lifecycle.Event.ON_DESTROY);
  }
  
  public void onServicePreSuperOnStart() { postDispatchRunnable(Lifecycle.Event.ON_START); }
}
