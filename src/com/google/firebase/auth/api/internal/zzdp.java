package com.google.firebase.auth.api.internal;

import android.os.RemoteException;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.logging.Logger;
import com.google.android.gms.internal.firebase_auth.zzcg;
import com.google.android.gms.internal.firebase_auth.zzcj;
import com.google.android.gms.internal.firebase_auth.zzct;
import com.google.android.gms.internal.firebase_auth.zzcz;
import com.google.android.gms.internal.firebase_auth.zzdg;

public final class zzdp {
  private final Logger zzgg;
  
  private final zzdx zzmg;
  
  public zzdp(@NonNull zzdx paramzzdx, @NonNull Logger paramLogger) {
    this.zzmg = (zzdx)Preconditions.checkNotNull(paramzzdx);
    this.zzgg = (Logger)Preconditions.checkNotNull(paramLogger);
  }
  
  public final void onFailure(@NonNull Status paramStatus) {
    try {
      this.zzmg.onFailure(paramStatus);
      return;
    } catch (RemoteException paramStatus) {
      this.zzgg.e("RemoteException when sending failure result.", paramStatus, new Object[0]);
      return;
    } 
  }
  
  public final void zza(@NonNull zzcg paramzzcg) {
    try {
      this.zzmg.zza(paramzzcg);
      return;
    } catch (RemoteException paramzzcg) {
      this.zzgg.e("RemoteException when sending failure result with credential", paramzzcg, new Object[0]);
      return;
    } 
  }
  
  public final void zza(@NonNull zzcj paramzzcj) {
    try {
      this.zzmg.zza(paramzzcj);
      return;
    } catch (RemoteException paramzzcj) {
      this.zzgg.e("RemoteException when sending create auth uri response.", paramzzcj, new Object[0]);
      return;
    } 
  }
  
  public final void zza(@NonNull zzcz paramzzcz, @NonNull zzct paramzzct) {
    try {
      this.zzmg.zza(paramzzcz, paramzzct);
      return;
    } catch (RemoteException paramzzcz) {
      this.zzgg.e("RemoteException when sending get token and account info user response", paramzzcz, new Object[0]);
      return;
    } 
  }
  
  public final void zza(@Nullable zzdg paramzzdg) {
    try {
      this.zzmg.zza(paramzzdg);
      return;
    } catch (RemoteException paramzzdg) {
      this.zzgg.e("RemoteException when sending password reset response.", paramzzdg, new Object[0]);
      return;
    } 
  }
  
  public final void zzb(@NonNull zzcz paramzzcz) {
    try {
      this.zzmg.zzb(paramzzcz);
      return;
    } catch (RemoteException paramzzcz) {
      this.zzgg.e("RemoteException when sending token result.", paramzzcz, new Object[0]);
      return;
    } 
  }
  
  public final void zzbs(@NonNull String paramString) {
    try {
      this.zzmg.zzbs(paramString);
      return;
    } catch (RemoteException paramString) {
      this.zzgg.e("RemoteException when sending set account info response.", paramString, new Object[0]);
      return;
    } 
  }
  
  public final void zzde() {
    try {
      this.zzmg.zzde();
      return;
    } catch (RemoteException remoteException) {
      this.zzgg.e("RemoteException when sending delete account response.", remoteException, new Object[0]);
      return;
    } 
  }
  
  public final void zzdf() {
    try {
      this.zzmg.zzdf();
      return;
    } catch (RemoteException remoteException) {
      this.zzgg.e("RemoteException when sending email verification response.", remoteException, new Object[0]);
      return;
    } 
  }
  
  public final void zzdg() {
    try {
      this.zzmg.zzdg();
      return;
    } catch (RemoteException remoteException) {
      this.zzgg.e("RemoteException when setting FirebaseUI Version", remoteException, new Object[0]);
      return;
    } 
  }
}
