package android.support.v4.media;

import android.content.ComponentName;
import android.content.ContentResolver;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.provider.Settings;
import android.support.annotation.NonNull;
import android.util.Log;

class MediaSessionManagerImplBase implements MediaSessionManager.MediaSessionManagerImpl {
  private static final boolean DEBUG = MediaSessionManager.DEBUG;
  
  private static final String ENABLED_NOTIFICATION_LISTENERS = "enabled_notification_listeners";
  
  private static final String PERMISSION_MEDIA_CONTENT_CONTROL = "android.permission.MEDIA_CONTENT_CONTROL";
  
  private static final String PERMISSION_STATUS_BAR_SERVICE = "android.permission.STATUS_BAR_SERVICE";
  
  private static final String TAG = "MediaSessionManager";
  
  ContentResolver mContentResolver;
  
  Context mContext;
  
  MediaSessionManagerImplBase(Context paramContext) {
    this.mContext = paramContext;
    this.mContentResolver = this.mContext.getContentResolver();
  }
  
  private boolean isPermissionGranted(MediaSessionManager.RemoteUserInfoImpl paramRemoteUserInfoImpl, String paramString) { return (paramRemoteUserInfoImpl.getPid() < 0) ? ((this.mContext.getPackageManager().checkPermission(paramString, paramRemoteUserInfoImpl.getPackageName()) == 0)) : ((this.mContext.checkPermission(paramString, paramRemoteUserInfoImpl.getPid(), paramRemoteUserInfoImpl.getUid()) == 0)); }
  
  public Context getContext() { return this.mContext; }
  
  boolean isEnabledNotificationListener(@NonNull MediaSessionManager.RemoteUserInfoImpl paramRemoteUserInfoImpl) {
    String str = Settings.Secure.getString(this.mContentResolver, "enabled_notification_listeners");
    if (str != null) {
      String[] arrayOfString = str.split(":");
      for (byte b = 0; b < arrayOfString.length; b++) {
        ComponentName componentName = ComponentName.unflattenFromString(arrayOfString[b]);
        if (componentName != null && componentName.getPackageName().equals(paramRemoteUserInfoImpl.getPackageName()))
          return true; 
      } 
    } 
    return false;
  }
  
  public boolean isTrustedForMediaControl(@NonNull MediaSessionManager.RemoteUserInfoImpl paramRemoteUserInfoImpl) {
    boolean bool = false;
    try {
      ApplicationInfo applicationInfo = this.mContext.getPackageManager().getApplicationInfo(paramRemoteUserInfoImpl.getPackageName(), 0);
      if (applicationInfo.uid != paramRemoteUserInfoImpl.getUid()) {
        if (DEBUG) {
          StringBuilder stringBuilder = new StringBuilder();
          stringBuilder.append("Package name ");
          stringBuilder.append(paramRemoteUserInfoImpl.getPackageName());
          stringBuilder.append(" doesn't match with the uid ");
          stringBuilder.append(paramRemoteUserInfoImpl.getUid());
          Log.d("MediaSessionManager", stringBuilder.toString());
        } 
        return false;
      } 
      if (isPermissionGranted(paramRemoteUserInfoImpl, "android.permission.STATUS_BAR_SERVICE") || isPermissionGranted(paramRemoteUserInfoImpl, "android.permission.MEDIA_CONTENT_CONTROL") || paramRemoteUserInfoImpl.getUid() == 1000 || isEnabledNotificationListener(paramRemoteUserInfoImpl))
        bool = true; 
      return bool;
    } catch (android.content.pm.PackageManager.NameNotFoundException nameNotFoundException) {
      if (DEBUG) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Package ");
        stringBuilder.append(paramRemoteUserInfoImpl.getPackageName());
        stringBuilder.append(" doesn't exist");
        Log.d("MediaSessionManager", stringBuilder.toString());
      } 
      return false;
    } 
  }
}
