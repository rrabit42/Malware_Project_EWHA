package com.google.android.gms.common.util;

import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.ShowFirstParty;

@KeepForSdk
@ShowFirstParty
public class Hex {
  private static final char[] zzgx = { 
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
      'A', 'B', 'C', 'D', 'E', 'F' };
  
  private static final char[] zzgy = { 
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
      'a', 'b', 'c', 'd', 'e', 'f' };
  
  @KeepForSdk
  public static String bytesToStringLowercase(byte[] paramArrayOfByte) {
    char[] arrayOfChar = new char[paramArrayOfByte.length << 1];
    byte b = 0;
    boolean bool = false;
    while (b < paramArrayOfByte.length) {
      byte b1 = paramArrayOfByte[b] & 0xFF;
      boolean bool1 = bool + true;
      char[] arrayOfChar1 = zzgy;
      arrayOfChar[bool] = arrayOfChar1[b1 >>> 4];
      bool = bool1 + true;
      arrayOfChar[bool1] = arrayOfChar1[b1 & 0xF];
      b++;
    } 
    return new String(arrayOfChar);
  }
  
  @KeepForSdk
  public static String bytesToStringUppercase(byte[] paramArrayOfByte) { return bytesToStringUppercase(paramArrayOfByte, false); }
  
  @KeepForSdk
  public static String bytesToStringUppercase(byte[] paramArrayOfByte, boolean paramBoolean) {
    int i = paramArrayOfByte.length;
    StringBuilder stringBuilder = new StringBuilder(i << 1);
    for (byte b = 0; b < i && (!paramBoolean || b != i - 1 || (paramArrayOfByte[b] & 0xFF) != 0); b++) {
      stringBuilder.append(zzgx[(paramArrayOfByte[b] & 0xF0) >>> 4]);
      stringBuilder.append(zzgx[paramArrayOfByte[b] & 0xF]);
    } 
    return stringBuilder.toString();
  }
  
  @KeepForSdk
  public static byte[] stringToBytes(String paramString) throws IllegalArgumentException {
    int i = paramString.length();
    if (i % 2 == 0) {
      byte[] arrayOfByte = new byte[i / 2];
      for (byte b = 0; b < i; b = b1) {
        byte b2 = b / 2;
        byte b1 = b + 2;
        arrayOfByte[b2] = (byte)Integer.parseInt(paramString.substring(b, b1), 16);
      } 
      return arrayOfByte;
    } 
    IllegalArgumentException illegalArgumentException = new IllegalArgumentException("Hex string has odd number of characters");
    throw illegalArgumentException;
  }
}
