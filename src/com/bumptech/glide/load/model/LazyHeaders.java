package com.bumptech.glide.load.model;

import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public final class LazyHeaders implements Headers {
  private final Map<String, List<LazyHeaderFactory>> headers;
  
  LazyHeaders(Map<String, List<LazyHeaderFactory>> paramMap) { this.headers = Collections.unmodifiableMap(paramMap); }
  
  private Map<String, String> generateHeaders() {
    HashMap hashMap = new HashMap();
    for (Map.Entry entry : this.headers.entrySet()) {
      StringBuilder stringBuilder = new StringBuilder();
      List list = (List)entry.getValue();
      for (byte b = 0; b < list.size(); b++) {
        stringBuilder.append(((LazyHeaderFactory)list.get(b)).buildHeader());
        if (b != list.size() - 1)
          stringBuilder.append(','); 
      } 
      hashMap.put(entry.getKey(), stringBuilder.toString());
    } 
    return hashMap;
  }
  
  public boolean equals(Object paramObject) {
    if (paramObject instanceof LazyHeaders) {
      paramObject = (LazyHeaders)paramObject;
      return this.headers.equals(paramObject.headers);
    } 
    return false;
  }
  
  public Map<String, String> getHeaders() { // Byte code:
    //   0: aload_0
    //   1: getfield combinedHeaders : Ljava/util/Map;
    //   4: ifnonnull -> 37
    //   7: aload_0
    //   8: monitorenter
    //   9: aload_0
    //   10: getfield combinedHeaders : Ljava/util/Map;
    //   13: ifnonnull -> 27
    //   16: aload_0
    //   17: aload_0
    //   18: invokespecial generateHeaders : ()Ljava/util/Map;
    //   21: invokestatic unmodifiableMap : (Ljava/util/Map;)Ljava/util/Map;
    //   24: putfield combinedHeaders : Ljava/util/Map;
    //   27: aload_0
    //   28: monitorexit
    //   29: goto -> 37
    //   32: astore_1
    //   33: aload_0
    //   34: monitorexit
    //   35: aload_1
    //   36: athrow
    //   37: aload_0
    //   38: getfield combinedHeaders : Ljava/util/Map;
    //   41: areturn
    // Exception table:
    //   from	to	target	type
    //   9	27	32	finally
    //   27	29	32	finally
    //   33	35	32	finally }
  
  public int hashCode() { return this.headers.hashCode(); }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("LazyHeaders{headers=");
    stringBuilder.append(this.headers);
    stringBuilder.append('}');
    return stringBuilder.toString();
  }
}
