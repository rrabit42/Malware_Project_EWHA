package com.google.android.gms.internal.ads;

import android.content.Context;
import android.os.RemoteException;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.doubleclick.PublisherAdRequest;
import com.google.android.gms.ads.reward.RewardedVideoAd;
import com.google.android.gms.ads.reward.RewardedVideoAdListener;
import com.google.android.gms.dynamic.ObjectWrapper;

@zzadh
public final class zzahm implements RewardedVideoAd {
  private final Context mContext;
  
  private final Object mLock = new Object();
  
  private String zzadr;
  
  private final zzagz zzclj;
  
  private final zzahj zzclk = new zzahj(null);
  
  public zzahm(Context paramContext, zzagz paramzzagz) {
    this.zzclj = paramzzagz;
    this.mContext = paramContext;
  }
  
  private final void zza(String paramString, zzlw paramzzlw) {
    synchronized (this.mLock) {
      if (this.zzclj == null)
        return; 
      try {
        this.zzclj.zza(new zzahk(zzjm.zza(this.mContext, paramzzlw), paramString));
      } catch (RemoteException paramString) {
        zzane.zzd("#007 Could not call remote method.", paramString);
      } 
      return;
    } 
  }
  
  public final void destroy() { destroy(null); }
  
  public final void destroy(Context paramContext) {
    synchronized (this.mLock) {
      this.zzclk.setRewardedVideoAdListener(null);
      if (this.zzclj == null)
        return; 
      try {
        this.zzclj.zzf(ObjectWrapper.wrap(paramContext));
      } catch (RemoteException paramContext) {
        zzane.zzd("#007 Could not call remote method.", paramContext);
      } 
      return;
    } 
  }
  
  public final String getMediationAdapterClassName() {
    try {
      if (this.zzclj != null)
        return this.zzclj.getMediationAdapterClassName(); 
    } catch (RemoteException remoteException) {
      zzane.zzd("#007 Could not call remote method.", remoteException);
    } 
    return null;
  }
  
  public final RewardedVideoAdListener getRewardedVideoAdListener() {
    synchronized (this.mLock) {
      return this.zzclk.getRewardedVideoAdListener();
    } 
  }
  
  public final String getUserId() {
    synchronized (this.mLock) {
      return this.zzadr;
    } 
  }
  
  public final boolean isLoaded() {
    synchronized (this.mLock) {
      if (this.zzclj == null)
        return false; 
      try {
        return this.zzclj.isLoaded();
      } catch (RemoteException remoteException) {
        zzane.zzd("#007 Could not call remote method.", remoteException);
        return false;
      } 
    } 
  }
  
  public final void loadAd(String paramString, AdRequest paramAdRequest) { zza(paramString, paramAdRequest.zzay()); }
  
  public final void loadAd(String paramString, PublisherAdRequest paramPublisherAdRequest) { zza(paramString, paramPublisherAdRequest.zzay()); }
  
  public final void pause() { pause(null); }
  
  public final void pause(Context paramContext) {
    synchronized (this.mLock) {
      if (this.zzclj == null)
        return; 
      try {
        this.zzclj.zzd(ObjectWrapper.wrap(paramContext));
      } catch (RemoteException paramContext) {
        zzane.zzd("#007 Could not call remote method.", paramContext);
      } 
      return;
    } 
  }
  
  public final void resume() { resume(null); }
  
  public final void resume(Context paramContext) {
    synchronized (this.mLock) {
      if (this.zzclj == null)
        return; 
      try {
        this.zzclj.zze(ObjectWrapper.wrap(paramContext));
      } catch (RemoteException paramContext) {
        zzane.zzd("#007 Could not call remote method.", paramContext);
      } 
      return;
    } 
  }
  
  public final void setImmersiveMode(boolean paramBoolean) {
    synchronized (this.mLock) {
      zzagz1 = this.zzclj;
      if (zzagz1 != null)
        try {
          this.zzclj.setImmersiveMode(paramBoolean);
        } catch (RemoteException zzagz1) {
          zzane.zzd("#007 Could not call remote method.", zzagz1);
        }  
      return;
    } 
  }
  
  public final void setRewardedVideoAdListener(RewardedVideoAdListener paramRewardedVideoAdListener) {
    synchronized (this.mLock) {
      this.zzclk.setRewardedVideoAdListener(paramRewardedVideoAdListener);
      zzagz1 = this.zzclj;
      if (zzagz1 != null)
        try {
          this.zzclj.zza(this.zzclk);
        } catch (RemoteException zzagz1) {
          zzane.zzd("#007 Could not call remote method.", zzagz1);
        }  
      return;
    } 
  }
  
  public final void setUserId(String paramString) {
    synchronized (this.mLock) {
      this.zzadr = paramString;
      zzagz zzagz1 = this.zzclj;
      if (zzagz1 != null)
        try {
          this.zzclj.setUserId(paramString);
        } catch (RemoteException paramString) {
          zzane.zzd("#007 Could not call remote method.", paramString);
        }  
      return;
    } 
  }
  
  public final void show() {
    synchronized (this.mLock) {
      if (this.zzclj == null)
        return; 
      try {
        this.zzclj.show();
      } catch (RemoteException remoteException) {
        zzane.zzd("#007 Could not call remote method.", remoteException);
      } 
      return;
    } 
  }
}
