package com.google.android.gms.internal.ads;

import android.content.Context;
import android.location.Location;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.text.TextUtils;
import com.google.android.gms.ads.identifier.AdvertisingIdClient;
import com.google.android.gms.ads.internal.zzbv;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.annotation.concurrent.GuardedBy;
import org.json.JSONException;
import org.json.JSONObject;

@zzadh
public final class zzafn extends zzaeo {
  private static final Object sLock = new Object();
  
  @GuardedBy("sLock")
  private static zzafn zzchh;
  
  private final Context mContext;
  
  private final zzafm zzchi;
  
  private final ScheduledExecutorService zzchj = Executors.newSingleThreadScheduledExecutor();
  
  private zzafn(Context paramContext, zzafm paramzzafm) {
    this.mContext = paramContext;
    this.zzchi = paramzzafm;
  }
  
  private static zzaej zza(Context paramContext, zzafm paramzzafm, zzaef paramzzaef, ScheduledExecutorService paramScheduledExecutorService) {
    boolean bool;
    zzakb.zzck("Starting ad request from service using: google.afma.request.getAdDictionary");
    zzna zzna2 = zznk.zzawh;
    zznx zznx = new zznx(((Boolean)zzkb.zzik().zzd(zzna2)).booleanValue(), "load_ad", paramzzaef.zzacv.zzarb);
    if (paramzzaef.versionCode > 10 && paramzzaef.zzcdl != -1L)
      zznx.zza(zznx.zzd(paramzzaef.zzcdl), new String[] { "cts" }); 
    zznv zznv = zznx.zzjj();
    zzanz zzanz3 = paramzzafm.zzche.zzk(paramContext);
    zzna zzna3 = zznk.zzbdf;
    zzanz zzanz8 = zzano.zza(zzanz3, ((Long)zzkb.zzik().zzd(zzna3)).longValue(), TimeUnit.MILLISECONDS, paramScheduledExecutorService);
    zzanz3 = paramzzafm.zzchd.zzr(paramContext);
    zzna3 = zznk.zzbah;
    zzanz zzanz9 = zzano.zza(zzanz3, ((Long)zzkb.zzik().zzd(zzna3)).longValue(), TimeUnit.MILLISECONDS, paramScheduledExecutorService);
    zzanz zzanz6 = paramzzafm.zzcgy.zzcl(paramzzaef.zzccw.packageName);
    zzanz zzanz5 = paramzzafm.zzcgy.zzcm(paramzzaef.zzccw.packageName);
    zzanz zzanz7 = paramzzafm.zzchf.zza(paramzzaef.zzccx, paramzzaef.zzccw);
    Future future = zzbv.zzev().zzq(paramContext);
    zzany zzany = zzano.zzi(null);
    Bundle bundle1 = paramzzaef.zzccv.extras;
    if (bundle1 != null && bundle1.getString("_ad") != null) {
      bool = true;
    } else {
      bool = false;
    } 
    zzanz zzanz2 = zzany;
    if (paramzzaef.zzcdr) {
      zzanz2 = zzany;
      if (!bool)
        zzanz2 = paramzzafm.zzchb.zza(paramzzaef.applicationInfo); 
    } 
    str1 = zznk.zzbco;
    zzanz zzanz10 = zzano.zza(zzanz2, ((Long)zzkb.zzik().zzd(str1)).longValue(), TimeUnit.MILLISECONDS, paramScheduledExecutorService);
    zzanz zzanz4 = zzano.zzi(null);
    zzna zzna1 = zznk.zzayj;
    if (((Boolean)zzkb.zzik().zzd(zzna1)).booleanValue()) {
      zzanz zzanz = paramzzafm.zzchf.zzae(paramContext);
      str1 = zznk.zzayk;
      zzanz4 = zzano.zza(zzanz, ((Long)zzkb.zzik().zzd(str1)).longValue(), TimeUnit.MILLISECONDS, paramScheduledExecutorService);
    } 
    if (paramzzaef.versionCode >= 4 && paramzzaef.zzcdc != null) {
      Bundle bundle = paramzzaef.zzcdc;
    } else {
      zzna1 = null;
    } 
    str1 = zznk.zzawx;
    ((Boolean)zzkb.zzik().zzd(str1)).booleanValue();
    if (zzbv.zzek().zzl(paramContext, "android.permission.ACCESS_NETWORK_STATE") && ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo() == null)
      zzakb.zzck("Device is offline."); 
    if (paramzzaef.versionCode >= 7) {
      String str = paramzzaef.zzcdi;
    } else {
      str1 = UUID.randomUUID().toString();
    } 
    new zzaft(paramContext, str1, paramzzaef.applicationInfo.packageName);
    if (paramzzaef.zzccv.extras != null) {
      String str = paramzzaef.zzccv.extras.getString("_ad");
      if (str != null)
        return zzafs.zza(paramContext, paramzzaef, str); 
    } 
    List list = paramzzafm.zzcgz.zzf(paramzzaef.zzcdj);
    zzna zzna4 = zznk.zzbdf;
    Bundle bundle2 = (Bundle)zzano.zza(zzanz8, null, ((Long)zzkb.zzik().zzd(zzna4)).longValue(), TimeUnit.MILLISECONDS);
    zzagk zzagk = (zzagk)zzano.zza(zzanz9, null);
    Location location = (Location)zzano.zza(zzanz10, null);
    AdvertisingIdClient.Info info = (AdvertisingIdClient.Info)zzano.zza(zzanz4, null);
    String str4 = (String)zzano.zza(zzanz7, null);
    String str2 = (String)zzano.zza(zzanz6, null);
    String str3 = (String)zzano.zza(zzanz5, null);
    zzaga zzaga = (zzaga)zzano.zza(future, null);
    if (zzaga == null) {
      zzakb.zzdk("Error fetching device info. This is not recoverable.");
      return new zzaej(0);
    } 
    zzafl zzafl = new zzafl();
    zzafl.zzcgs = paramzzaef;
    zzafl.zzcgt = zzaga;
    zzafl.zzcgo = zzagk;
    zzafl.zzaqe = location;
    zzafl.zzcgn = bundle2;
    zzafl.zzccx = str4;
    zzafl.zzcgr = info;
    if (list == null)
      zzafl.zzcdj.clear(); 
    zzafl.zzcdj = list;
    zzafl.zzcdc = zzna1;
    zzafl.zzcgp = str2;
    zzafl.zzcgq = str3;
    zzafl.zzcgu = paramzzafm.zzcgx.zze(paramContext);
    zzafl.zzcgv = paramzzafm.zzcgv;
    JSONObject jSONObject = zzafs.zza(paramContext, zzafl);
    if (jSONObject == null)
      return new zzaej(0); 
    if (paramzzaef.versionCode < 7)
      try {
        jSONObject.put("request_id", str1);
      } catch (JSONException str1) {} 
    zznx.zza(zznv, new String[] { "arc" });
    zznx.zzjj();
    zzaej zzaej2 = zzano.zza(zzano.zza(paramzzafm.zzchg.zzof().zzf(jSONObject), zzafo.zzxn, paramScheduledExecutorService), 10L, TimeUnit.SECONDS, paramScheduledExecutorService);
    zzanz zzanz1 = paramzzafm.zzcha.zzop();
    if (zzanz1 != null)
      zzanm.zza(zzanz1, "AdRequestServiceImpl.loadAd.flags"); 
    zzafz zzafz = (zzafz)zzano.zza(zzaej2, null);
    if (zzafz == null)
      return new zzaej(0); 
    if (zzafz.getErrorCode() != -2)
      return new zzaej(zzafz.getErrorCode()); 
    zznx.zzjm();
    if (!TextUtils.isEmpty(zzafz.zzom())) {
      zzaej zzaej = zzafs.zza(paramContext, paramzzaef, zzafz.zzom());
    } else {
      zzanz1 = null;
    } 
    zzaej2 = zzanz1;
    if (zzanz1 == null) {
      zzaej2 = zzanz1;
      if (!TextUtils.isEmpty(zzafz.getUrl()))
        zzaej2 = zza(paramzzaef, paramContext, paramzzaef.zzacr.zzcw, zzafz.getUrl(), str2, str3, zzafz, zznx, paramzzafm); 
    } 
    zzaej zzaej1 = zzaej2;
    if (zzaej2 == null)
      zzaej1 = new zzaej(0); 
    zznx.zza(zznv, new String[] { "tts" });
    zzaej1.zzcfd = zznx.zzjk();
    return zzaej1;
  }
  
  public static zzaej zza(zzaef paramzzaef, Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, zzafz paramzzafz, zznx paramzznx, zzafm paramzzafm) { // Byte code:
    //   0: aload #7
    //   2: ifnull -> 15
    //   5: aload #7
    //   7: invokevirtual zzjj : ()Lcom/google/android/gms/internal/ads/zznv;
    //   10: astore #13
    //   12: goto -> 18
    //   15: aconst_null
    //   16: astore #13
    //   18: new com/google/android/gms/internal/ads/zzafx
    //   21: dup
    //   22: aload_0
    //   23: aload #6
    //   25: invokevirtual zzoi : ()Ljava/lang/String;
    //   28: invokespecial <init> : (Lcom/google/android/gms/internal/ads/zzaef;Ljava/lang/String;)V
    //   31: astore #18
    //   33: aload_3
    //   34: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37: astore #14
    //   39: aload #14
    //   41: invokevirtual length : ()I
    //   44: ifeq -> 60
    //   47: ldc_w 'AdRequestServiceImpl: Sending request: '
    //   50: aload #14
    //   52: invokevirtual concat : (Ljava/lang/String;)Ljava/lang/String;
    //   55: astore #14
    //   57: goto -> 72
    //   60: new java/lang/String
    //   63: dup
    //   64: ldc_w 'AdRequestServiceImpl: Sending request: '
    //   67: invokespecial <init> : (Ljava/lang/String;)V
    //   70: astore #14
    //   72: aload #14
    //   74: invokestatic zzck : (Ljava/lang/String;)V
    //   77: new java/net/URL
    //   80: dup
    //   81: aload_3
    //   82: invokespecial <init> : (Ljava/lang/String;)V
    //   85: astore_3
    //   86: invokestatic zzer : ()Lcom/google/android/gms/common/util/Clock;
    //   89: invokeinterface elapsedRealtime : ()J
    //   94: lstore #11
    //   96: iconst_0
    //   97: istore #9
    //   99: aload_0
    //   100: astore #15
    //   102: aload #8
    //   104: ifnull -> 117
    //   107: aload #8
    //   109: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   112: invokeinterface zzoq : ()V
    //   117: aload_3
    //   118: invokevirtual openConnection : ()Ljava/net/URLConnection;
    //   121: checkcast java/net/HttpURLConnection
    //   124: astore #17
    //   126: invokestatic zzek : ()Lcom/google/android/gms/internal/ads/zzakk;
    //   129: aload_1
    //   130: aload_2
    //   131: iconst_0
    //   132: aload #17
    //   134: invokevirtual zza : (Landroid/content/Context;Ljava/lang/String;ZLjava/net/HttpURLConnection;)V
    //   137: aload #6
    //   139: invokevirtual zzok : ()Z
    //   142: ifeq -> 812
    //   145: aload #4
    //   147: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   150: ifne -> 809
    //   153: aload #17
    //   155: ldc_w 'x-afma-drt-cookie'
    //   158: aload #4
    //   160: invokevirtual addRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   163: goto -> 166
    //   166: aload #5
    //   168: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   171: ifne -> 812
    //   174: aload #17
    //   176: ldc_w 'x-afma-drt-v2-cookie'
    //   179: aload #5
    //   181: invokevirtual addRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   184: goto -> 187
    //   187: aload #15
    //   189: getfield zzcds : Ljava/lang/String;
    //   192: astore #14
    //   194: aload #14
    //   196: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   199: ifne -> 218
    //   202: ldc_w 'Sending webview cookie in ad request header.'
    //   205: invokestatic zzck : (Ljava/lang/String;)V
    //   208: aload #17
    //   210: ldc_w 'Cookie'
    //   213: aload #14
    //   215: invokevirtual addRequestProperty : (Ljava/lang/String;Ljava/lang/String;)V
    //   218: aload #6
    //   220: ifnull -> 828
    //   223: aload #6
    //   225: invokevirtual zzoj : ()Ljava/lang/String;
    //   228: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   231: ifne -> 828
    //   234: aload #17
    //   236: iconst_1
    //   237: invokevirtual setDoOutput : (Z)V
    //   240: aload #6
    //   242: invokevirtual zzoj : ()Ljava/lang/String;
    //   245: invokevirtual getBytes : ()[B
    //   248: astore #16
    //   250: aload #17
    //   252: aload #16
    //   254: arraylength
    //   255: invokevirtual setFixedLengthStreamingMode : (I)V
    //   258: new java/io/BufferedOutputStream
    //   261: dup
    //   262: aload #17
    //   264: invokevirtual getOutputStream : ()Ljava/io/OutputStream;
    //   267: invokespecial <init> : (Ljava/io/OutputStream;)V
    //   270: astore #14
    //   272: aload #14
    //   274: aload #16
    //   276: invokevirtual write : ([B)V
    //   279: aload #14
    //   281: invokestatic closeQuietly : (Ljava/io/Closeable;)V
    //   284: aload #16
    //   286: astore #14
    //   288: goto -> 297
    //   291: aload_1
    //   292: invokestatic closeQuietly : (Ljava/io/Closeable;)V
    //   295: aload_0
    //   296: athrow
    //   297: new com/google/android/gms/internal/ads/zzamy
    //   300: dup
    //   301: aload #15
    //   303: getfield zzcdi : Ljava/lang/String;
    //   306: invokespecial <init> : (Ljava/lang/String;)V
    //   309: astore #15
    //   311: aload #15
    //   313: aload #17
    //   315: aload #14
    //   317: invokevirtual zza : (Ljava/net/HttpURLConnection;[B)V
    //   320: aload #17
    //   322: invokevirtual getResponseCode : ()I
    //   325: istore #10
    //   327: aload #17
    //   329: invokevirtual getHeaderFields : ()Ljava/util/Map;
    //   332: astore #14
    //   334: aload #15
    //   336: aload #17
    //   338: iload #10
    //   340: invokevirtual zza : (Ljava/net/HttpURLConnection;I)V
    //   343: iload #10
    //   345: sipush #200
    //   348: if_icmplt -> 485
    //   351: iload #10
    //   353: sipush #300
    //   356: if_icmpge -> 485
    //   359: aload_3
    //   360: invokevirtual toString : ()Ljava/lang/String;
    //   363: astore_1
    //   364: new java/io/InputStreamReader
    //   367: dup
    //   368: aload #17
    //   370: invokevirtual getInputStream : ()Ljava/io/InputStream;
    //   373: invokespecial <init> : (Ljava/io/InputStream;)V
    //   376: astore_0
    //   377: invokestatic zzek : ()Lcom/google/android/gms/internal/ads/zzakk;
    //   380: pop
    //   381: aload_0
    //   382: invokestatic zza : (Ljava/io/InputStreamReader;)Ljava/lang/String;
    //   385: astore_2
    //   386: aload_0
    //   387: invokestatic closeQuietly : (Ljava/io/Closeable;)V
    //   390: aload #15
    //   392: aload_2
    //   393: invokevirtual zzdg : (Ljava/lang/String;)V
    //   396: aload_1
    //   397: aload #14
    //   399: aload_2
    //   400: iload #10
    //   402: invokestatic zza : (Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;I)V
    //   405: aload #18
    //   407: aload_1
    //   408: aload #14
    //   410: aload_2
    //   411: invokevirtual zza : (Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
    //   414: aload #7
    //   416: ifnull -> 437
    //   419: aload #7
    //   421: aload #13
    //   423: iconst_1
    //   424: anewarray java/lang/String
    //   427: dup
    //   428: iconst_0
    //   429: ldc_w 'ufe'
    //   432: aastore
    //   433: invokevirtual zza : (Lcom/google/android/gms/internal/ads/zznv;[Ljava/lang/String;)Z
    //   436: pop
    //   437: aload #18
    //   439: lload #11
    //   441: aload #6
    //   443: invokevirtual zzon : ()Z
    //   446: invokevirtual zza : (JZ)Lcom/google/android/gms/internal/ads/zzaej;
    //   449: astore_0
    //   450: aload #17
    //   452: invokevirtual disconnect : ()V
    //   455: aload #8
    //   457: ifnull -> 470
    //   460: aload #8
    //   462: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   465: invokeinterface zzor : ()V
    //   470: aload_0
    //   471: areturn
    //   472: astore_1
    //   473: goto -> 479
    //   476: astore_1
    //   477: aconst_null
    //   478: astore_0
    //   479: aload_0
    //   480: invokestatic closeQuietly : (Ljava/io/Closeable;)V
    //   483: aload_1
    //   484: athrow
    //   485: aload_3
    //   486: invokevirtual toString : ()Ljava/lang/String;
    //   489: aload #14
    //   491: aconst_null
    //   492: iload #10
    //   494: invokestatic zza : (Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;I)V
    //   497: iload #10
    //   499: sipush #300
    //   502: if_icmplt -> 672
    //   505: iload #10
    //   507: sipush #400
    //   510: if_icmpge -> 672
    //   513: aload #17
    //   515: ldc_w 'Location'
    //   518: invokevirtual getHeaderField : (Ljava/lang/String;)Ljava/lang/String;
    //   521: astore_3
    //   522: aload_3
    //   523: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   526: ifeq -> 566
    //   529: ldc_w 'No location header to follow redirect.'
    //   532: invokestatic zzdk : (Ljava/lang/String;)V
    //   535: new com/google/android/gms/internal/ads/zzaej
    //   538: dup
    //   539: iconst_0
    //   540: invokespecial <init> : (I)V
    //   543: astore_0
    //   544: aload #17
    //   546: invokevirtual disconnect : ()V
    //   549: aload #8
    //   551: ifnull -> 564
    //   554: aload #8
    //   556: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   559: invokeinterface zzor : ()V
    //   564: aload_0
    //   565: areturn
    //   566: new java/net/URL
    //   569: dup
    //   570: aload_3
    //   571: invokespecial <init> : (Ljava/lang/String;)V
    //   574: astore_3
    //   575: iload #9
    //   577: iconst_1
    //   578: iadd
    //   579: istore #9
    //   581: getstatic com/google/android/gms/internal/ads/zznk.zzbes : Lcom/google/android/gms/internal/ads/zzna;
    //   584: astore #15
    //   586: iload #9
    //   588: invokestatic zzik : ()Lcom/google/android/gms/internal/ads/zzni;
    //   591: aload #15
    //   593: invokevirtual zzd : (Lcom/google/android/gms/internal/ads/zzna;)Ljava/lang/Object;
    //   596: checkcast java/lang/Integer
    //   599: invokevirtual intValue : ()I
    //   602: if_icmple -> 642
    //   605: ldc_w 'Too many redirects.'
    //   608: invokestatic zzdk : (Ljava/lang/String;)V
    //   611: new com/google/android/gms/internal/ads/zzaej
    //   614: dup
    //   615: iconst_0
    //   616: invokespecial <init> : (I)V
    //   619: astore_0
    //   620: aload #17
    //   622: invokevirtual disconnect : ()V
    //   625: aload #8
    //   627: ifnull -> 640
    //   630: aload #8
    //   632: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   635: invokeinterface zzor : ()V
    //   640: aload_0
    //   641: areturn
    //   642: aload #18
    //   644: aload #14
    //   646: invokevirtual zzl : (Ljava/util/Map;)V
    //   649: aload #17
    //   651: invokevirtual disconnect : ()V
    //   654: aload #8
    //   656: ifnull -> 669
    //   659: aload #8
    //   661: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   664: invokeinterface zzor : ()V
    //   669: goto -> 99
    //   672: new java/lang/StringBuilder
    //   675: dup
    //   676: bipush #46
    //   678: invokespecial <init> : (I)V
    //   681: astore_0
    //   682: aload_0
    //   683: ldc_w 'Received error HTTP response code: '
    //   686: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   689: pop
    //   690: aload_0
    //   691: iload #10
    //   693: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   696: pop
    //   697: aload_0
    //   698: invokevirtual toString : ()Ljava/lang/String;
    //   701: invokestatic zzdk : (Ljava/lang/String;)V
    //   704: new com/google/android/gms/internal/ads/zzaej
    //   707: dup
    //   708: iconst_0
    //   709: invokespecial <init> : (I)V
    //   712: astore_0
    //   713: aload #17
    //   715: invokevirtual disconnect : ()V
    //   718: aload #8
    //   720: ifnull -> 834
    //   723: aload #8
    //   725: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   728: invokeinterface zzor : ()V
    //   733: aload_0
    //   734: areturn
    //   735: astore_0
    //   736: aload #17
    //   738: invokevirtual disconnect : ()V
    //   741: aload #8
    //   743: ifnull -> 756
    //   746: aload #8
    //   748: getfield zzchc : Lcom/google/android/gms/internal/ads/zzagi;
    //   751: invokeinterface zzor : ()V
    //   756: aload_0
    //   757: athrow
    //   758: astore_0
    //   759: aload_0
    //   760: invokevirtual getMessage : ()Ljava/lang/String;
    //   763: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   766: astore_0
    //   767: aload_0
    //   768: invokevirtual length : ()I
    //   771: ifeq -> 785
    //   774: ldc_w 'Error while connecting to ad server: '
    //   777: aload_0
    //   778: invokevirtual concat : (Ljava/lang/String;)Ljava/lang/String;
    //   781: astore_0
    //   782: goto -> 796
    //   785: new java/lang/String
    //   788: dup
    //   789: ldc_w 'Error while connecting to ad server: '
    //   792: invokespecial <init> : (Ljava/lang/String;)V
    //   795: astore_0
    //   796: aload_0
    //   797: invokestatic zzdk : (Ljava/lang/String;)V
    //   800: new com/google/android/gms/internal/ads/zzaej
    //   803: dup
    //   804: iconst_2
    //   805: invokespecial <init> : (I)V
    //   808: areturn
    //   809: goto -> 166
    //   812: goto -> 187
    //   815: astore_0
    //   816: aload #14
    //   818: astore_1
    //   819: goto -> 291
    //   822: astore_0
    //   823: aconst_null
    //   824: astore_1
    //   825: goto -> 291
    //   828: aconst_null
    //   829: astore #14
    //   831: goto -> 297
    //   834: aload_0
    //   835: areturn
    // Exception table:
    //   from	to	target	type
    //   18	57	758	java/io/IOException
    //   60	72	758	java/io/IOException
    //   72	96	758	java/io/IOException
    //   107	117	758	java/io/IOException
    //   117	126	758	java/io/IOException
    //   126	163	735	finally
    //   166	184	735	finally
    //   187	218	735	finally
    //   223	258	735	finally
    //   258	272	822	finally
    //   272	279	815	finally
    //   279	284	735	finally
    //   291	297	735	finally
    //   297	343	735	finally
    //   359	364	735	finally
    //   364	377	476	finally
    //   377	386	472	finally
    //   386	414	735	finally
    //   419	437	735	finally
    //   437	450	735	finally
    //   450	455	758	java/io/IOException
    //   460	470	758	java/io/IOException
    //   479	485	735	finally
    //   485	497	735	finally
    //   513	544	735	finally
    //   544	549	758	java/io/IOException
    //   554	564	758	java/io/IOException
    //   566	575	735	finally
    //   581	620	735	finally
    //   620	625	758	java/io/IOException
    //   630	640	758	java/io/IOException
    //   642	649	735	finally
    //   649	654	758	java/io/IOException
    //   659	669	758	java/io/IOException
    //   672	713	735	finally
    //   713	718	758	java/io/IOException
    //   723	733	758	java/io/IOException
    //   736	741	758	java/io/IOException
    //   746	756	758	java/io/IOException
    //   756	758	758	java/io/IOException }
  
  public static zzafn zza(Context paramContext, zzafm paramzzafm) {
    synchronized (sLock) {
      if (zzchh == null) {
        Context context = paramContext;
        if (paramContext.getApplicationContext() != null)
          context = paramContext.getApplicationContext(); 
        zznk.initialize(context);
        zzchh = new zzafn(context, paramzzafm);
        if (context.getApplicationContext() != null)
          zzbv.zzek().zzal(context); 
        zzajz.zzai(context);
      } 
      return zzchh;
    } 
  }
  
  private static void zza(String paramString1, Map<String, List<String>> paramMap, String paramString2, int paramInt) {
    if (zzakb.isLoggable(2)) {
      StringBuilder stringBuilder2 = new StringBuilder(String.valueOf(paramString1).length() + 39);
      stringBuilder2.append("Http Response: {\n  URL:\n    ");
      stringBuilder2.append(paramString1);
      stringBuilder2.append("\n  Headers:");
      zzakb.v(stringBuilder2.toString());
      if (paramMap != null) {
        Iterator iterator = paramMap.keySet().iterator();
        while (iterator.hasNext()) {
          StringBuilder stringBuilder = new StringBuilder((paramString1 = (String)iterator.next()).valueOf(paramString1).length() + 5);
          stringBuilder.append("    ");
          stringBuilder.append(paramString1);
          stringBuilder.append(":");
          zzakb.v(stringBuilder.toString());
          Iterator iterator1 = ((List)paramMap.get(paramString1)).iterator();
          while (iterator1.hasNext()) {
            paramString1 = String.valueOf((String)iterator1.next());
            if (paramString1.length() != 0) {
              paramString1 = "      ".concat(paramString1);
            } else {
              paramString1 = new String("      ");
            } 
            zzakb.v(paramString1);
          } 
        } 
      } 
      zzakb.v("  Body:");
      if (paramString2 != null) {
        char c;
        for (c = Character.MIN_VALUE; c < Math.min(paramString2.length(), 100000); c = c1) {
          int i = paramString2.length();
          char c1 = c + 'Ϩ';
          zzakb.v(paramString2.substring(c, Math.min(i, c1)));
        } 
      } else {
        zzakb.v("    null");
      } 
      StringBuilder stringBuilder1 = new StringBuilder(34);
      stringBuilder1.append("  Response Code:\n    ");
      stringBuilder1.append(paramInt);
      stringBuilder1.append("\n}");
      zzakb.v(stringBuilder1.toString());
    } 
  }
  
  public final void zza(zzaef paramzzaef, zzaeq paramzzaeq) {
    zzbv.zzeo().zzd(this.mContext, paramzzaef.zzacr);
    zzanz zzanz = zzaki.zzb(new zzafp(this, paramzzaef, paramzzaeq));
    zzbv.zzez().zzsa();
    zzbv.zzez().getHandler().postDelayed(new zzafq(this, zzanz), 60000L);
  }
  
  public final void zza(zzaey paramzzaey, zzaet paramzzaet) {
    zzakb.v("Nonagon code path entered in octagon");
    throw new IllegalArgumentException();
  }
  
  public final zzaej zzb(zzaef paramzzaef) { return zza(this.mContext, this.zzchi, paramzzaef, this.zzchj); }
  
  public final void zzb(zzaey paramzzaey, zzaet paramzzaet) {
    zzakb.v("Nonagon code path entered in octagon");
    throw new IllegalArgumentException();
  }
}
