package com.google.android.gms.internal.auth;

import android.accounts.Account;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.auth.AccountChangeEventsRequest;
import com.google.android.gms.auth.AccountChangeEventsResponse;

public final class zzg extends zza implements zze {
  zzg(IBinder paramIBinder) { super(paramIBinder, "com.google.android.auth.IAuthManagerService"); }
  
  public final Bundle zza(Account paramAccount) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    zzc.zza(parcel2, paramAccount);
    Parcel parcel1 = transactAndReadException(7, parcel2);
    Bundle bundle = (Bundle)zzc.zza(parcel1, Bundle.CREATOR);
    parcel1.recycle();
    return bundle;
  }
  
  public final Bundle zza(Account paramAccount, String paramString, Bundle paramBundle) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    zzc.zza(parcel2, paramAccount);
    parcel2.writeString(paramString);
    zzc.zza(parcel2, paramBundle);
    Parcel parcel1 = transactAndReadException(5, parcel2);
    Bundle bundle = (Bundle)zzc.zza(parcel1, Bundle.CREATOR);
    parcel1.recycle();
    return bundle;
  }
  
  public final Bundle zza(String paramString) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    parcel2.writeString(paramString);
    Parcel parcel1 = transactAndReadException(8, parcel2);
    Bundle bundle = (Bundle)zzc.zza(parcel1, Bundle.CREATOR);
    parcel1.recycle();
    return bundle;
  }
  
  public final Bundle zza(String paramString, Bundle paramBundle) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    parcel2.writeString(paramString);
    zzc.zza(parcel2, paramBundle);
    Parcel parcel1 = transactAndReadException(2, parcel2);
    paramBundle = (Bundle)zzc.zza(parcel1, Bundle.CREATOR);
    parcel1.recycle();
    return paramBundle;
  }
  
  public final AccountChangeEventsResponse zza(AccountChangeEventsRequest paramAccountChangeEventsRequest) throws RemoteException {
    Parcel parcel2 = obtainAndWriteInterfaceToken();
    zzc.zza(parcel2, paramAccountChangeEventsRequest);
    Parcel parcel1 = transactAndReadException(3, parcel2);
    AccountChangeEventsResponse accountChangeEventsResponse = (AccountChangeEventsResponse)zzc.zza(parcel1, AccountChangeEventsResponse.CREATOR);
    parcel1.recycle();
    return accountChangeEventsResponse;
  }
}
