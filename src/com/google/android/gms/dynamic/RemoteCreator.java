package com.google.android.gms.dynamic;

import android.content.Context;
import android.os.IBinder;
import com.google.android.gms.common.GooglePlayServicesUtilLight;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.Preconditions;

@KeepForSdk
public abstract class RemoteCreator<T> extends Object {
  private final String zzib;
  
  private T zzic;
  
  @KeepForSdk
  protected RemoteCreator(String paramString) { this.zzib = paramString; }
  
  @KeepForSdk
  protected abstract T getRemoteCreator(IBinder paramIBinder);
  
  @KeepForSdk
  protected final T getRemoteCreatorInstance(Context paramContext) throws RemoteCreatorException {
    if (this.zzic == null) {
      Preconditions.checkNotNull(paramContext);
      paramContext = GooglePlayServicesUtilLight.getRemoteContext(paramContext);
      if (paramContext != null) {
        classLoader = paramContext.getClassLoader();
        try {
          this.zzic = getRemoteCreator((IBinder)classLoader.loadClass(this.zzib).newInstance());
        } catch (ClassNotFoundException classLoader) {
          throw new RemoteCreatorException("Could not load creator class.", classLoader);
        } catch (InstantiationException classLoader) {
          throw new RemoteCreatorException("Could not instantiate creator.", classLoader);
        } catch (IllegalAccessException classLoader) {
          throw new RemoteCreatorException("Could not access creator.", classLoader);
        } 
      } else {
        throw new RemoteCreatorException("Could not get remote context.");
      } 
    } 
    return (T)this.zzic;
  }
}
