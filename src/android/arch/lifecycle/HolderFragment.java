package android.arch.lifecycle;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.RestrictTo;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class HolderFragment extends Fragment implements ViewModelStoreOwner {
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public static final String HOLDER_TAG = "android.arch.lifecycle.state.StateProviderHolderFragment";
  
  private static final String LOG_TAG = "ViewModelStores";
  
  private static final HolderFragmentManager sHolderFragmentManager = new HolderFragmentManager();
  
  private ViewModelStore mViewModelStore = new ViewModelStore();
  
  public HolderFragment() { setRetainInstance(true); }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public static HolderFragment holderFragmentFor(Fragment paramFragment) { return sHolderFragmentManager.holderFragmentFor(paramFragment); }
  
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  public static HolderFragment holderFragmentFor(FragmentActivity paramFragmentActivity) { return sHolderFragmentManager.holderFragmentFor(paramFragmentActivity); }
  
  @NonNull
  public ViewModelStore getViewModelStore() { return this.mViewModelStore; }
  
  public void onCreate(@Nullable Bundle paramBundle) {
    super.onCreate(paramBundle);
    sHolderFragmentManager.holderFragmentCreated(this);
  }
  
  public void onDestroy() {
    super.onDestroy();
    this.mViewModelStore.clear();
  }
  
  public void onSaveInstanceState(Bundle paramBundle) { super.onSaveInstanceState(paramBundle); }
}
