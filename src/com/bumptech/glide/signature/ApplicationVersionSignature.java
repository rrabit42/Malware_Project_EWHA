package com.bumptech.glide.signature;

import android.content.Context;
import android.content.pm.PackageManager;
import com.bumptech.glide.load.Key;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;

public final class ApplicationVersionSignature {
  private static final ConcurrentHashMap<String, Key> PACKAGE_NAME_TO_KEY = new ConcurrentHashMap();
  
  public static Key obtain(Context paramContext) {
    String str = paramContext.getPackageName();
    Key key2 = (Key)PACKAGE_NAME_TO_KEY.get(str);
    Key key1 = key2;
    if (key2 == null) {
      Key key = obtainVersionSignature(paramContext);
      key1 = (Key)PACKAGE_NAME_TO_KEY.putIfAbsent(str, key);
      if (key1 == null)
        return key; 
    } 
    return key1;
  }
  
  private static Key obtainVersionSignature(Context paramContext) {
    String str;
    try {
      str = paramContext.getPackageManager().getPackageInfo(paramContext.getPackageName(), 0);
    } catch (android.content.pm.PackageManager.NameNotFoundException paramContext) {
      paramContext.printStackTrace();
      paramContext = null;
    } 
    if (paramContext != null) {
      str = String.valueOf(paramContext.versionCode);
    } else {
      str = UUID.randomUUID().toString();
    } 
    return new StringSignature(str);
  }
  
  static void reset() { PACKAGE_NAME_TO_KEY.clear(); }
}
