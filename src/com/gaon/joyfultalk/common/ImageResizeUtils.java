package com.gaon.joyfultalk.common;

import android.graphics.Bitmap;
import android.graphics.Matrix;
import java.io.File;

public class ImageResizeUtils {
  public static int exifOrientationToDegrees(int paramInt) { return (paramInt == 6) ? 90 : ((paramInt == 3) ? 180 : ((paramInt == 8) ? 270 : 0)); }
  
  public static void resizeFile(File paramFile1, File paramFile2, int paramInt, Boolean paramBoolean) { // Byte code:
    //   0: aconst_null
    //   1: astore #11
    //   3: aconst_null
    //   4: astore #13
    //   6: aconst_null
    //   7: astore #12
    //   9: aconst_null
    //   10: astore #10
    //   12: new android/graphics/BitmapFactory$Options
    //   15: dup
    //   16: invokespecial <init> : ()V
    //   19: astore #9
    //   21: aload #9
    //   23: iconst_1
    //   24: putfield inPurgeable : Z
    //   27: aload #9
    //   29: iconst_1
    //   30: putfield inDither : Z
    //   33: aload_0
    //   34: invokevirtual getAbsolutePath : ()Ljava/lang/String;
    //   37: aload #9
    //   39: invokestatic decodeFile : (Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    //   42: astore #9
    //   44: aload_3
    //   45: invokevirtual booleanValue : ()Z
    //   48: istore #8
    //   50: iload #8
    //   52: ifeq -> 125
    //   55: new android/media/ExifInterface
    //   58: dup
    //   59: aload_0
    //   60: invokevirtual getAbsolutePath : ()Ljava/lang/String;
    //   63: invokespecial <init> : (Ljava/lang/String;)V
    //   66: ldc 'Orientation'
    //   68: iconst_1
    //   69: invokevirtual getAttributeInt : (Ljava/lang/String;I)I
    //   72: invokestatic exifOrientationToDegrees : (I)I
    //   75: istore #6
    //   77: new java/lang/StringBuilder
    //   80: dup
    //   81: invokespecial <init> : ()V
    //   84: astore_0
    //   85: aload_0
    //   86: ldc 'exifDegree : '
    //   88: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   91: pop
    //   92: aload_0
    //   93: iload #6
    //   95: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   98: pop
    //   99: ldc 'blackjin'
    //   101: aload_0
    //   102: invokevirtual toString : ()Ljava/lang/String;
    //   105: invokestatic d : (Ljava/lang/String;Ljava/lang/String;)I
    //   108: pop
    //   109: aload #9
    //   111: iload #6
    //   113: invokestatic rotate : (Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;
    //   116: astore_0
    //   117: goto -> 128
    //   120: astore_0
    //   121: aload_0
    //   122: invokevirtual printStackTrace : ()V
    //   125: aload #9
    //   127: astore_0
    //   128: aload_0
    //   129: ifnonnull -> 156
    //   132: aload #10
    //   134: astore_3
    //   135: aload #11
    //   137: astore #9
    //   139: ldc 'blackjin'
    //   141: ldc '파일 에러'
    //   143: invokestatic e : (Ljava/lang/String;Ljava/lang/String;)I
    //   146: pop
    //   147: aload_0
    //   148: ifnull -> 155
    //   151: aload_0
    //   152: invokevirtual recycle : ()V
    //   155: return
    //   156: aload #10
    //   158: astore_3
    //   159: aload #11
    //   161: astore #9
    //   163: aload_0
    //   164: invokevirtual getWidth : ()I
    //   167: istore #6
    //   169: aload #10
    //   171: astore_3
    //   172: aload #11
    //   174: astore #9
    //   176: aload_0
    //   177: invokevirtual getHeight : ()I
    //   180: istore #7
    //   182: iload #6
    //   184: iload #7
    //   186: if_icmple -> 227
    //   189: iload #6
    //   191: iload_2
    //   192: if_icmpgt -> 204
    //   195: aload_0
    //   196: ifnull -> 203
    //   199: aload_0
    //   200: invokevirtual recycle : ()V
    //   203: return
    //   204: iload #6
    //   206: i2f
    //   207: iload #7
    //   209: i2f
    //   210: fdiv
    //   211: fstore #4
    //   213: iload_2
    //   214: i2f
    //   215: fstore #5
    //   217: fload #5
    //   219: fload #4
    //   221: fdiv
    //   222: fstore #4
    //   224: goto -> 262
    //   227: iload #7
    //   229: iload_2
    //   230: if_icmpgt -> 242
    //   233: aload_0
    //   234: ifnull -> 241
    //   237: aload_0
    //   238: invokevirtual recycle : ()V
    //   241: return
    //   242: iload #7
    //   244: i2f
    //   245: iload #6
    //   247: i2f
    //   248: fdiv
    //   249: fstore #5
    //   251: iload_2
    //   252: i2f
    //   253: fstore #4
    //   255: fload #4
    //   257: fload #5
    //   259: fdiv
    //   260: fstore #5
    //   262: aload #10
    //   264: astore_3
    //   265: aload #11
    //   267: astore #9
    //   269: new android/graphics/Matrix
    //   272: dup
    //   273: invokespecial <init> : ()V
    //   276: astore #12
    //   278: aload #10
    //   280: astore_3
    //   281: aload #11
    //   283: astore #9
    //   285: aload #12
    //   287: fload #5
    //   289: iload #6
    //   291: i2f
    //   292: fdiv
    //   293: fload #4
    //   295: iload #7
    //   297: i2f
    //   298: fdiv
    //   299: invokevirtual postScale : (FF)Z
    //   302: pop
    //   303: aload #10
    //   305: astore_3
    //   306: aload #11
    //   308: astore #9
    //   310: aload_0
    //   311: iconst_0
    //   312: iconst_0
    //   313: iload #6
    //   315: iload #7
    //   317: aload #12
    //   319: iconst_1
    //   320: invokestatic createBitmap : (Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;
    //   323: astore #10
    //   325: aload #10
    //   327: astore_3
    //   328: aload #10
    //   330: astore #9
    //   332: getstatic android/os/Build$VERSION.SDK_INT : I
    //   335: bipush #24
    //   337: if_icmplt -> 369
    //   340: aload #10
    //   342: astore_3
    //   343: aload #10
    //   345: astore #9
    //   347: aload #10
    //   349: getstatic android/graphics/Bitmap$CompressFormat.JPEG : Landroid/graphics/Bitmap$CompressFormat;
    //   352: bipush #80
    //   354: new java/io/FileOutputStream
    //   357: dup
    //   358: aload_1
    //   359: invokespecial <init> : (Ljava/io/File;)V
    //   362: invokevirtual compress : (Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z
    //   365: pop
    //   366: goto -> 395
    //   369: aload #10
    //   371: astore_3
    //   372: aload #10
    //   374: astore #9
    //   376: aload #10
    //   378: getstatic android/graphics/Bitmap$CompressFormat.PNG : Landroid/graphics/Bitmap$CompressFormat;
    //   381: bipush #80
    //   383: new java/io/FileOutputStream
    //   386: dup
    //   387: aload_1
    //   388: invokespecial <init> : (Ljava/io/File;)V
    //   391: invokevirtual compress : (Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z
    //   394: pop
    //   395: aload_0
    //   396: ifnull -> 403
    //   399: aload_0
    //   400: invokevirtual recycle : ()V
    //   403: aload #10
    //   405: ifnull -> 479
    //   408: aload #10
    //   410: invokevirtual recycle : ()V
    //   413: return
    //   414: astore_1
    //   415: goto -> 487
    //   418: astore_3
    //   419: aload #9
    //   421: astore_1
    //   422: goto -> 459
    //   425: astore_1
    //   426: aload #12
    //   428: astore_3
    //   429: aload #9
    //   431: astore_0
    //   432: goto -> 487
    //   435: astore_3
    //   436: aconst_null
    //   437: astore_1
    //   438: aload #9
    //   440: astore_0
    //   441: goto -> 459
    //   444: astore_1
    //   445: aconst_null
    //   446: astore_0
    //   447: aload #12
    //   449: astore_3
    //   450: goto -> 487
    //   453: astore_3
    //   454: aconst_null
    //   455: astore_1
    //   456: aload #13
    //   458: astore_0
    //   459: aload_3
    //   460: invokevirtual printStackTrace : ()V
    //   463: aload_0
    //   464: ifnull -> 471
    //   467: aload_0
    //   468: invokevirtual recycle : ()V
    //   471: aload_1
    //   472: ifnull -> 479
    //   475: aload_1
    //   476: invokevirtual recycle : ()V
    //   479: return
    //   480: astore #9
    //   482: aload_1
    //   483: astore_3
    //   484: aload #9
    //   486: astore_1
    //   487: aload_0
    //   488: ifnull -> 495
    //   491: aload_0
    //   492: invokevirtual recycle : ()V
    //   495: aload_3
    //   496: ifnull -> 503
    //   499: aload_3
    //   500: invokevirtual recycle : ()V
    //   503: aload_1
    //   504: athrow
    // Exception table:
    //   from	to	target	type
    //   12	44	453	java/io/FileNotFoundException
    //   12	44	444	finally
    //   44	50	435	java/io/FileNotFoundException
    //   44	50	425	finally
    //   55	117	120	java/io/IOException
    //   55	117	435	java/io/FileNotFoundException
    //   55	117	425	finally
    //   121	125	435	java/io/FileNotFoundException
    //   121	125	425	finally
    //   139	147	418	java/io/FileNotFoundException
    //   139	147	414	finally
    //   163	169	418	java/io/FileNotFoundException
    //   163	169	414	finally
    //   176	182	418	java/io/FileNotFoundException
    //   176	182	414	finally
    //   269	278	418	java/io/FileNotFoundException
    //   269	278	414	finally
    //   285	303	418	java/io/FileNotFoundException
    //   285	303	414	finally
    //   310	325	418	java/io/FileNotFoundException
    //   310	325	414	finally
    //   332	340	418	java/io/FileNotFoundException
    //   332	340	414	finally
    //   347	366	418	java/io/FileNotFoundException
    //   347	366	414	finally
    //   376	395	418	java/io/FileNotFoundException
    //   376	395	414	finally
    //   459	463	480	finally }
  
  public static Bitmap rotate(Bitmap paramBitmap, int paramInt) {
    matrix = paramBitmap;
    if (paramInt != 0) {
      matrix = paramBitmap;
      if (paramBitmap != null) {
        matrix = new Matrix();
        matrix.setRotate(paramInt, paramBitmap.getWidth() / 2.0F, paramBitmap.getHeight() / 2.0F);
        try {
          Bitmap bitmap2 = Bitmap.createBitmap(paramBitmap, 0, 0, paramBitmap.getWidth(), paramBitmap.getHeight(), matrix, true);
          Bitmap bitmap1 = paramBitmap;
          if (paramBitmap != bitmap2) {
            paramBitmap.recycle();
            bitmap1 = bitmap2;
          } 
          return bitmap1;
        } catch (OutOfMemoryError matrix) {
          return paramBitmap;
        } 
      } 
    } 
    return matrix;
  }
}
