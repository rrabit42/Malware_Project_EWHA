package com.google.android.gms.internal.ads;

import android.os.Handler;
import android.os.Looper;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.atomic.AtomicInteger;

public final class zzv {
  private final zzm zzaa;
  
  private final AtomicInteger zzba = new AtomicInteger();
  
  private final Set<zzr<?>> zzbb = new HashSet();
  
  private final PriorityBlockingQueue<zzr<?>> zzbc = new PriorityBlockingQueue();
  
  private final PriorityBlockingQueue<zzr<?>> zzbd = new PriorityBlockingQueue();
  
  private final zzn[] zzbe;
  
  private final List<zzw> zzbf = new ArrayList();
  
  private final zzb zzj;
  
  private final zzaa zzk;
  
  private zzd zzq;
  
  public zzv(zzb paramzzb, zzm paramzzm) { this(paramzzb, paramzzm, 4); }
  
  private zzv(zzb paramzzb, zzm paramzzm, int paramInt) { this(paramzzb, paramzzm, 4, new zzi(new Handler(Looper.getMainLooper()))); }
  
  private zzv(zzb paramzzb, zzm paramzzm, int paramInt, zzaa paramzzaa) {
    this.zzj = paramzzb;
    this.zzaa = paramzzm;
    this.zzbe = new zzn[4];
    this.zzk = paramzzaa;
  }
  
  public final void start() {
    zzd zzd1 = this.zzq;
    if (zzd1 != null)
      zzd1.quit(); 
    zzn[] arrayOfzzn = this.zzbe;
    int i = arrayOfzzn.length;
    byte b2 = 0;
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      zzn zzn1 = arrayOfzzn[b1];
      if (zzn1 != null)
        zzn1.quit(); 
    } 
    this.zzq = new zzd(this.zzbc, this.zzbd, this.zzj, this.zzk);
    this.zzq.start();
    for (b1 = b2; b1 < this.zzbe.length; b1++) {
      zzn zzn1 = new zzn(this.zzbd, this.zzaa, this.zzj, this.zzk);
      this.zzbe[b1] = zzn1;
      zzn1.start();
    } 
  }
  
  public final <T> zzr<T> zze(zzr<T> paramzzr) {
    paramzzr.zza(this);
    synchronized (this.zzbb) {
      this.zzbb.add(paramzzr);
      paramzzr.zza(this.zzba.incrementAndGet());
      paramzzr.zzb("add-to-queue");
      if (!paramzzr.zzh()) {
        PriorityBlockingQueue priorityBlockingQueue = this.zzbd;
        priorityBlockingQueue.add(paramzzr);
        return paramzzr;
      } 
      null = this.zzbc;
      null.add(paramzzr);
      return paramzzr;
    } 
  }
  
  final <T> void zzf(zzr<T> paramzzr) {
    synchronized (this.zzbb) {
      this.zzbb.remove(paramzzr);
      synchronized (this.zzbf) {
        Iterator iterator = this.zzbf.iterator();
        while (iterator.hasNext())
          ((zzw)iterator.next()).zzg(paramzzr); 
        return;
      } 
    } 
  }
}
