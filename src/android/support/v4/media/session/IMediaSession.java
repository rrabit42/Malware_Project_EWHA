package android.support.v4.media.session;

import android.app.PendingIntent;
import android.net.Uri;
import android.os.Bundle;
import android.os.IInterface;
import android.os.RemoteException;
import android.support.v4.media.MediaDescriptionCompat;
import android.support.v4.media.MediaMetadataCompat;
import android.support.v4.media.RatingCompat;
import android.view.KeyEvent;
import java.util.List;

public interface IMediaSession extends IInterface {
  void addQueueItem(MediaDescriptionCompat paramMediaDescriptionCompat) throws RemoteException;
  
  void addQueueItemAt(MediaDescriptionCompat paramMediaDescriptionCompat, int paramInt) throws RemoteException;
  
  void adjustVolume(int paramInt1, int paramInt2, String paramString) throws RemoteException;
  
  void fastForward() throws RemoteException;
  
  Bundle getExtras() throws RemoteException;
  
  long getFlags() throws RemoteException;
  
  PendingIntent getLaunchPendingIntent() throws RemoteException;
  
  MediaMetadataCompat getMetadata() throws RemoteException;
  
  String getPackageName() throws RemoteException;
  
  PlaybackStateCompat getPlaybackState() throws RemoteException;
  
  List<MediaSessionCompat.QueueItem> getQueue() throws RemoteException;
  
  CharSequence getQueueTitle() throws RemoteException;
  
  int getRatingType() throws RemoteException;
  
  int getRepeatMode() throws RemoteException;
  
  int getShuffleMode() throws RemoteException;
  
  String getTag() throws RemoteException;
  
  ParcelableVolumeInfo getVolumeAttributes() throws RemoteException;
  
  boolean isCaptioningEnabled() throws RemoteException;
  
  boolean isShuffleModeEnabledRemoved() throws RemoteException;
  
  boolean isTransportControlEnabled() throws RemoteException;
  
  void next() throws RemoteException;
  
  void pause() throws RemoteException;
  
  void play() throws RemoteException;
  
  void playFromMediaId(String paramString, Bundle paramBundle) throws RemoteException;
  
  void playFromSearch(String paramString, Bundle paramBundle) throws RemoteException;
  
  void playFromUri(Uri paramUri, Bundle paramBundle) throws RemoteException;
  
  void prepare() throws RemoteException;
  
  void prepareFromMediaId(String paramString, Bundle paramBundle) throws RemoteException;
  
  void prepareFromSearch(String paramString, Bundle paramBundle) throws RemoteException;
  
  void prepareFromUri(Uri paramUri, Bundle paramBundle) throws RemoteException;
  
  void previous() throws RemoteException;
  
  void rate(RatingCompat paramRatingCompat) throws RemoteException;
  
  void rateWithExtras(RatingCompat paramRatingCompat, Bundle paramBundle) throws RemoteException;
  
  void registerCallbackListener(IMediaControllerCallback paramIMediaControllerCallback) throws RemoteException;
  
  void removeQueueItem(MediaDescriptionCompat paramMediaDescriptionCompat) throws RemoteException;
  
  void removeQueueItemAt(int paramInt) throws RemoteException;
  
  void rewind() throws RemoteException;
  
  void seekTo(long paramLong) throws RemoteException;
  
  void sendCommand(String paramString, Bundle paramBundle, MediaSessionCompat.ResultReceiverWrapper paramResultReceiverWrapper) throws RemoteException;
  
  void sendCustomAction(String paramString, Bundle paramBundle) throws RemoteException;
  
  boolean sendMediaButton(KeyEvent paramKeyEvent) throws RemoteException;
  
  void setCaptioningEnabled(boolean paramBoolean) throws RemoteException;
  
  void setRepeatMode(int paramInt) throws RemoteException;
  
  void setShuffleMode(int paramInt) throws RemoteException;
  
  void setShuffleModeEnabledRemoved(boolean paramBoolean) throws RemoteException;
  
  void setVolumeTo(int paramInt1, int paramInt2, String paramString) throws RemoteException;
  
  void skipToQueueItem(long paramLong) throws RemoteException;
  
  void stop() throws RemoteException;
  
  void unregisterCallbackListener(IMediaControllerCallback paramIMediaControllerCallback) throws RemoteException;
}
