package com.google.android.gms.internal.measurement;

import android.annotation.SuppressLint;
import android.content.Context;
import android.util.Log;
import java.util.concurrent.atomic.AtomicInteger;
import javax.annotation.Nullable;

public abstract class zzsi<T> extends Object {
  private static final Object zzbrm = new Object();
  
  private static boolean zzbrn;
  
  private static final AtomicInteger zzbrq;
  
  @SuppressLint({"StaticFieldLeak"})
  private static Context zzri = null;
  
  private final String name;
  
  private final zzso zzbro;
  
  private final T zzbrp;
  
  static  {
    zzbrn = false;
    zzbrq = new AtomicInteger();
  }
  
  private zzsi(zzso paramzzso, String paramString, T paramT) {
    if (zzso.zza(paramzzso) != null) {
      this.zzbro = paramzzso;
      this.name = paramString;
      this.zzbrp = paramT;
      return;
    } 
    throw new IllegalArgumentException("Must pass a valid SharedPreferences file name or ContentProvider URI");
  }
  
  private static zzsi<Double> zza(zzso paramzzso, String paramString, double paramDouble) { return new zzsm(paramzzso, paramString, Double.valueOf(paramDouble)); }
  
  private static zzsi<Integer> zza(zzso paramzzso, String paramString, int paramInt) { return new zzsk(paramzzso, paramString, Integer.valueOf(paramInt)); }
  
  private static zzsi<Long> zza(zzso paramzzso, String paramString, long paramLong) { return new zzsj(paramzzso, paramString, Long.valueOf(paramLong)); }
  
  private static zzsi<String> zza(zzso paramzzso, String paramString1, String paramString2) { return new zzsn(paramzzso, paramString1, paramString2); }
  
  private static zzsi<Boolean> zza(zzso paramzzso, String paramString, boolean paramBoolean) { return new zzsl(paramzzso, paramString, Boolean.valueOf(paramBoolean)); }
  
  public static void zzae(Context paramContext) { // Byte code:
    //   0: getstatic com/google/android/gms/internal/measurement/zzsi.zzbrm : Ljava/lang/Object;
    //   3: astore_2
    //   4: aload_2
    //   5: monitorenter
    //   6: aload_0
    //   7: invokevirtual getApplicationContext : ()Landroid/content/Context;
    //   10: astore_1
    //   11: aload_1
    //   12: ifnonnull -> 103
    //   15: goto -> 18
    //   18: getstatic com/google/android/gms/internal/measurement/zzsi.zzri : Landroid/content/Context;
    //   21: aload_0
    //   22: if_acmpeq -> 95
    //   25: ldc com/google/android/gms/internal/measurement/zzrx
    //   27: monitorenter
    //   28: getstatic com/google/android/gms/internal/measurement/zzrx.zzbrb : Ljava/util/Map;
    //   31: invokeinterface clear : ()V
    //   36: ldc com/google/android/gms/internal/measurement/zzrx
    //   38: monitorexit
    //   39: ldc com/google/android/gms/internal/measurement/zzsp
    //   41: monitorenter
    //   42: getstatic com/google/android/gms/internal/measurement/zzsp.zzbrz : Ljava/util/Map;
    //   45: invokeinterface clear : ()V
    //   50: ldc com/google/android/gms/internal/measurement/zzsp
    //   52: monitorexit
    //   53: ldc com/google/android/gms/internal/measurement/zzse
    //   55: monitorenter
    //   56: aconst_null
    //   57: putstatic com/google/android/gms/internal/measurement/zzse.zzbrj : Lcom/google/android/gms/internal/measurement/zzse;
    //   60: ldc com/google/android/gms/internal/measurement/zzse
    //   62: monitorexit
    //   63: getstatic com/google/android/gms/internal/measurement/zzsi.zzbrq : Ljava/util/concurrent/atomic/AtomicInteger;
    //   66: invokevirtual incrementAndGet : ()I
    //   69: pop
    //   70: aload_0
    //   71: putstatic com/google/android/gms/internal/measurement/zzsi.zzri : Landroid/content/Context;
    //   74: goto -> 95
    //   77: astore_0
    //   78: ldc com/google/android/gms/internal/measurement/zzse
    //   80: monitorexit
    //   81: aload_0
    //   82: athrow
    //   83: astore_0
    //   84: ldc com/google/android/gms/internal/measurement/zzsp
    //   86: monitorexit
    //   87: aload_0
    //   88: athrow
    //   89: astore_0
    //   90: ldc com/google/android/gms/internal/measurement/zzrx
    //   92: monitorexit
    //   93: aload_0
    //   94: athrow
    //   95: aload_2
    //   96: monitorexit
    //   97: return
    //   98: astore_0
    //   99: aload_2
    //   100: monitorexit
    //   101: aload_0
    //   102: athrow
    //   103: aload_1
    //   104: astore_0
    //   105: goto -> 18
    // Exception table:
    //   from	to	target	type
    //   6	11	98	finally
    //   18	28	98	finally
    //   28	39	89	finally
    //   39	42	98	finally
    //   42	53	83	finally
    //   53	56	98	finally
    //   56	63	77	finally
    //   63	74	98	finally
    //   78	81	77	finally
    //   81	83	98	finally
    //   84	87	83	finally
    //   87	89	98	finally
    //   90	93	89	finally
    //   93	95	98	finally
    //   95	97	98	finally
    //   99	101	98	finally }
  
  private final String zzfr(String paramString) {
    if (paramString != null && paramString.isEmpty())
      return this.name; 
    String str = (paramString = String.valueOf(paramString)).valueOf(this.name);
    return (str.length() != 0) ? paramString.concat(str) : new String(paramString);
  }
  
  static void zztq() { zzbrq.incrementAndGet(); }
  
  @Nullable
  private final T zzts() {
    boolean bool;
    zzso zzso1 = this.zzbro;
    String str = (String)zzse.zzad(zzri).zzfn("gms:phenotype:phenotype_flag:debug_bypass_phenotype");
    if (str != null && zzru.zzbqo.matcher(str).matches()) {
      bool = true;
    } else {
      bool = false;
    } 
    if (!bool) {
      zzsp zzsp;
      if (zzso.zza(this.zzbro) != null) {
        zzsp = zzrx.zza(zzri.getContentResolver(), zzso.zza(this.zzbro));
      } else {
        Context context = zzri;
        zzso zzso2 = this.zzbro;
        zzsp = zzsp.zzi(context, null);
      } 
      if (zzsp != null) {
        Object object = zzsp.zzfn(zztr());
        if (object != null)
          return (T)zzs(object); 
      } 
    } else {
      str = String.valueOf(zztr());
      if (str.length() != 0) {
        str = "Bypass reading Phenotype values for flag: ".concat(str);
      } else {
        str = new String("Bypass reading Phenotype values for flag: ");
      } 
      Log.w("PhenotypeFlag", str);
    } 
    return null;
  }
  
  @Nullable
  private final T zztt() {
    zzso zzso1;
    Object object = zzse.zzad(zzri).zzfn(zzfr((zzso1 = this.zzbro).zzc(this.zzbro)));
    return (object != null) ? (T)zzs(object) : null;
  }
  
  public final T get() { // Byte code:
    //   0: getstatic com/google/android/gms/internal/measurement/zzsi.zzbrq : Ljava/util/concurrent/atomic/AtomicInteger;
    //   3: invokevirtual get : ()I
    //   6: istore_1
    //   7: aload_0
    //   8: getfield zzbrr : I
    //   11: iload_1
    //   12: if_icmpge -> 99
    //   15: aload_0
    //   16: monitorenter
    //   17: aload_0
    //   18: getfield zzbrr : I
    //   21: iload_1
    //   22: if_icmpge -> 89
    //   25: getstatic com/google/android/gms/internal/measurement/zzsi.zzri : Landroid/content/Context;
    //   28: ifnull -> 78
    //   31: aload_0
    //   32: getfield zzbro : Lcom/google/android/gms/internal/measurement/zzso;
    //   35: astore_2
    //   36: aload_0
    //   37: invokespecial zzts : ()Ljava/lang/Object;
    //   40: astore_2
    //   41: aload_2
    //   42: ifnull -> 48
    //   45: goto -> 65
    //   48: aload_0
    //   49: invokespecial zztt : ()Ljava/lang/Object;
    //   52: astore_2
    //   53: aload_2
    //   54: ifnull -> 60
    //   57: goto -> 65
    //   60: aload_0
    //   61: getfield zzbrp : Ljava/lang/Object;
    //   64: astore_2
    //   65: aload_0
    //   66: aload_2
    //   67: putfield zzalj : Ljava/lang/Object;
    //   70: aload_0
    //   71: iload_1
    //   72: putfield zzbrr : I
    //   75: goto -> 89
    //   78: new java/lang/IllegalStateException
    //   81: dup
    //   82: ldc_w 'Must call PhenotypeFlag.init() first'
    //   85: invokespecial <init> : (Ljava/lang/String;)V
    //   88: athrow
    //   89: aload_0
    //   90: monitorexit
    //   91: goto -> 99
    //   94: astore_2
    //   95: aload_0
    //   96: monitorexit
    //   97: aload_2
    //   98: athrow
    //   99: aload_0
    //   100: getfield zzalj : Ljava/lang/Object;
    //   103: areturn
    // Exception table:
    //   from	to	target	type
    //   17	41	94	finally
    //   48	53	94	finally
    //   60	65	94	finally
    //   65	75	94	finally
    //   78	89	94	finally
    //   89	91	94	finally
    //   95	97	94	finally }
  
  public final T getDefaultValue() { return (T)this.zzbrp; }
  
  abstract T zzs(Object paramObject);
  
  public final String zztr() { return zzfr(zzso.zzb(this.zzbro)); }
}
