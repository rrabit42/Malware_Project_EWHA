package com.google.android.gms.measurement.internal;

import android.content.Context;
import com.google.android.gms.common.GoogleApiAvailabilityLight;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.internal.measurement.zzrx;
import com.google.android.gms.internal.measurement.zzsh;
import com.google.android.gms.internal.measurement.zzso;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@VisibleForTesting
public final class zzai {
  static zzn zzaih;
  
  static List<zza<Integer>> zzaii = new ArrayList();
  
  static List<zza<Long>> zzaij = new ArrayList();
  
  static List<zza<Boolean>> zzaik = new ArrayList();
  
  static List<zza<String>> zzail = new ArrayList();
  
  static List<zza<Double>> zzaim = new ArrayList();
  
  private static final zzso zzain = new zzso(zzsh.zzfq("com.google.android.gms.measurement"));
  
  @VisibleForTesting
  private static Boolean zzaio;
  
  private static zza<Boolean> zzaip;
  
  private static zza<Boolean> zzaiq;
  
  private static zza<Boolean> zzair;
  
  public static zza<Boolean> zzais;
  
  public static zza<Boolean> zzait;
  
  public static zza<String> zzaiu;
  
  public static zza<Long> zzaiv;
  
  public static zza<Long> zzaiw;
  
  public static zza<Long> zzaix;
  
  public static zza<String> zzaiy;
  
  public static zza<String> zzaiz;
  
  public static zza<Integer> zzaja;
  
  public static zza<Integer> zzajb;
  
  public static zza<Integer> zzajc;
  
  public static zza<Integer> zzajd;
  
  public static zza<Integer> zzaje;
  
  public static zza<Integer> zzajf;
  
  public static zza<Integer> zzajg;
  
  public static zza<Integer> zzajh;
  
  public static zza<Integer> zzaji;
  
  public static zza<Integer> zzajj;
  
  public static zza<String> zzajk;
  
  public static zza<Long> zzajl;
  
  public static zza<Long> zzajm;
  
  public static zza<Long> zzajn;
  
  public static zza<Long> zzajo;
  
  public static zza<Long> zzajp;
  
  public static zza<Long> zzajq;
  
  public static zza<Long> zzajr;
  
  public static zza<Long> zzajs;
  
  public static zza<Long> zzajt;
  
  public static zza<Long> zzaju;
  
  public static zza<Long> zzajv;
  
  public static zza<Integer> zzajw;
  
  public static zza<Long> zzajx;
  
  public static zza<Integer> zzajy;
  
  public static zza<Integer> zzajz;
  
  public static zza<Long> zzaka;
  
  public static zza<Boolean> zzakb;
  
  public static zza<String> zzakc;
  
  public static zza<Long> zzakd;
  
  public static zza<Integer> zzake;
  
  public static zza<Double> zzakf;
  
  public static zza<Integer> zzakg;
  
  public static zza<Boolean> zzakh;
  
  public static zza<Boolean> zzaki;
  
  public static zza<Boolean> zzakj;
  
  public static zza<Boolean> zzakk;
  
  public static zza<Boolean> zzakl;
  
  public static zza<Boolean> zzakm;
  
  public static zza<Boolean> zzakn;
  
  public static zza<Boolean> zzako;
  
  public static zza<Boolean> zzakp;
  
  public static zza<Boolean> zzakq;
  
  public static zza<Boolean> zzakr;
  
  public static zza<Boolean> zzaks;
  
  public static zza<Boolean> zzakt;
  
  public static zza<Boolean> zzaku;
  
  public static zza<Boolean> zzakv;
  
  public static zza<Boolean> zzakw;
  
  public static zza<Boolean> zzakx;
  
  public static zza<Boolean> zzaky;
  
  public static zza<Boolean> zzakz;
  
  public static zza<Boolean> zzala;
  
  public static zza<Boolean> zzalb;
  
  public static zza<Boolean> zzalc;
  
  public static zza<Boolean> zzald;
  
  public static zza<Boolean> zzale;
  
  public static zza<Boolean> zzalf;
  
  public static zza<Boolean> zzalg = (zzalf = (zzale = (zzald = (zzalc = (zzalb = (zzala = (zzakz = (zzaky = (zzakx = (zzakw = (zzakv = (zzaku = (zzakt = (zzaks = (zzakr = (zzakq = (zzakp = (zzako = (zzakn = (zzakm = (zzakl = (zzakk = (zzakj = (zzaki = (zzakh = (zzakg = (zzakf = (zzake = (zzakd = (zzakc = (zzakb = (zzaka = (zzajz = (zzajy = (zzajx = (zzajw = (zzajv = (zzaju = (zzajt = (zzajs = (zzajr = (zzajq = (zzajp = (zzajo = (zzajn = (zzajm = (zzajl = (zzajk = (zzajj = (zzaji = (zzajh = (zzajg = (zzajf = (zzaje = (zzajd = (zzajc = (zzajb = (zzaja = (zzaiz = (zzaiy = (zzaix = (zzaiw = (zzaiv = (zzaiu = (zzait = (zzais = (zzair = (zzaiq = (zzaip = zza.zzb("measurement.log_third_party_store_events_enabled", false, false)).zzb("measurement.log_installs_enabled", false, false)).zzb("measurement.log_upgrades_enabled", false, false)).zzb("measurement.log_androidId_enabled", false, false)).zzb("measurement.upload_dsid_enabled", false, false)).zzd("measurement.log_tag", "FA", "FA-SVC")).zzb("measurement.ad_id_cache_time", 10000L, 10000L)).zzb("measurement.monitoring.sample_period_millis", 86400000L, 86400000L)).zzb("measurement.config.cache_time", 86400000L, 3600000L)).zzd("measurement.config.url_scheme", "https", "https")).zzd("measurement.config.url_authority", "app-measurement.com", "app-measurement.com")).zzc("measurement.upload.max_bundles", 100, 100)).zzc("measurement.upload.max_batch_size", 65536, 65536)).zzc("measurement.upload.max_bundle_size", 65536, 65536)).zzc("measurement.upload.max_events_per_bundle", 1000, 1000)).zzc("measurement.upload.max_events_per_day", 100000, 100000)).zzc("measurement.upload.max_error_events_per_day", 1000, 1000)).zzc("measurement.upload.max_public_events_per_day", 50000, 50000)).zzc("measurement.upload.max_conversions_per_day", 500, 500)).zzc("measurement.upload.max_realtime_events_per_day", 10, 10)).zzc("measurement.store.max_stored_events_per_app", 100000, 100000)).zzd("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a")).zzb("measurement.upload.backoff_period", 43200000L, 43200000L)).zzb("measurement.upload.window_interval", 3600000L, 3600000L)).zzb("measurement.upload.interval", 3600000L, 3600000L)).zzb("measurement.upload.realtime_upload_interval", 10000L, 10000L)).zzb("measurement.upload.debug_upload_interval", 1000L, 1000L)).zzb("measurement.upload.minimum_delay", 500L, 500L)).zzb("measurement.alarm_manager.minimum_interval", 60000L, 60000L)).zzb("measurement.upload.stale_data_deletion_interval", 86400000L, 86400000L)).zzb("measurement.upload.refresh_blacklisted_config_interval", 604800000L, 604800000L)).zzb("measurement.upload.initial_upload_delay_time", 15000L, 15000L)).zzb("measurement.upload.retry_time", 1800000L, 1800000L)).zzc("measurement.upload.retry_count", 6, 6)).zzb("measurement.upload.max_queue_time", 2419200000L, 2419200000L)).zzc("measurement.lifetimevalue.max_currency_tracked", 4, 4)).zzc("measurement.audience.filter_result_max_count", 200, 200)).zzb("measurement.service_client.idle_disconnect_millis", 5000L, 5000L)).zzb("measurement.test.boolean_flag", false, false)).zzd("measurement.test.string_flag", "---", "---")).zzb("measurement.test.long_flag", -1L, -1L)).zzc("measurement.test.int_flag", -2, -2)).zza("measurement.test.double_flag", -3.0D, -3.0D)).zzc("measurement.experiment.max_ids", 50, 50)).zzb("measurement.lifetimevalue.user_engagement_tracking_enabled", true, true)).zzb("measurement.audience.complex_param_evaluation", true, true)).zzb("measurement.validation.internal_limits_internal_event_params", false, false)).zzb("measurement.quality.unsuccessful_update_retry_counter", true, true)).zzb("measurement.iid.disable_on_collection_disabled", true, true)).zzb("measurement.app_launch.call_only_when_enabled", true, true)).zzb("measurement.run_on_worker_inline", true, false)).zzb("measurement.audience.dynamic_filters", true, true)).zzb("measurement.reset_analytics.persist_time", false, false)).zzb("measurement.validation.value_and_currency_params", false, false)).zzb("measurement.sampling.time_zone_offset_enabled", false, false)).zzb("measurement.referrer.enable_logging_install_referrer_cmp_from_apk", false, false)).zzb("measurement.fetch_config_with_admob_app_id", true, true)).zzb("measurement.sessions.session_id_enabled", false, false)).zzb("measurement.sessions.session_number_enabled", false, false)).zzb("measurement.sessions.immediate_start_enabled", false, false)).zzb("measurement.sessions.background_sessions_enabled", false, false)).zzb("measurement.collection.firebase_global_collection_flag_enabled", true, true)).zzb("measurement.collection.efficient_engagement_reporting_enabled", false, false)).zzb("measurement.collection.redundant_engagement_removal_enabled", false, false)).zzb("measurement.remove_app_instance_id_cache_enabled", true, true)).zzb("measurement.collection.init_params_control_enabled", true, true)).zzb("measurement.upload.disable_is_uploader", false, false)).zzb("measurement.experiment.enable_experiment_reporting", false, false)).zzb("measurement.collection.log_event_and_bundle_v2", true, true)).zzb("measurement.collection.null_empty_event_name_fix", true, true);
  
  static void zza(zzbw paramzzbw) { zzada = paramzzbw; }
  
  static void zza(zzn paramzzn) {
    zzaih = paramzzn;
    zza.zzjb();
  }
  
  @VisibleForTesting
  static void zza(Exception paramException) {
    if (zzada == null)
      return; 
    Context context = zzada.getContext();
    if (zzaio == null) {
      boolean bool;
      if (GoogleApiAvailabilityLight.getInstance().isGooglePlayServicesAvailable(context, 12451000) == 0) {
        bool = true;
      } else {
        bool = false;
      } 
      zzaio = Boolean.valueOf(bool);
    } 
    if (zzaio.booleanValue())
      zzada.zzgt().zzjg().zzg("Got Exception on PhenotypeFlag.get on Play device", paramException); 
  }
  
  public static Map<String, String> zzm(Context paramContext) { return zzrx.zza(paramContext.getContentResolver(), zzsh.zzfq("com.google.android.gms.measurement")).zztk(); }
}
