package android.support.design.shape;

import android.graphics.Matrix;
import android.graphics.Path;
import android.support.design.internal.Experimental;
import java.util.ArrayList;
import java.util.List;

@Experimental("The shapes API is currently experimental and subject to change")
public class ShapePath {
  public float endX;
  
  public float endY;
  
  private final List<PathOperation> operations = new ArrayList();
  
  public float startX;
  
  public float startY;
  
  public ShapePath() { reset(0.0F, 0.0F); }
  
  public ShapePath(float paramFloat1, float paramFloat2) { reset(paramFloat1, paramFloat2); }
  
  public void addArc(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6) {
    PathArcOperation pathArcOperation = new PathArcOperation(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    pathArcOperation.startAngle = paramFloat5;
    pathArcOperation.sweepAngle = paramFloat6;
    this.operations.add(pathArcOperation);
    float f = (paramFloat3 - paramFloat1) / 2.0F;
    double d = (paramFloat5 + paramFloat6);
    this.endX = (paramFloat1 + paramFloat3) * 0.5F + f * (float)Math.cos(Math.toRadians(d));
    this.endY = (paramFloat2 + paramFloat4) * 0.5F + (paramFloat4 - paramFloat2) / 2.0F * (float)Math.sin(Math.toRadians(d));
  }
  
  public void applyToPath(Matrix paramMatrix, Path paramPath) {
    int i = this.operations.size();
    for (byte b = 0; b < i; b++)
      ((PathOperation)this.operations.get(b)).applyToPath(paramMatrix, paramPath); 
  }
  
  public void lineTo(float paramFloat1, float paramFloat2) {
    PathLineOperation pathLineOperation;
    (pathLineOperation = new PathLineOperation()).access$002(pathLineOperation, paramFloat1);
    PathLineOperation.access$102(pathLineOperation, paramFloat2);
    this.operations.add(pathLineOperation);
    this.endX = paramFloat1;
    this.endY = paramFloat2;
  }
  
  public void quadToPoint(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4) {
    PathQuadOperation pathQuadOperation = new PathQuadOperation();
    pathQuadOperation.controlX = paramFloat1;
    pathQuadOperation.controlY = paramFloat2;
    pathQuadOperation.endX = paramFloat3;
    pathQuadOperation.endY = paramFloat4;
    this.operations.add(pathQuadOperation);
    this.endX = paramFloat3;
    this.endY = paramFloat4;
  }
  
  public void reset(float paramFloat1, float paramFloat2) {
    this.startX = paramFloat1;
    this.startY = paramFloat2;
    this.endX = paramFloat1;
    this.endY = paramFloat2;
    this.operations.clear();
  }
}
