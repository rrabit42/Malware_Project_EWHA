package com.google.android.gms.internal.ads;

import java.util.AbstractList;
import java.util.Collection;
import java.util.List;

abstract class zzbab<E> extends AbstractList<E> implements zzbbt<E> {
  private boolean zzdpi = true;
  
  public void add(int paramInt, E paramE) {
    zzaba();
    super.add(paramInt, paramE);
  }
  
  public boolean add(E paramE) {
    zzaba();
    return super.add(paramE);
  }
  
  public boolean addAll(int paramInt, Collection<? extends E> paramCollection) {
    zzaba();
    return super.addAll(paramInt, paramCollection);
  }
  
  public boolean addAll(Collection<? extends E> paramCollection) {
    zzaba();
    return super.addAll(paramCollection);
  }
  
  public void clear() {
    zzaba();
    super.clear();
  }
  
  public boolean equals(Object paramObject) {
    if (paramObject == this)
      return true; 
    if (!(paramObject instanceof List))
      return false; 
    if (!(paramObject instanceof java.util.RandomAccess))
      return super.equals(paramObject); 
    paramObject = (List)paramObject;
    int i = size();
    if (i != paramObject.size())
      return false; 
    for (byte b = 0; b < i; b++) {
      if (!get(b).equals(paramObject.get(b)))
        return false; 
    } 
    return true;
  }
  
  public int hashCode() {
    int j = size();
    int i = 1;
    for (byte b = 0; b < j; b++)
      i = i * 31 + get(b).hashCode(); 
    return i;
  }
  
  public E remove(int paramInt) {
    zzaba();
    return (E)super.remove(paramInt);
  }
  
  public boolean remove(Object paramObject) {
    zzaba();
    return super.remove(paramObject);
  }
  
  public boolean removeAll(Collection<?> paramCollection) {
    zzaba();
    return super.removeAll(paramCollection);
  }
  
  public boolean retainAll(Collection<?> paramCollection) {
    zzaba();
    return super.retainAll(paramCollection);
  }
  
  public E set(int paramInt, E paramE) {
    zzaba();
    return (E)super.set(paramInt, paramE);
  }
  
  public boolean zzaay() { return this.zzdpi; }
  
  public final void zzaaz() { this.zzdpi = false; }
  
  protected final void zzaba() {
    if (this.zzdpi)
      return; 
    throw new UnsupportedOperationException();
  }
}
