package com.bumptech.glide.load.engine;

import android.util.Log;
import com.bumptech.glide.load.Key;
import com.bumptech.glide.load.ResourceDecoder;
import com.bumptech.glide.load.engine.cache.DiskCache;
import java.io.File;
import java.io.IOException;

class CacheLoader {
  private static final String TAG = "CacheLoader";
  
  private final DiskCache diskCache;
  
  public CacheLoader(DiskCache paramDiskCache) { this.diskCache = paramDiskCache; }
  
  public <Z> Resource<Z> load(Key paramKey, ResourceDecoder<File, Z> paramResourceDecoder, int paramInt1, int paramInt2) {
    file = this.diskCache.get(paramKey);
    ResourceDecoder<File, Z> resourceDecoder = null;
    if (file == null)
      return null; 
    try {
      Resource resource = paramResourceDecoder.decode(file, paramInt1, paramInt2);
    } catch (IOException file) {
      paramResourceDecoder = resourceDecoder;
      if (Log.isLoggable("CacheLoader", 3)) {
        Log.d("CacheLoader", "Exception decoding image from cache", file);
        paramResourceDecoder = resourceDecoder;
      } 
    } 
    if (paramResourceDecoder == null) {
      if (Log.isLoggable("CacheLoader", 3))
        Log.d("CacheLoader", "Failed to decode image from cache or not present in cache"); 
      this.diskCache.delete(paramKey);
    } 
    return paramResourceDecoder;
  }
}
