package com.google.firebase.components;

import android.content.Context;
import android.support.annotation.VisibleForTesting;
import android.util.Log;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.List;

public final class ComponentDiscovery<T> extends Object {
  private static final String COMPONENT_KEY_PREFIX = "com.google.firebase.components:";
  
  private static final String COMPONENT_SENTINEL_VALUE = "com.google.firebase.components.ComponentRegistrar";
  
  private static final String TAG = "ComponentDiscovery";
  
  private final T context;
  
  private final RegistrarNameRetriever<T> retriever;
  
  @VisibleForTesting
  ComponentDiscovery(T paramT, RegistrarNameRetriever<T> paramRegistrarNameRetriever) {
    this.context = paramT;
    this.retriever = paramRegistrarNameRetriever;
  }
  
  public static ComponentDiscovery<Context> forContext(Context paramContext) { return new ComponentDiscovery(paramContext, new MetadataRegistrarNameRetriever(null)); }
  
  private static List<ComponentRegistrar> instantiate(List<String> paramList) {
    ArrayList arrayList = new ArrayList();
    for (String str : paramList) {
      try {
        Class clazz = Class.forName(str);
        if (!ComponentRegistrar.class.isAssignableFrom(clazz)) {
          Log.w("ComponentDiscovery", String.format("Class %s is not an instance of %s", new Object[] { str, "com.google.firebase.components.ComponentRegistrar" }));
          continue;
        } 
        arrayList.add((ComponentRegistrar)clazz.getDeclaredConstructor(new Class[0]).newInstance(new Object[0]));
      } catch (ClassNotFoundException classNotFoundException) {
        Log.w("ComponentDiscovery", String.format("Class %s is not an found.", new Object[] { str }), classNotFoundException);
      } catch (IllegalAccessException illegalAccessException) {
        Log.w("ComponentDiscovery", String.format("Could not instantiate %s.", new Object[] { str }), illegalAccessException);
      } catch (InstantiationException instantiationException) {
        Log.w("ComponentDiscovery", String.format("Could not instantiate %s.", new Object[] { str }), instantiationException);
      } catch (NoSuchMethodException noSuchMethodException) {
        Log.w("ComponentDiscovery", String.format("Could not instantiate %s", new Object[] { str }), noSuchMethodException);
      } catch (InvocationTargetException invocationTargetException) {
        Log.w("ComponentDiscovery", String.format("Could not instantiate %s", new Object[] { str }), invocationTargetException);
      } 
    } 
    return arrayList;
  }
  
  public List<ComponentRegistrar> discover() { return instantiate(this.retriever.retrieve(this.context)); }
}
