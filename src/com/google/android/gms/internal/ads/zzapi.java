package com.google.android.gms.internal.ads;

import android.annotation.TargetApi;
import android.content.Context;
import android.graphics.Bitmap;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.view.MotionEvent;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import com.google.android.gms.ads.internal.zzbv;
import com.google.android.gms.common.internal.Asserts;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executor;
import javax.annotation.ParametersAreNonnullByDefault;

@zzadh
@ParametersAreNonnullByDefault
public final class zzapi extends FrameLayout implements zzapf {
  private final zzapw zzcxm;
  
  private final FrameLayout zzcxn;
  
  private final zznx zzcxo;
  
  private final zzapy zzcxp;
  
  private final long zzcxq;
  
  @Nullable
  private zzapg zzcxr;
  
  private boolean zzcxs;
  
  private boolean zzcxt;
  
  private boolean zzcxu;
  
  private boolean zzcxv;
  
  private long zzcxw;
  
  private long zzcxx;
  
  private String zzcxy;
  
  private Bitmap zzcxz;
  
  private ImageView zzcya;
  
  private boolean zzcyb;
  
  public zzapi(Context paramContext, zzapw paramzzapw, int paramInt, boolean paramBoolean, zznx paramzznx, zzapv paramzzapv) {
    super(paramContext);
    this.zzcxm = paramzzapw;
    this.zzcxo = paramzznx;
    this.zzcxn = new FrameLayout(paramContext);
    addView(this.zzcxn, new FrameLayout.LayoutParams(-1, -1));
    Asserts.checkNotNull(paramzzapw.zzbi());
    this.zzcxr = (paramzzapw.zzbi()).zzwz.zza(paramContext, paramzzapw, paramInt, paramBoolean, paramzznx, paramzzapv);
    zzapg zzapg2 = this.zzcxr;
    if (zzapg2 != null) {
      this.zzcxn.addView(zzapg2, new FrameLayout.LayoutParams(-1, -1, 17));
      zzna zzna1 = zznk.zzavg;
      if (((Boolean)zzkb.zzik().zzd(zzna1)).booleanValue())
        zztd(); 
    } 
    this.zzcya = new ImageView(paramContext);
    zzna zzna = zznk.zzavk;
    this.zzcxq = ((Long)zzkb.zzik().zzd(zzna)).longValue();
    zzna = zznk.zzavi;
    this.zzcxv = ((Boolean)zzkb.zzik().zzd(zzna)).booleanValue();
    zznx zznx1 = this.zzcxo;
    if (zznx1 != null) {
      String str;
      if (this.zzcxv) {
        str = "1";
      } else {
        str = "0";
      } 
      zznx1.zze("spinner_used", str);
    } 
    this.zzcxp = new zzapy(this);
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 != null)
      zzapg1.zza(this); 
    if (this.zzcxr == null)
      zzg("AdVideoUnderlay Error", "Allocating player failed."); 
  }
  
  public static void zza(zzapw paramzzapw) {
    HashMap hashMap = new HashMap();
    hashMap.put("event", "no_video_view");
    paramzzapw.zza("onVideoEvent", hashMap);
  }
  
  public static void zza(zzapw paramzzapw, String paramString) {
    HashMap hashMap = new HashMap();
    hashMap.put("event", "decoderProps");
    hashMap.put("error", paramString);
    paramzzapw.zza("onVideoEvent", hashMap);
  }
  
  public static void zza(zzapw paramzzapw, Map<String, List<Map<String, Object>>> paramMap) {
    HashMap hashMap = new HashMap();
    hashMap.put("event", "decoderProps");
    hashMap.put("mimeTypes", paramMap);
    paramzzapw.zza("onVideoEvent", hashMap);
  }
  
  private final void zza(String paramString, String... paramVarArgs) {
    HashMap hashMap = new HashMap();
    hashMap.put("event", paramString);
    int i = paramVarArgs.length;
    byte b = 0;
    paramString = null;
    while (b < i) {
      String str = paramVarArgs[b];
      if (paramString == null) {
        paramString = str;
      } else {
        hashMap.put(paramString, str);
        paramString = null;
      } 
      b++;
    } 
    this.zzcxm.zza("onVideoEvent", hashMap);
  }
  
  private final boolean zztf() { return (this.zzcya.getParent() != null); }
  
  private final void zztg() {
    if (this.zzcxm.zzto() == null)
      return; 
    if (this.zzcxt && !this.zzcxu) {
      this.zzcxm.zzto().getWindow().clearFlags(128);
      this.zzcxt = false;
    } 
  }
  
  public final void destroy() {
    this.zzcxp.pause();
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 != null)
      zzapg1.stop(); 
    zztg();
  }
  
  public final void finalize() {
    try {
      this.zzcxp.pause();
      if (this.zzcxr != null) {
        zzapg zzapg1 = this.zzcxr;
        Executor executor = zzaoe.zzcvy;
        zzapg1.getClass();
        executor.execute(zzapj.zza(zzapg1));
      } 
      return;
    } finally {
      super.finalize();
    } 
  }
  
  public final void onPaused() {
    zza("pause", new String[0]);
    zztg();
    this.zzcxs = false;
  }
  
  public final void onWindowVisibilityChanged(int paramInt) {
    boolean bool;
    if (paramInt == 0) {
      this.zzcxp.resume();
      bool = true;
    } else {
      this.zzcxp.pause();
      this.zzcxx = this.zzcxw;
      bool = false;
    } 
    zzakk.zzcrm.post(new zzapm(this, bool));
  }
  
  public final void pause() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.pause();
  }
  
  public final void play() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.play();
  }
  
  public final void seekTo(int paramInt) {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.seekTo(paramInt);
  }
  
  public final void setVolume(float paramFloat) {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.zzcxl.setVolume(paramFloat);
    zzapg1.zzst();
  }
  
  public final void zza(float paramFloat1, float paramFloat2) {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 != null)
      zzapg1.zza(paramFloat1, paramFloat2); 
  }
  
  public final void zzd(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (paramInt3 != 0) {
      if (paramInt4 == 0)
        return; 
      FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(paramInt3, paramInt4);
      layoutParams.setMargins(paramInt1, paramInt2, 0, 0);
      this.zzcxn.setLayoutParams(layoutParams);
      requestLayout();
    } 
  }
  
  public final void zzdn(String paramString) { this.zzcxy = paramString; }
  
  public final void zzf(int paramInt1, int paramInt2) {
    if (this.zzcxv) {
      zzna zzna = zznk.zzavj;
      paramInt1 = Math.max(paramInt1 / ((Integer)zzkb.zzik().zzd(zzna)).intValue(), 1);
      zzna = zznk.zzavj;
      paramInt2 = Math.max(paramInt2 / ((Integer)zzkb.zzik().zzd(zzna)).intValue(), 1);
      Bitmap bitmap = this.zzcxz;
      if (bitmap == null || bitmap.getWidth() != paramInt1 || this.zzcxz.getHeight() != paramInt2) {
        this.zzcxz = Bitmap.createBitmap(paramInt1, paramInt2, Bitmap.Config.ARGB_8888);
        this.zzcyb = false;
      } 
    } 
  }
  
  @TargetApi(14)
  public final void zzf(MotionEvent paramMotionEvent) {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.dispatchTouchEvent(paramMotionEvent);
  }
  
  public final void zzg(String paramString1, @Nullable String paramString2) { zza("error", new String[] { "what", paramString1, "extra", paramString2 }); }
  
  public final void zzsu() {
    this.zzcxp.resume();
    zzakk.zzcrm.post(new zzapk(this));
  }
  
  public final void zzsv() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    if (this.zzcxx == 0L)
      zza("canplaythrough", new String[] { null, (new String[6][0] = "duration").valueOf(zzapg1.getDuration() / 1000.0F), (new String[6][2] = "videoWidth").valueOf(this.zzcxr.getVideoWidth()), (new String[6][4] = "videoHeight").valueOf(this.zzcxr.getVideoHeight()) }); 
  }
  
  public final void zzsw() {
    if (this.zzcxm.zzto() != null && !this.zzcxt) {
      boolean bool;
      if (((this.zzcxm.zzto().getWindow().getAttributes()).flags & 0x80) != 0) {
        bool = true;
      } else {
        bool = false;
      } 
      this.zzcxu = bool;
      if (!this.zzcxu) {
        this.zzcxm.zzto().getWindow().addFlags(128);
        this.zzcxt = true;
      } 
    } 
    this.zzcxs = true;
  }
  
  public final void zzsx() {
    zza("ended", new String[0]);
    zztg();
  }
  
  public final void zzsy() {
    if (this.zzcyb && this.zzcxz != null && !zztf()) {
      this.zzcya.setImageBitmap(this.zzcxz);
      this.zzcya.invalidate();
      this.zzcxn.addView(this.zzcya, new FrameLayout.LayoutParams(-1, -1));
      this.zzcxn.bringChildToFront(this.zzcya);
    } 
    this.zzcxp.pause();
    this.zzcxx = this.zzcxw;
    zzakk.zzcrm.post(new zzapl(this));
  }
  
  public final void zzsz() {
    if (this.zzcxs && zztf())
      this.zzcxn.removeView(this.zzcya); 
    if (this.zzcxz != null) {
      long l = zzbv.zzer().elapsedRealtime();
      if (this.zzcxr.getBitmap(this.zzcxz) != null)
        this.zzcyb = true; 
      l = zzbv.zzer().elapsedRealtime() - l;
      if (zzakb.zzqp()) {
        StringBuilder stringBuilder = new StringBuilder(46);
        stringBuilder.append("Spinner frame grab took ");
        stringBuilder.append(l);
        stringBuilder.append("ms");
        zzakb.v(stringBuilder.toString());
      } 
      if (l > this.zzcxq) {
        zzakb.zzdk("Spinner frame grab crossed jank threshold! Suspending spinner.");
        this.zzcxv = false;
        this.zzcxz = null;
        zznx zznx1 = this.zzcxo;
        if (zznx1 != null)
          zznx1.zze("spinner_jank", Long.toString(l)); 
      } 
    } 
  }
  
  public final void zzta() {
    if (this.zzcxr == null)
      return; 
    if (!TextUtils.isEmpty(this.zzcxy)) {
      this.zzcxr.setVideoPath(this.zzcxy);
      return;
    } 
    zza("no_src", new String[0]);
  }
  
  public final void zztb() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.zzcxl.setMuted(true);
    zzapg1.zzst();
  }
  
  public final void zztc() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    zzapg1.zzcxl.setMuted(false);
    zzapg1.zzst();
  }
  
  @TargetApi(14)
  public final void zztd() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    TextView textView = new TextView(zzapg1.getContext());
    String str = String.valueOf(this.zzcxr.zzsp());
    if (str.length() != 0) {
      str = "AdMob - ".concat(str);
    } else {
      str = new String("AdMob - ");
    } 
    textView.setText(str);
    textView.setTextColor(-65536);
    textView.setBackgroundColor(-256);
    this.zzcxn.addView(textView, new FrameLayout.LayoutParams(-2, -2, 17));
    this.zzcxn.bringChildToFront(textView);
  }
  
  final void zzte() {
    zzapg zzapg1 = this.zzcxr;
    if (zzapg1 == null)
      return; 
    long l = zzapg1.getCurrentPosition();
    if (this.zzcxw != l && l > 0L) {
      zza("timeupdate", new String[] { null, (new String[2][0] = "time").valueOf((float)l / 1000.0F) });
      this.zzcxw = l;
    } 
  }
}
