package com.google.android.gms.common.server.converter;

import android.os.Parcel;
import android.os.Parcelable;
import android.util.SparseArray;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Class;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Constructor;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Field;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Param;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.VersionField;
import com.google.android.gms.common.server.response.FastJsonResponse;
import java.util.ArrayList;
import java.util.HashMap;

@KeepForSdk
@Class(creator = "StringToIntConverterCreator")
public final class StringToIntConverter extends AbstractSafeParcelable implements FastJsonResponse.FieldConverter<String, Integer> {
  public static final Parcelable.Creator<StringToIntConverter> CREATOR = new zac();
  
  @VersionField(id = 1)
  private final int zale = 1;
  
  private final HashMap<String, Integer> zapl = new HashMap();
  
  private final SparseArray<String> zapm = new SparseArray();
  
  @Field(getter = "getSerializedMap", id = 2)
  private final ArrayList<zaa> zapn = null;
  
  @KeepForSdk
  public StringToIntConverter() {}
  
  @Constructor
  StringToIntConverter(@Param(id = 1) int paramInt, @Param(id = 2) ArrayList<zaa> paramArrayList) {
    paramArrayList = (ArrayList)paramArrayList;
    int i = paramArrayList.size();
    paramInt = 0;
    while (paramInt < i) {
      Object object = paramArrayList.get(paramInt);
      paramInt++;
      object = (zaa)object;
      add(object.zapo, object.zapp);
    } 
  }
  
  @KeepForSdk
  public final StringToIntConverter add(String paramString, int paramInt) {
    this.zapl.put(paramString, Integer.valueOf(paramInt));
    this.zapm.put(paramInt, paramString);
    return this;
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt) {
    paramInt = SafeParcelWriter.beginObjectHeader(paramParcel);
    SafeParcelWriter.writeInt(paramParcel, 1, this.zale);
    ArrayList arrayList = new ArrayList();
    for (String str : this.zapl.keySet())
      arrayList.add(new zaa(str, ((Integer)this.zapl.get(str)).intValue())); 
    SafeParcelWriter.writeTypedList(paramParcel, 2, arrayList, false);
    SafeParcelWriter.finishObjectHeader(paramParcel, paramInt);
  }
  
  public final int zacj() { return 7; }
  
  public final int zack() { return 0; }
}
