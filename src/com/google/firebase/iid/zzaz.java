package com.google.firebase.iid;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.PowerManager;
import android.util.Log;
import com.google.android.gms.common.util.VisibleForTesting;
import java.io.IOException;

final class zzaz implements Runnable {
  private final zzba zzay;
  
  private final long zzdq;
  
  private final PowerManager.WakeLock zzdr;
  
  private final FirebaseInstanceId zzds;
  
  @VisibleForTesting
  zzaz(FirebaseInstanceId paramFirebaseInstanceId, zzam paramzzam, zzba paramzzba, long paramLong) {
    this.zzds = paramFirebaseInstanceId;
    this.zzay = paramzzba;
    this.zzdq = paramLong;
    this.zzdr = ((PowerManager)getContext().getSystemService("power")).newWakeLock(1, "fiid-sync");
    this.zzdr.setReferenceCounted(false);
  }
  
  @VisibleForTesting
  private final boolean zzan() {
    zzaw zzaw = this.zzds.zzk();
    if (!this.zzds.zzr() && !this.zzds.zza(zzaw))
      return true; 
    try {
      securityException = this.zzds.zzl();
      if (securityException == null) {
        Log.e("FirebaseInstanceId", "Token retrieval failed: null");
        return false;
      } 
      if (Log.isLoggable("FirebaseInstanceId", 3))
        Log.d("FirebaseInstanceId", "Token successfully retrieved"); 
      if (zzaw == null || (zzaw != null && !securityException.equals(zzaw.zzbx))) {
        Context context = getContext();
        Intent intent = new Intent("com.google.firebase.messaging.NEW_TOKEN");
        intent.putExtra("token", securityException);
        zzau.zzc(context, intent);
        zzau.zzb(context, new Intent("com.google.firebase.iid.TOKEN_REFRESH"));
      } 
      return true;
    } catch (IOException null) {
    
    } catch (SecurityException securityException) {}
    String str = String.valueOf(securityException.getMessage());
    if (str.length() != 0) {
      str = "Token retrieval failed: ".concat(str);
    } else {
      str = new String("Token retrieval failed: ");
    } 
    Log.e("FirebaseInstanceId", str);
    return false;
  }
  
  final Context getContext() { return this.zzds.zzi().getApplicationContext(); }
  
  @SuppressLint({"Wakelock"})
  public final void run() {
    try {
      if (zzau.zzai().zzd(getContext()))
        this.zzdr.acquire(); 
      this.zzds.zza(true);
      if (!this.zzds.zzo()) {
        this.zzds.zza(false);
        return;
      } 
      if (zzau.zzai().zze(getContext()) && !zzao()) {
        (new zzay(this)).zzam();
        return;
      } 
      if (zzan() && this.zzay.zzc(this.zzds)) {
        this.zzds.zza(false);
      } else {
        this.zzds.zza(this.zzdq);
      } 
      return;
    } finally {
      if (zzau.zzai().zzd(getContext()))
        this.zzdr.release(); 
    } 
  }
  
  final boolean zzao() {
    ConnectivityManager connectivityManager = (ConnectivityManager)getContext().getSystemService("connectivity");
    if (connectivityManager != null) {
      NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();
    } else {
      connectivityManager = null;
    } 
    return (connectivityManager != null && connectivityManager.isConnected());
  }
}
