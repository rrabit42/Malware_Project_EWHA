package com.android.volley.toolbox.multipart;

import com.android.volley.misc.MultipartUtils;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

public final class FilePart extends BasePart {
  private final File file;
  
  public FilePart(String paramString1, File paramFile, String paramString2, String paramString3) {
    if (paramFile != null) {
      if (paramString1 != null) {
        this.file = paramFile;
        String str2 = UrlEncodingHelper.encode(paramString1, "US-ASCII");
        paramString1 = paramString2;
        if (paramString2 == null)
          paramString1 = paramFile.getName(); 
        String str1 = UrlEncodingHelper.encode(paramString1, "US-ASCII");
        paramString1 = paramString3;
        if (paramString3 == null)
          paramString1 = "application/octet-stream"; 
        this.headersProvider = new Object(this, str2, str1, paramString1);
        return;
      } 
      throw new IllegalArgumentException("Name may not be null");
    } 
    throw new IllegalArgumentException("File may not be null");
  }
  
  public long getContentLength(Boundary paramBoundary) { return getHeader(paramBoundary).length + this.file.length() + MultipartUtils.CRLF_BYTES.length; }
  
  public void writeTo(OutputStream paramOutputStream, Boundary paramBoundary) throws IOException {
    paramOutputStream.write(getHeader(paramBoundary));
    FileInputStream fileInputStream = new FileInputStream(this.file);
    try {
      byte[] arrayOfByte = new byte[4096];
      while (true) {
        int i = fileInputStream.read(arrayOfByte);
        if (i != -1) {
          paramOutputStream.write(arrayOfByte, 0, i);
          continue;
        } 
        break;
      } 
      fileInputStream.close();
      return;
    } finally {
      fileInputStream.close();
    } 
  }
}
