package com.google.android.gms.internal.ads;

import java.io.IOException;
import java.io.Serializable;
import java.nio.charset.Charset;
import java.util.Iterator;

public abstract class zzbah extends Object implements Serializable, Iterable<Byte> {
  public static final zzbah zzdpq;
  
  private static final zzbal zzdpr;
  
  private int zzdpa = 0;
  
  static  {
    zzbaj zzbaj;
    zzdpq = new zzbao(zzbbq.zzduq);
    if (zzbac.zzabb()) {
      zzbaj = new zzbap(null);
    } else {
      zzbaj = new zzbaj(null);
    } 
    zzdpr = zzbaj;
  }
  
  static zzbam zzbo(int paramInt) { return new zzbam(paramInt, null); }
  
  public static zzbah zzc(byte[] paramArrayOfByte, int paramInt1, int paramInt2) { return new zzbao(zzdpr.zzd(paramArrayOfByte, paramInt1, paramInt2)); }
  
  static int zzd(int paramInt1, int paramInt2, int paramInt3) {
    int i = paramInt2 - paramInt1;
    if ((paramInt1 | paramInt2 | i | paramInt3 - paramInt2) < 0) {
      if (paramInt1 >= 0) {
        if (paramInt2 < paramInt1) {
          StringBuilder stringBuilder2 = new StringBuilder(66);
          stringBuilder2.append("Beginning index larger than ending index: ");
          stringBuilder2.append(paramInt1);
          stringBuilder2.append(", ");
          stringBuilder2.append(paramInt2);
          throw new IndexOutOfBoundsException(stringBuilder2.toString());
        } 
        StringBuilder stringBuilder1 = new StringBuilder(37);
        stringBuilder1.append("End index: ");
        stringBuilder1.append(paramInt2);
        stringBuilder1.append(" >= ");
        stringBuilder1.append(paramInt3);
        throw new IndexOutOfBoundsException(stringBuilder1.toString());
      } 
      StringBuilder stringBuilder = new StringBuilder(32);
      stringBuilder.append("Beginning index: ");
      stringBuilder.append(paramInt1);
      stringBuilder.append(" < 0");
      throw new IndexOutOfBoundsException(stringBuilder.toString());
    } 
    return i;
  }
  
  public static zzbah zzem(String paramString) { return new zzbao(paramString.getBytes(zzbbq.UTF_8)); }
  
  public static zzbah zzo(byte[] paramArrayOfByte) { return zzc(paramArrayOfByte, 0, paramArrayOfByte.length); }
  
  static zzbah zzp(byte[] paramArrayOfByte) { return new zzbao(paramArrayOfByte); }
  
  public abstract boolean equals(Object paramObject);
  
  public final int hashCode() {
    int j = this.zzdpa;
    int i = j;
    if (j == 0) {
      i = size();
      j = zzc(i, 0, i);
      i = j;
      if (j == 0)
        i = 1; 
      this.zzdpa = i;
    } 
    return i;
  }
  
  public abstract int size();
  
  public final byte[] toByteArray() {
    int i = size();
    if (i == 0)
      return zzbbq.zzduq; 
    byte[] arrayOfByte = new byte[i];
    zza(arrayOfByte, 0, 0, i);
    return arrayOfByte;
  }
  
  public final String toString() { return String.format("<ByteString@%s size=%d>", new Object[] { Integer.toHexString(System.identityHashCode(this)), Integer.valueOf(size()) }); }
  
  protected abstract String zza(Charset paramCharset);
  
  abstract void zza(zzbag paramzzbag) throws IOException;
  
  protected abstract void zza(byte[] paramArrayOfByte, int paramInt1, int paramInt2, int paramInt3);
  
  public final String zzabd() {
    Charset charset = zzbbq.UTF_8;
    return (size() == 0) ? "" : zza(charset);
  }
  
  public abstract boolean zzabe();
  
  public abstract zzbaq zzabf();
  
  protected final int zzabg() { return this.zzdpa; }
  
  public abstract byte zzbn(int paramInt);
  
  protected abstract int zzc(int paramInt1, int paramInt2, int paramInt3);
  
  public abstract zzbah zzk(int paramInt1, int paramInt2);
}
