package com.bumptech.glide.load.resource.bitmap;

import android.graphics.Bitmap;
import android.media.MediaMetadataRetriever;
import android.os.ParcelFileDescriptor;
import com.bumptech.glide.load.DecodeFormat;
import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
import java.io.IOException;

public class VideoBitmapDecoder extends Object implements BitmapDecoder<ParcelFileDescriptor> {
  private static final MediaMetadataRetrieverFactory DEFAULT_FACTORY = new MediaMetadataRetrieverFactory();
  
  private static final int NO_FRAME = -1;
  
  private MediaMetadataRetrieverFactory factory;
  
  private int frame;
  
  public VideoBitmapDecoder() { this(DEFAULT_FACTORY, -1); }
  
  public VideoBitmapDecoder(int paramInt) { this(DEFAULT_FACTORY, checkValidFrame(paramInt)); }
  
  VideoBitmapDecoder(MediaMetadataRetrieverFactory paramMediaMetadataRetrieverFactory) { this(paramMediaMetadataRetrieverFactory, -1); }
  
  VideoBitmapDecoder(MediaMetadataRetrieverFactory paramMediaMetadataRetrieverFactory, int paramInt) {
    this.factory = paramMediaMetadataRetrieverFactory;
    this.frame = paramInt;
  }
  
  private static int checkValidFrame(int paramInt) {
    if (paramInt >= 0)
      return paramInt; 
    throw new IllegalArgumentException("Requested frame must be non-negative");
  }
  
  public Bitmap decode(ParcelFileDescriptor paramParcelFileDescriptor, BitmapPool paramBitmapPool, int paramInt1, int paramInt2, DecodeFormat paramDecodeFormat) throws IOException {
    Bitmap bitmap;
    MediaMetadataRetriever mediaMetadataRetriever = this.factory.build();
    mediaMetadataRetriever.setDataSource(paramParcelFileDescriptor.getFileDescriptor());
    paramInt1 = this.frame;
    if (paramInt1 >= 0) {
      bitmap = mediaMetadataRetriever.getFrameAtTime(paramInt1);
    } else {
      bitmap = mediaMetadataRetriever.getFrameAtTime();
    } 
    mediaMetadataRetriever.release();
    paramParcelFileDescriptor.close();
    return bitmap;
  }
  
  public String getId() { return "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap"; }
}
