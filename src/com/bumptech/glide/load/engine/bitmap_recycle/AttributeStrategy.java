package com.bumptech.glide.load.engine.bitmap_recycle;

import android.graphics.Bitmap;
import com.bumptech.glide.util.Util;

class AttributeStrategy implements LruPoolStrategy {
  private final GroupedLinkedMap<Key, Bitmap> groupedMap = new GroupedLinkedMap();
  
  private final KeyPool keyPool = new KeyPool();
  
  private static String getBitmapString(int paramInt1, int paramInt2, Bitmap.Config paramConfig) {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("[");
    stringBuilder.append(paramInt1);
    stringBuilder.append("x");
    stringBuilder.append(paramInt2);
    stringBuilder.append("], ");
    stringBuilder.append(paramConfig);
    return stringBuilder.toString();
  }
  
  private static String getBitmapString(Bitmap paramBitmap) { return getBitmapString(paramBitmap.getWidth(), paramBitmap.getHeight(), paramBitmap.getConfig()); }
  
  public Bitmap get(int paramInt1, int paramInt2, Bitmap.Config paramConfig) {
    Key key = this.keyPool.get(paramInt1, paramInt2, paramConfig);
    return (Bitmap)this.groupedMap.get(key);
  }
  
  public int getSize(Bitmap paramBitmap) { return Util.getBitmapByteSize(paramBitmap); }
  
  public String logBitmap(int paramInt1, int paramInt2, Bitmap.Config paramConfig) { return getBitmapString(paramInt1, paramInt2, paramConfig); }
  
  public String logBitmap(Bitmap paramBitmap) { return getBitmapString(paramBitmap); }
  
  public void put(Bitmap paramBitmap) {
    Key key = this.keyPool.get(paramBitmap.getWidth(), paramBitmap.getHeight(), paramBitmap.getConfig());
    this.groupedMap.put(key, paramBitmap);
  }
  
  public Bitmap removeLast() { return (Bitmap)this.groupedMap.removeLast(); }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("AttributeStrategy:\n  ");
    stringBuilder.append(this.groupedMap);
    return stringBuilder.toString();
  }
}
