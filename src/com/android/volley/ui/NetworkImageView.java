package com.android.volley.ui;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.TransitionDrawable;
import android.util.AttributeSet;
import android.view.ViewPropertyAnimator;
import android.widget.ImageView;
import com.android.volley.Response;
import com.android.volley.misc.Utils;
import com.android.volley.toolbox.ImageLoader;

public class NetworkImageView extends ImageView {
  private static final int HALF_FADE_IN_TIME = 100;
  
  private static final ColorDrawable transparentDrawable = new ColorDrawable(17170445);
  
  private final int[] attrsArray = { 16843033 };
  
  int mDefaultImageId;
  
  int mErrorImageId;
  
  private boolean mFadeInImage = true;
  
  protected ImageLoader.ImageContainer mImageContainer;
  
  protected ImageLoader mImageLoader;
  
  private Response.Listener<Bitmap> mListener;
  
  private int mMaxImageHeight = 0;
  
  private int mMaxImageWidth = 0;
  
  protected String mUrl;
  
  public NetworkImageView(Context paramContext) { this(paramContext, null); }
  
  public NetworkImageView(Context paramContext, AttributeSet paramAttributeSet) { this(paramContext, paramAttributeSet, 0); }
  
  public NetworkImageView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {
    super(paramContext, paramAttributeSet, paramInt);
    TypedArray typedArray = paramContext.obtainStyledAttributes(paramAttributeSet, this.attrsArray);
    setDefaultImageResId(typedArray.getResourceId(0, 0));
    typedArray.recycle();
  }
  
  @SuppressLint({"NewApi"})
  private void setAnimateImageBitmap(Bitmap paramBitmap, boolean paramBoolean) {
    TransitionDrawable transitionDrawable;
    if (paramBoolean && Utils.hasHoneycombMR1()) {
      long l;
      ViewPropertyAnimator viewPropertyAnimator = animate().scaleY(0.95F).scaleX(0.95F).alpha(0.0F);
      if (getDrawable() == null) {
        l = 0L;
      } else {
        l = 100L;
      } 
      viewPropertyAnimator.setDuration(l).setListener(new Object(this, paramBitmap));
      return;
    } 
    if (paramBoolean) {
      ColorDrawable colorDrawable;
      if (getDrawable() != null) {
        colorDrawable = getDrawable();
      } else {
        colorDrawable = transparentDrawable;
      } 
      transitionDrawable = new TransitionDrawable(new Drawable[] { colorDrawable, new BitmapDrawable(getResources(), paramBitmap) });
      setImageDrawable(transitionDrawable);
      transitionDrawable.startTransition(200);
      return;
    } 
    setImageBitmap(transitionDrawable);
  }
  
  protected void drawableStateChanged() {
    super.drawableStateChanged();
    invalidate();
  }
  
  public Response.Listener<Bitmap> getImageListener() { return this.mListener; }
  
  void loadImageIfNecessary(boolean paramBoolean) { // Byte code:
    //   0: aload_0
    //   1: invokevirtual getWidth : ()I
    //   4: istore #5
    //   6: aload_0
    //   7: invokevirtual getHeight : ()I
    //   10: istore #6
    //   12: aload_0
    //   13: invokevirtual getScaleType : ()Landroid/widget/ImageView$ScaleType;
    //   16: astore #8
    //   18: aload_0
    //   19: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   22: astore #9
    //   24: iconst_1
    //   25: istore #7
    //   27: aload #9
    //   29: ifnull -> 71
    //   32: aload_0
    //   33: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   36: getfield width : I
    //   39: bipush #-2
    //   41: if_icmpne -> 49
    //   44: iconst_1
    //   45: istore_2
    //   46: goto -> 51
    //   49: iconst_0
    //   50: istore_2
    //   51: iload_2
    //   52: istore_3
    //   53: aload_0
    //   54: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   57: getfield height : I
    //   60: bipush #-2
    //   62: if_icmpne -> 73
    //   65: iconst_1
    //   66: istore #4
    //   68: goto -> 78
    //   71: iconst_0
    //   72: istore_3
    //   73: iconst_0
    //   74: istore #4
    //   76: iload_3
    //   77: istore_2
    //   78: iload_2
    //   79: ifeq -> 93
    //   82: iload #4
    //   84: ifeq -> 93
    //   87: iload #7
    //   89: istore_3
    //   90: goto -> 95
    //   93: iconst_0
    //   94: istore_3
    //   95: iload #5
    //   97: ifne -> 110
    //   100: iload #6
    //   102: ifne -> 110
    //   105: iload_3
    //   106: ifne -> 110
    //   109: return
    //   110: aload_0
    //   111: getfield mUrl : Ljava/lang/String;
    //   114: invokestatic isEmpty : (Ljava/lang/CharSequence;)Z
    //   117: ifeq -> 146
    //   120: aload_0
    //   121: getfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   124: astore #8
    //   126: aload #8
    //   128: ifnull -> 141
    //   131: aload #8
    //   133: invokevirtual cancelRequest : ()V
    //   136: aload_0
    //   137: aconst_null
    //   138: putfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   141: aload_0
    //   142: invokevirtual setDefaultImageOrNull : ()V
    //   145: return
    //   146: aload_0
    //   147: getfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   150: astore #9
    //   152: aload #9
    //   154: ifnull -> 194
    //   157: aload #9
    //   159: invokevirtual getRequestUrl : ()Ljava/lang/String;
    //   162: ifnull -> 194
    //   165: aload_0
    //   166: getfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   169: invokevirtual getRequestUrl : ()Ljava/lang/String;
    //   172: aload_0
    //   173: getfield mUrl : Ljava/lang/String;
    //   176: invokevirtual equals : (Ljava/lang/Object;)Z
    //   179: ifeq -> 183
    //   182: return
    //   183: aload_0
    //   184: getfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   187: invokevirtual cancelRequest : ()V
    //   190: aload_0
    //   191: invokevirtual setDefaultImageOrNull : ()V
    //   194: aload_0
    //   195: getfield mImageLoader : Lcom/android/volley/toolbox/ImageLoader;
    //   198: astore #9
    //   200: aload #9
    //   202: instanceof com/android/volley/cache/SimpleImageLoader
    //   205: ifeq -> 261
    //   208: aload #9
    //   210: checkcast com/android/volley/cache/SimpleImageLoader
    //   213: astore #9
    //   215: aload_0
    //   216: getfield mMaxImageWidth : I
    //   219: istore_2
    //   220: iload_2
    //   221: istore_3
    //   222: iload_2
    //   223: ifne -> 232
    //   226: aload #9
    //   228: invokevirtual getMaxImageWidth : ()I
    //   231: istore_3
    //   232: aload_0
    //   233: getfield mMaxImageHeight : I
    //   236: istore #4
    //   238: iload_3
    //   239: istore #5
    //   241: iload #4
    //   243: istore_2
    //   244: iload #4
    //   246: ifne -> 286
    //   249: aload #9
    //   251: invokevirtual getMaxImageHeight : ()I
    //   254: istore_2
    //   255: iload_3
    //   256: istore #5
    //   258: goto -> 286
    //   261: iload #5
    //   263: istore_3
    //   264: iload_2
    //   265: ifeq -> 270
    //   268: iconst_0
    //   269: istore_3
    //   270: iload_3
    //   271: istore #5
    //   273: iload #6
    //   275: istore_2
    //   276: iload #4
    //   278: ifeq -> 286
    //   281: iconst_0
    //   282: istore_2
    //   283: iload_3
    //   284: istore #5
    //   286: aload_0
    //   287: aload_0
    //   288: getfield mImageLoader : Lcom/android/volley/toolbox/ImageLoader;
    //   291: aload_0
    //   292: getfield mUrl : Ljava/lang/String;
    //   295: new com/android/volley/ui/NetworkImageView$1
    //   298: dup
    //   299: aload_0
    //   300: iload_1
    //   301: invokespecial <init> : (Lcom/android/volley/ui/NetworkImageView;Z)V
    //   304: iload #5
    //   306: iload_2
    //   307: aload #8
    //   309: invokevirtual get : (Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;IILandroid/widget/ImageView$ScaleType;)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   312: putfield mImageContainer : Lcom/android/volley/toolbox/ImageLoader$ImageContainer;
    //   315: return }
  
  protected void onDetachedFromWindow() {
    ImageLoader.ImageContainer imageContainer = this.mImageContainer;
    if (imageContainer != null) {
      imageContainer.cancelRequest();
      setImageBitmap(null);
      this.mImageContainer = null;
    } 
    super.onDetachedFromWindow();
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
    if (this.mImageLoader != null)
      loadImageIfNecessary(true); 
  }
  
  protected void setDefaultImageOrNull() {
    int i = this.mDefaultImageId;
    if (i != 0) {
      setImageResource(i);
      return;
    } 
    setImageBitmap(null);
  }
  
  public void setDefaultImageResId(int paramInt) { this.mDefaultImageId = paramInt; }
  
  public void setErrorImageResId(int paramInt) { this.mErrorImageId = paramInt; }
  
  public void setFadeInImage(boolean paramBoolean) { this.mFadeInImage = paramBoolean; }
  
  public void setImageListener(Response.Listener<Bitmap> paramListener) { this.mListener = paramListener; }
  
  public void setImageUrl(String paramString, ImageLoader paramImageLoader) {
    this.mUrl = paramString;
    this.mImageLoader = paramImageLoader;
    loadImageIfNecessary(false);
  }
  
  public void setMaxImageSize(int paramInt) { setMaxImageSize(paramInt, paramInt); }
  
  public void setMaxImageSize(int paramInt1, int paramInt2) {
    this.mMaxImageWidth = paramInt1;
    this.mMaxImageHeight = paramInt2;
  }
  
  public void setResetImageUrl(String paramString, ImageLoader paramImageLoader) {
    this.mImageContainer = null;
    this.mUrl = paramString;
    this.mImageLoader = paramImageLoader;
    loadImageIfNecessary(false);
  }
}
