package com.android.volley.misc;

import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.InputStream;

public class Exif {
  private static final String TAG = "CameraExif";
  
  public static int getOrientation(InputStream paramInputStream, long paramLong) {
    int j;
    if (paramInputStream == null)
      return 0; 
    InputStreamBuffer inputStreamBuffer = new InputStreamBuffer(paramInputStream, 16, false);
    if (has(inputStreamBuffer, paramLong, 1)) {
      boolean bool;
      if (inputStreamBuffer.get(0) == -1 && inputStreamBuffer.get(1) == -40) {
        bool = true;
      } else {
        bool = false;
      } 
      if (!bool)
        return 0; 
    } 
    int i = 0;
    while (true) {
      j = i;
      if (has(inputStreamBuffer, paramLong, i + 3)) {
        int k = i + true;
        j = k;
        if ((inputStreamBuffer.get(i) & 0xFF) == 255) {
          byte b = inputStreamBuffer.get(k) & 0xFF;
          if (b == 255) {
            i = k;
            continue;
          } 
          j = k + 1;
          i = j;
          if (b != 216) {
            if (b == 1) {
              i = j;
              continue;
            } 
            if (b == 217 || b == 218) {
              inputStreamBuffer.advanceTo(j - 4);
            } else {
              k = pack(inputStreamBuffer, j, 2, false);
              if (k >= 2) {
                i = j + k;
                if (has(inputStreamBuffer, paramLong, i - 1)) {
                  if (b == 225 && k >= 8 && pack(inputStreamBuffer, j + 2, 4, false) == 1165519206 && pack(inputStreamBuffer, j + 6, 2, false) == 0) {
                    j += 8;
                    i = k - 8;
                    inputStreamBuffer.advanceTo(j - 4);
                    break;
                  } 
                  inputStreamBuffer.advanceTo(i - 4);
                  continue;
                } 
              } 
              Log.e("CameraExif", "Invalid length");
              return 0;
            } 
          } else {
            continue;
          } 
        } 
      } 
      i = 0;
      break;
    } 
    if (i > 8) {
      boolean bool;
      int k = pack(inputStreamBuffer, j, 4, false);
      if (k != 1229531648 && k != 1296891946) {
        Log.e("CameraExif", "Invalid byte order");
        return 0;
      } 
      if (k == 1229531648) {
        bool = true;
      } else {
        bool = false;
      } 
      int m = pack(inputStreamBuffer, j + 4, 4, bool) + 2;
      if (m < 10 || m > i) {
        Log.e("CameraExif", "Invalid offset");
        return 0;
      } 
      k = j + m;
      j = i - m;
      inputStreamBuffer.advanceTo(k - 4);
      for (i = pack(inputStreamBuffer, k - 2, 2, bool); i > 0 && j >= 12; i--) {
        if (pack(inputStreamBuffer, k, 2, bool) == 274) {
          i = pack(inputStreamBuffer, k + 8, 2, bool);
          if (i != 1) {
            if (i != 3) {
              if (i != 6) {
                if (i != 8) {
                  Log.i("CameraExif", "Unsupported orientation");
                  return 0;
                } 
                return 270;
              } 
              return 90;
            } 
            return 180;
          } 
          return 0;
        } 
        k += 12;
        j -= 12;
        inputStreamBuffer.advanceTo(k - 4);
      } 
    } 
    return 0;
  }
  
  @Deprecated
  public static int getOrientation(byte[] paramArrayOfByte) { return getOrientation(new ByteArrayInputStream(paramArrayOfByte), paramArrayOfByte.length); }
  
  private static boolean has(InputStreamBuffer paramInputStreamBuffer, long paramLong, int paramInt) { return (paramLong >= 0L) ? ((paramInt < paramLong)) : paramInputStreamBuffer.has(paramInt); }
  
  private static int pack(InputStreamBuffer paramInputStreamBuffer, int paramInt1, int paramInt2, boolean paramBoolean) {
    int i;
    if (paramBoolean) {
      paramInt1 += paramInt2 - 1;
      i = -1;
    } else {
      i = 1;
    } 
    byte b = 0;
    while (paramInt2 > 0) {
      b = paramInputStreamBuffer.get(paramInt1) & 0xFF | b << 8;
      paramInt1 += i;
      paramInt2--;
    } 
    return b;
  }
}
