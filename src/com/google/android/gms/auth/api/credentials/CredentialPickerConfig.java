package com.google.android.gms.auth.api.credentials;

import android.os.Parcel;
import android.os.Parcelable;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Class;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Constructor;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Field;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Param;

@Class(creator = "CredentialPickerConfigCreator")
public final class CredentialPickerConfig extends AbstractSafeParcelable implements ReflectedParcelable {
  public static final Parcelable.Creator<CredentialPickerConfig> CREATOR = new zze();
  
  @Field(getter = "shouldShowCancelButton", id = 2)
  private final boolean mShowCancelButton;
  
  @Field(id = 1000)
  private final int zzu;
  
  @Field(getter = "shouldShowAddAccountButton", id = 1)
  private final boolean zzv;
  
  @Deprecated
  @Field(getter = "isForNewAccount", id = 3)
  private final boolean zzw;
  
  @Field(getter = "getPromptInternalId", id = 4)
  private final int zzx;
  
  @Constructor
  CredentialPickerConfig(@Param(id = 1000) int paramInt1, @Param(id = 1) boolean paramBoolean1, @Param(id = 2) boolean paramBoolean2, @Param(id = 3) boolean paramBoolean3, @Param(id = 4) int paramInt2) {
    this.zzu = paramInt1;
    this.zzv = paramBoolean1;
    this.mShowCancelButton = paramBoolean2;
    paramBoolean1 = true;
    int i = 1;
    if (paramInt1 < 2) {
      this.zzw = paramBoolean3;
      paramInt1 = i;
      if (paramBoolean3)
        paramInt1 = 3; 
      this.zzx = paramInt1;
      return;
    } 
    if (paramInt2 != 3)
      paramBoolean1 = false; 
    this.zzw = paramBoolean1;
    this.zzx = paramInt2;
  }
  
  private CredentialPickerConfig(Builder paramBuilder) { this(2, Builder.zzc(paramBuilder), Builder.zzd(paramBuilder), false, Builder.zze(paramBuilder)); }
  
  @Deprecated
  public final boolean isForNewAccount() { return (this.zzx == 3); }
  
  public final boolean shouldShowAddAccountButton() { return this.zzv; }
  
  public final boolean shouldShowCancelButton() { return this.mShowCancelButton; }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt) {
    paramInt = SafeParcelWriter.beginObjectHeader(paramParcel);
    SafeParcelWriter.writeBoolean(paramParcel, 1, shouldShowAddAccountButton());
    SafeParcelWriter.writeBoolean(paramParcel, 2, shouldShowCancelButton());
    SafeParcelWriter.writeBoolean(paramParcel, 3, isForNewAccount());
    SafeParcelWriter.writeInt(paramParcel, 4, this.zzx);
    SafeParcelWriter.writeInt(paramParcel, 1000, this.zzu);
    SafeParcelWriter.finishObjectHeader(paramParcel, paramInt);
  }
}
