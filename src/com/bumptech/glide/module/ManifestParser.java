package com.bumptech.glide.module;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import java.util.ArrayList;
import java.util.List;

public final class ManifestParser {
  private static final String GLIDE_MODULE_VALUE = "GlideModule";
  
  private final Context context;
  
  public ManifestParser(Context paramContext) { this.context = paramContext; }
  
  private static GlideModule parseModule(String paramString) {
    try {
      StringBuilder stringBuilder = Class.forName(paramString);
      try {
        Object object = stringBuilder.newInstance();
        if (object instanceof GlideModule)
          return (GlideModule)object; 
        stringBuilder = new StringBuilder();
        stringBuilder.append("Expected instanceof GlideModule, but found: ");
        stringBuilder.append(object);
        throw new RuntimeException(stringBuilder.toString());
      } catch (InstantiationException instantiationException) {
        StringBuilder stringBuilder1 = new StringBuilder();
        stringBuilder1.append("Unable to instantiate GlideModule implementation for ");
        stringBuilder1.append(stringBuilder);
        throw new RuntimeException(stringBuilder1.toString(), instantiationException);
      } catch (IllegalAccessException illegalAccessException) {
        StringBuilder stringBuilder1 = new StringBuilder();
        stringBuilder1.append("Unable to instantiate GlideModule implementation for ");
        stringBuilder1.append(stringBuilder);
        throw new RuntimeException(stringBuilder1.toString(), illegalAccessException);
      } 
    } catch (ClassNotFoundException paramString) {
      throw new IllegalArgumentException("Unable to find GlideModule implementation", paramString);
    } 
  }
  
  public List<GlideModule> parse() {
    arrayList = new ArrayList();
    try {
      ApplicationInfo applicationInfo = this.context.getPackageManager().getApplicationInfo(this.context.getPackageName(), 128);
      if (applicationInfo.metaData != null)
        for (String str : applicationInfo.metaData.keySet()) {
          if ("GlideModule".equals(applicationInfo.metaData.get(str)))
            arrayList.add(parseModule(str)); 
        }  
      return arrayList;
    } catch (android.content.pm.PackageManager.NameNotFoundException arrayList) {
      RuntimeException runtimeException = new RuntimeException("Unable to find metadata to parse GlideModules", arrayList);
      throw runtimeException;
    } 
  }
}
