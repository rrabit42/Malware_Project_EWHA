package com.google.android.gms.auth.api.credentials;

import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Class;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Constructor;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Field;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Param;

@Class(creator = "HintRequestCreator")
public final class HintRequest extends AbstractSafeParcelable implements ReflectedParcelable {
  public static final Parcelable.Creator<HintRequest> CREATOR = new zzj();
  
  @Field(getter = "getAccountTypes", id = 4)
  private final String[] zzaa;
  
  @Field(getter = "isIdTokenRequested", id = 5)
  private final boolean zzad;
  
  @Field(getter = "getServerClientId", id = 6)
  private final String zzae;
  
  @Field(getter = "getIdTokenNonce", id = 7)
  private final String zzaf;
  
  @Field(getter = "getHintPickerConfig", id = 1)
  private final CredentialPickerConfig zzah;
  
  @Field(getter = "isEmailAddressIdentifierSupported", id = 2)
  private final boolean zzai;
  
  @Field(getter = "isPhoneNumberIdentifierSupported", id = 3)
  private final boolean zzaj;
  
  @Field(id = 1000)
  private final int zzu;
  
  @Constructor
  HintRequest(@Param(id = 1000) int paramInt, @Param(id = 1) CredentialPickerConfig paramCredentialPickerConfig, @Param(id = 2) boolean paramBoolean1, @Param(id = 3) boolean paramBoolean2, @Param(id = 4) String[] paramArrayOfString, @Param(id = 5) boolean paramBoolean3, @Param(id = 6) String paramString1, @Param(id = 7) String paramString2) {
    this.zzu = paramInt;
    this.zzah = (CredentialPickerConfig)Preconditions.checkNotNull(paramCredentialPickerConfig);
    this.zzai = paramBoolean1;
    this.zzaj = paramBoolean2;
    this.zzaa = (String[])Preconditions.checkNotNull(paramArrayOfString);
    if (this.zzu < 2) {
      this.zzad = true;
      this.zzae = null;
      this.zzaf = null;
      return;
    } 
    this.zzad = paramBoolean3;
    this.zzae = paramString1;
    this.zzaf = paramString2;
  }
  
  private HintRequest(Builder paramBuilder) { this(2, Builder.zzc(paramBuilder), Builder.zzd(paramBuilder), Builder.zze(paramBuilder), Builder.zzf(paramBuilder), Builder.zzg(paramBuilder), Builder.zzh(paramBuilder), Builder.zzi(paramBuilder)); }
  
  @NonNull
  public final String[] getAccountTypes() { return this.zzaa; }
  
  @NonNull
  public final CredentialPickerConfig getHintPickerConfig() { return this.zzah; }
  
  @Nullable
  public final String getIdTokenNonce() { return this.zzaf; }
  
  @Nullable
  public final String getServerClientId() { return this.zzae; }
  
  public final boolean isEmailAddressIdentifierSupported() { return this.zzai; }
  
  public final boolean isIdTokenRequested() { return this.zzad; }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt) {
    int i = SafeParcelWriter.beginObjectHeader(paramParcel);
    SafeParcelWriter.writeParcelable(paramParcel, 1, getHintPickerConfig(), paramInt, false);
    SafeParcelWriter.writeBoolean(paramParcel, 2, isEmailAddressIdentifierSupported());
    SafeParcelWriter.writeBoolean(paramParcel, 3, this.zzaj);
    SafeParcelWriter.writeStringArray(paramParcel, 4, getAccountTypes(), false);
    SafeParcelWriter.writeBoolean(paramParcel, 5, isIdTokenRequested());
    SafeParcelWriter.writeString(paramParcel, 6, getServerClientId(), false);
    SafeParcelWriter.writeString(paramParcel, 7, getIdTokenNonce(), false);
    SafeParcelWriter.writeInt(paramParcel, 1000, this.zzu);
    SafeParcelWriter.finishObjectHeader(paramParcel, i);
  }
}
