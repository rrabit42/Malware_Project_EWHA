package androidx.work;

import android.arch.lifecycle.LiveData;
import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import com.google.common.util.concurrent.ListenableFuture;
import java.util.Collections;
import java.util.List;

public abstract class WorkContinuation {
  @NonNull
  public static WorkContinuation combine(@NonNull List<WorkContinuation> paramList) { return ((WorkContinuation)paramList.get(0)).combineInternal(paramList); }
  
  @NonNull
  @RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
  protected abstract WorkContinuation combineInternal(@NonNull List<WorkContinuation> paramList);
  
  @NonNull
  public abstract Operation enqueue();
  
  @NonNull
  public abstract ListenableFuture<List<WorkInfo>> getWorkInfos();
  
  @NonNull
  public abstract LiveData<List<WorkInfo>> getWorkInfosLiveData();
  
  @NonNull
  public final WorkContinuation then(@NonNull OneTimeWorkRequest paramOneTimeWorkRequest) { return then(Collections.singletonList(paramOneTimeWorkRequest)); }
  
  @NonNull
  public abstract WorkContinuation then(@NonNull List<OneTimeWorkRequest> paramList);
}
