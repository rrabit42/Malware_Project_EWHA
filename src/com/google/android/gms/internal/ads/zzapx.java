package com.google.android.gms.internal.ads;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import com.google.android.gms.ads.internal.zzbv;
import java.util.concurrent.TimeUnit;

@zzadh
public final class zzapx {
  private final Context mContext;
  
  private final String zzchp;
  
  @Nullable
  private final zznx zzcxo;
  
  private boolean zzcxs;
  
  @Nullable
  private final zznv zzdad;
  
  private final zzalp zzdae = (new zzals()).zza("min_1", Double.MIN_VALUE, 1.0D).zza("1_5", 1.0D, 5.0D).zza("5_10", 5.0D, 10.0D).zza("10_20", 10.0D, 20.0D).zza("20_30", 20.0D, 30.0D).zza("30_max", 30.0D, Double.MAX_VALUE).zzrz();
  
  private final long[] zzdaf;
  
  private final String[] zzdag;
  
  private boolean zzdah = false;
  
  private boolean zzdai = false;
  
  private boolean zzdaj = false;
  
  private boolean zzdak = false;
  
  private zzapg zzdal;
  
  private boolean zzdam;
  
  private boolean zzdan;
  
  private long zzdao = -1L;
  
  private final zzang zzzw;
  
  public zzapx(Context paramContext, zzang paramzzang, String paramString, @Nullable zznx paramzznx, @Nullable zznv paramzznv) {
    this.mContext = paramContext;
    this.zzzw = paramzzang;
    this.zzchp = paramString;
    this.zzcxo = paramzznx;
    this.zzdad = paramzznv;
    zzna zzna = zznk.zzave;
    String str = (String)zzkb.zzik().zzd(zzna);
    if (str == null) {
      this.zzdag = new String[0];
      this.zzdaf = new long[0];
      return;
    } 
    String[] arrayOfString = TextUtils.split(str, ",");
    this.zzdag = new String[arrayOfString.length];
    this.zzdaf = new long[arrayOfString.length];
    byte b;
    for (b = 0; b < arrayOfString.length; b++) {
      try {
        this.zzdaf[b] = Long.parseLong(arrayOfString[b]);
      } catch (NumberFormatException paramzzang) {
        zzakb.zzc("Unable to parse frame hash target time number.", paramzzang);
        this.zzdaf[b] = -1L;
      } 
    } 
  }
  
  public final void onStop() {
    zzna zzna = zznk.zzavd;
    if (((Boolean)zzkb.zzik().zzd(zzna)).booleanValue() && !this.zzdam) {
      Bundle bundle = new Bundle();
      bundle.putString("type", "native-player-metrics");
      bundle.putString("request", this.zzchp);
      bundle.putString("player", this.zzdal.zzsp());
      for (zzalr zzalr : this.zzdae.zzry()) {
        String str = String.valueOf(zzalr.name);
        if (str.length() != 0) {
          str = "fps_c_".concat(str);
        } else {
          str = new String("fps_c_");
        } 
        bundle.putString(str, Integer.toString(zzalr.count));
        str = String.valueOf(zzalr.name);
        if (str.length() != 0) {
          str = "fps_p_".concat(str);
        } else {
          str = new String("fps_p_");
        } 
        bundle.putString(str, Double.toString(zzalr.zzctb));
      } 
      byte b = 0;
      while (true) {
        long[] arrayOfLong = this.zzdaf;
        if (b < arrayOfLong.length) {
          String str = this.zzdag[b];
          if (str != null) {
            String str1;
            StringBuilder stringBuilder = new StringBuilder((str1 = String.valueOf(Long.valueOf(arrayOfLong[b]))).valueOf(str1).length() + 3);
            stringBuilder.append("fh_");
            stringBuilder.append(str1);
            bundle.putString(stringBuilder.toString(), str);
          } 
          b++;
          continue;
        } 
        break;
      } 
      zzbv.zzek().zza(this.mContext, this.zzzw.zzcw, "gmob-apps", bundle, true);
      this.zzdam = true;
    } 
  }
  
  public final void zzb(zzapg paramzzapg) {
    zznq.zza(this.zzcxo, this.zzdad, new String[] { "vpc2" });
    this.zzdah = true;
    zznx zznx1 = this.zzcxo;
    if (zznx1 != null)
      zznx1.zze("vpn", paramzzapg.zzsp()); 
    this.zzdal = paramzzapg;
  }
  
  public final void zzc(zzapg paramzzapg) {
    if (this.zzdaj && !this.zzdak) {
      if (zzakb.zzqp() && !this.zzdak)
        zzakb.v("VideoMetricsMixin first frame"); 
      zznq.zza(this.zzcxo, this.zzdad, new String[] { "vff2" });
      this.zzdak = true;
    } 
    long l1 = zzbv.zzer().nanoTime();
    if (this.zzcxs && this.zzdan && this.zzdao != -1L) {
      double d1 = TimeUnit.SECONDS.toNanos(1L);
      double d2 = (l1 - this.zzdao);
      Double.isNaN(d1);
      Double.isNaN(d2);
      d1 /= d2;
      this.zzdae.zza(d1);
    } 
    this.zzdan = this.zzcxs;
    this.zzdao = l1;
    zzna zzna = zznk.zzavf;
    l1 = ((Long)zzkb.zzik().zzd(zzna)).longValue();
    long l2 = paramzzapg.getCurrentPosition();
    byte b = 0;
    while (true) {
      String[] arrayOfString = this.zzdag;
      if (b < arrayOfString.length) {
        if (arrayOfString[b] == null && l1 > Math.abs(l2 - this.zzdaf[b])) {
          arrayOfString = this.zzdag;
          Bitmap bitmap = paramzzapg.getBitmap(8, 8);
          l2 = 63L;
          byte b1 = 0;
          l1 = 0L;
          while (b1 < 8) {
            long l = l2;
            byte b2 = 0;
            l2 = l1;
            for (l1 = l; b2 < 8; l1--) {
              int i = bitmap.getPixel(b2, b1);
              if (Color.blue(i) + Color.red(i) + Color.green(i) > 128) {
                l = 1L;
              } else {
                l = 0L;
              } 
              l2 |= l << (int)l1;
              b2++;
            } 
            b1++;
            l = l1;
            l1 = l2;
            l2 = l;
          } 
          arrayOfString[b] = String.format("%016X", new Object[] { Long.valueOf(l1) });
          return;
        } 
        b++;
        continue;
      } 
      break;
    } 
  }
  
  public final void zzsv() {
    if (this.zzdah) {
      if (this.zzdai)
        return; 
      zznq.zza(this.zzcxo, this.zzdad, new String[] { "vfr2" });
      this.zzdai = true;
    } 
  }
  
  public final void zztt() {
    this.zzcxs = true;
    if (this.zzdai && !this.zzdaj) {
      zznq.zza(this.zzcxo, this.zzdad, new String[] { "vfp2" });
      this.zzdaj = true;
    } 
  }
  
  public final void zztu() { this.zzcxs = false; }
}
