package com.google.firebase.iid;

import android.os.Build;
import android.os.Looper;
import android.support.annotation.Keep;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.WorkerThread;
import android.util.Log;
import com.google.android.gms.common.util.VisibleForTesting;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.Tasks;
import com.google.firebase.FirebaseApp;
import com.google.firebase.events.Subscriber;
import com.google.firebase.platforminfo.UserAgentPublisher;
import java.io.IOException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Executor;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import javax.annotation.concurrent.GuardedBy;

public class FirebaseInstanceId {
  private static final long zzaq = TimeUnit.HOURS.toSeconds(8L);
  
  private static zzax zzar;
  
  @VisibleForTesting
  @GuardedBy("FirebaseInstanceId.class")
  private static ScheduledThreadPoolExecutor zzas;
  
  private final Executor zzat;
  
  private final FirebaseApp zzau;
  
  private final zzam zzav;
  
  private MessagingChannel zzaw;
  
  private final zzar zzax;
  
  private final zzba zzay;
  
  @GuardedBy("this")
  private boolean zzaz;
  
  private final zza zzba;
  
  FirebaseInstanceId(FirebaseApp paramFirebaseApp, Subscriber paramSubscriber, UserAgentPublisher paramUserAgentPublisher) { this(paramFirebaseApp, new zzam(paramFirebaseApp.getApplicationContext()), zzh.zze(), zzh.zze(), paramSubscriber, paramUserAgentPublisher); }
  
  private FirebaseInstanceId(FirebaseApp paramFirebaseApp, zzam paramzzam, Executor paramExecutor1, Executor paramExecutor2, Subscriber paramSubscriber, UserAgentPublisher paramUserAgentPublisher) { // Byte code:
    //   0: aload_0
    //   1: invokespecial <init> : ()V
    //   4: aload_0
    //   5: iconst_0
    //   6: putfield zzaz : Z
    //   9: aload_1
    //   10: invokestatic zza : (Lcom/google/firebase/FirebaseApp;)Ljava/lang/String;
    //   13: ifnull -> 185
    //   16: ldc com/google/firebase/iid/FirebaseInstanceId
    //   18: monitorenter
    //   19: getstatic com/google/firebase/iid/FirebaseInstanceId.zzar : Lcom/google/firebase/iid/zzax;
    //   22: ifnonnull -> 39
    //   25: new com/google/firebase/iid/zzax
    //   28: dup
    //   29: aload_1
    //   30: invokevirtual getApplicationContext : ()Landroid/content/Context;
    //   33: invokespecial <init> : (Landroid/content/Context;)V
    //   36: putstatic com/google/firebase/iid/FirebaseInstanceId.zzar : Lcom/google/firebase/iid/zzax;
    //   39: ldc com/google/firebase/iid/FirebaseInstanceId
    //   41: monitorexit
    //   42: aload_0
    //   43: aload_1
    //   44: putfield zzau : Lcom/google/firebase/FirebaseApp;
    //   47: aload_0
    //   48: aload_2
    //   49: putfield zzav : Lcom/google/firebase/iid/zzam;
    //   52: aload_0
    //   53: getfield zzaw : Lcom/google/firebase/iid/MessagingChannel;
    //   56: ifnonnull -> 110
    //   59: aload_1
    //   60: ldc com/google/firebase/iid/MessagingChannel
    //   62: invokevirtual get : (Ljava/lang/Class;)Ljava/lang/Object;
    //   65: checkcast com/google/firebase/iid/MessagingChannel
    //   68: astore #7
    //   70: aload #7
    //   72: ifnull -> 94
    //   75: aload #7
    //   77: invokeinterface isAvailable : ()Z
    //   82: ifeq -> 94
    //   85: aload_0
    //   86: aload #7
    //   88: putfield zzaw : Lcom/google/firebase/iid/MessagingChannel;
    //   91: goto -> 110
    //   94: aload_0
    //   95: new com/google/firebase/iid/zzr
    //   98: dup
    //   99: aload_1
    //   100: aload_2
    //   101: aload_3
    //   102: aload #6
    //   104: invokespecial <init> : (Lcom/google/firebase/FirebaseApp;Lcom/google/firebase/iid/zzam;Ljava/util/concurrent/Executor;Lcom/google/firebase/platforminfo/UserAgentPublisher;)V
    //   107: putfield zzaw : Lcom/google/firebase/iid/MessagingChannel;
    //   110: aload_0
    //   111: aload_0
    //   112: getfield zzaw : Lcom/google/firebase/iid/MessagingChannel;
    //   115: putfield zzaw : Lcom/google/firebase/iid/MessagingChannel;
    //   118: aload_0
    //   119: aload #4
    //   121: putfield zzat : Ljava/util/concurrent/Executor;
    //   124: aload_0
    //   125: new com/google/firebase/iid/zzba
    //   128: dup
    //   129: getstatic com/google/firebase/iid/FirebaseInstanceId.zzar : Lcom/google/firebase/iid/zzax;
    //   132: invokespecial <init> : (Lcom/google/firebase/iid/zzax;)V
    //   135: putfield zzay : Lcom/google/firebase/iid/zzba;
    //   138: aload_0
    //   139: new com/google/firebase/iid/FirebaseInstanceId$zza
    //   142: dup
    //   143: aload_0
    //   144: aload #5
    //   146: invokespecial <init> : (Lcom/google/firebase/iid/FirebaseInstanceId;Lcom/google/firebase/events/Subscriber;)V
    //   149: putfield zzba : Lcom/google/firebase/iid/FirebaseInstanceId$zza;
    //   152: aload_0
    //   153: new com/google/firebase/iid/zzar
    //   156: dup
    //   157: aload_3
    //   158: invokespecial <init> : (Ljava/util/concurrent/Executor;)V
    //   161: putfield zzax : Lcom/google/firebase/iid/zzar;
    //   164: aload_0
    //   165: getfield zzba : Lcom/google/firebase/iid/FirebaseInstanceId$zza;
    //   168: invokevirtual isEnabled : ()Z
    //   171: ifeq -> 178
    //   174: aload_0
    //   175: invokespecial zzh : ()V
    //   178: return
    //   179: astore_1
    //   180: ldc com/google/firebase/iid/FirebaseInstanceId
    //   182: monitorexit
    //   183: aload_1
    //   184: athrow
    //   185: new java/lang/IllegalStateException
    //   188: dup
    //   189: ldc 'FirebaseInstanceId failed to initialize, FirebaseApp is missing project ID'
    //   191: invokespecial <init> : (Ljava/lang/String;)V
    //   194: athrow
    // Exception table:
    //   from	to	target	type
    //   19	39	179	finally
    //   39	42	179	finally
    //   180	183	179	finally }
  
  public static FirebaseInstanceId getInstance() { return getInstance(FirebaseApp.getInstance()); }
  
  @Keep
  public static FirebaseInstanceId getInstance(@NonNull FirebaseApp paramFirebaseApp) { return (FirebaseInstanceId)paramFirebaseApp.get(FirebaseInstanceId.class); }
  
  private final void startSync() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield zzaz : Z
    //   6: ifne -> 14
    //   9: aload_0
    //   10: lconst_0
    //   11: invokevirtual zza : (J)V
    //   14: aload_0
    //   15: monitorexit
    //   16: return
    //   17: astore_1
    //   18: aload_0
    //   19: monitorexit
    //   20: aload_1
    //   21: athrow
    // Exception table:
    //   from	to	target	type
    //   2	14	17	finally }
  
  private final Task<InstanceIdResult> zza(String paramString1, String paramString2) {
    paramString2 = zzd(paramString2);
    return Tasks.forResult(null).continueWithTask(this.zzat, new zzo(this, paramString1, paramString2));
  }
  
  private final <T> T zza(Task<T> paramTask) throws IOException {
    try {
      return (T)Tasks.await(paramTask, 30000L, TimeUnit.MILLISECONDS);
    } catch (ExecutionException paramTask) {
      Throwable throwable = paramTask.getCause();
      if (throwable instanceof IOException) {
        if ("INSTANCE_ID_RESET".equals(throwable.getMessage()))
          zzn(); 
        throw (IOException)throwable;
      } 
      if (throwable instanceof RuntimeException)
        throw (RuntimeException)throwable; 
      throw new IOException(paramTask);
    } catch (InterruptedException|java.util.concurrent.TimeoutException paramTask) {
      throw new IOException("SERVICE_NOT_AVAILABLE");
    } 
  }
  
  static void zza(Runnable paramRunnable, long paramLong) { // Byte code:
    //   0: ldc com/google/firebase/iid/FirebaseInstanceId
    //   2: monitorenter
    //   3: getstatic com/google/firebase/iid/FirebaseInstanceId.zzas : Ljava/util/concurrent/ScheduledThreadPoolExecutor;
    //   6: ifnonnull -> 29
    //   9: new java/util/concurrent/ScheduledThreadPoolExecutor
    //   12: dup
    //   13: iconst_1
    //   14: new com/google/android/gms/common/util/concurrent/NamedThreadFactory
    //   17: dup
    //   18: ldc 'FirebaseInstanceId'
    //   20: invokespecial <init> : (Ljava/lang/String;)V
    //   23: invokespecial <init> : (ILjava/util/concurrent/ThreadFactory;)V
    //   26: putstatic com/google/firebase/iid/FirebaseInstanceId.zzas : Ljava/util/concurrent/ScheduledThreadPoolExecutor;
    //   29: getstatic com/google/firebase/iid/FirebaseInstanceId.zzas : Ljava/util/concurrent/ScheduledThreadPoolExecutor;
    //   32: aload_0
    //   33: lload_1
    //   34: getstatic java/util/concurrent/TimeUnit.SECONDS : Ljava/util/concurrent/TimeUnit;
    //   37: invokevirtual schedule : (Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
    //   40: pop
    //   41: ldc com/google/firebase/iid/FirebaseInstanceId
    //   43: monitorexit
    //   44: return
    //   45: astore_0
    //   46: ldc com/google/firebase/iid/FirebaseInstanceId
    //   48: monitorexit
    //   49: aload_0
    //   50: athrow
    // Exception table:
    //   from	to	target	type
    //   3	29	45	finally
    //   29	44	45	finally
    //   46	49	45	finally }
  
  @Nullable
  @VisibleForTesting
  private static zzaw zzb(String paramString1, String paramString2) { return zzar.zzb("", paramString1, paramString2); }
  
  private static String zzd(String paramString) { return (paramString.isEmpty() || paramString.equalsIgnoreCase("fcm") || paramString.equalsIgnoreCase("gcm")) ? "*" : paramString; }
  
  private final void zzh() {
    zzaw zzaw1 = zzk();
    if (zzr() || zza(zzaw1) || this.zzay.zzaq())
      startSync(); 
  }
  
  private static String zzj() { return zzam.zza(zzar.zzi("").getKeyPair()); }
  
  static boolean zzm() { return (Log.isLoggable("FirebaseInstanceId", 3) || (Build.VERSION.SDK_INT == 23 && Log.isLoggable("FirebaseInstanceId", 3))); }
  
  @WorkerThread
  public void deleteInstanceId() {
    if (Looper.getMainLooper() != Looper.myLooper()) {
      String str = zzj();
      zza(this.zzaw.deleteInstanceId(str));
      zzn();
      return;
    } 
    throw new IOException("MAIN_THREAD");
  }
  
  @WorkerThread
  public void deleteToken(String paramString1, String paramString2) throws IOException {
    if (Looper.getMainLooper() != Looper.myLooper()) {
      paramString2 = zzd(paramString2);
      String str1 = zzj();
      String str2 = zzaw.zzb(zzb(paramString1, paramString2));
      zza(this.zzaw.deleteToken(str1, str2, paramString1, paramString2));
      zzar.zzc("", paramString1, paramString2);
      return;
    } 
    throw new IOException("MAIN_THREAD");
  }
  
  public long getCreationTime() { return zzar.zzi("").getCreationTime(); }
  
  @WorkerThread
  public String getId() {
    zzh();
    return zzj();
  }
  
  @NonNull
  public Task<InstanceIdResult> getInstanceId() { return zza(zzam.zza(this.zzau), "*"); }
  
  @Deprecated
  @Nullable
  public String getToken() {
    zzaw zzaw1 = zzk();
    if (this.zzaw.needsRefresh() || zza(zzaw1))
      startSync(); 
    return zzaw.zzb(zzaw1);
  }
  
  @WorkerThread
  public String getToken(String paramString1, String paramString2) throws IOException {
    if (Looper.getMainLooper() != Looper.myLooper())
      return ((InstanceIdResult)zza(zza(paramString1, paramString2))).getToken(); 
    throw new IOException("MAIN_THREAD");
  }
  
  public final Task<Void> zza(String paramString) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield zzay : Lcom/google/firebase/iid/zzba;
    //   6: aload_1
    //   7: invokevirtual zza : (Ljava/lang/String;)Lcom/google/android/gms/tasks/Task;
    //   10: astore_1
    //   11: aload_0
    //   12: invokespecial startSync : ()V
    //   15: aload_0
    //   16: monitorexit
    //   17: aload_1
    //   18: areturn
    //   19: astore_1
    //   20: aload_0
    //   21: monitorexit
    //   22: aload_1
    //   23: athrow
    // Exception table:
    //   from	to	target	type
    //   2	15	19	finally }
  
  final void zza(long paramLong) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: ldc2_w 30
    //   5: lload_1
    //   6: iconst_1
    //   7: lshl
    //   8: invokestatic max : (JJ)J
    //   11: getstatic com/google/firebase/iid/FirebaseInstanceId.zzaq : J
    //   14: invokestatic min : (JJ)J
    //   17: lstore_3
    //   18: new com/google/firebase/iid/zzaz
    //   21: dup
    //   22: aload_0
    //   23: aload_0
    //   24: getfield zzav : Lcom/google/firebase/iid/zzam;
    //   27: aload_0
    //   28: getfield zzay : Lcom/google/firebase/iid/zzba;
    //   31: lload_3
    //   32: invokespecial <init> : (Lcom/google/firebase/iid/FirebaseInstanceId;Lcom/google/firebase/iid/zzam;Lcom/google/firebase/iid/zzba;J)V
    //   35: lload_1
    //   36: invokestatic zza : (Ljava/lang/Runnable;J)V
    //   39: aload_0
    //   40: iconst_1
    //   41: putfield zzaz : Z
    //   44: aload_0
    //   45: monitorexit
    //   46: return
    //   47: astore #5
    //   49: aload_0
    //   50: monitorexit
    //   51: aload #5
    //   53: athrow
    // Exception table:
    //   from	to	target	type
    //   2	44	47	finally }
  
  final void zza(boolean paramBoolean) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: iload_1
    //   4: putfield zzaz : Z
    //   7: aload_0
    //   8: monitorexit
    //   9: return
    //   10: astore_2
    //   11: aload_0
    //   12: monitorexit
    //   13: aload_2
    //   14: athrow
    // Exception table:
    //   from	to	target	type
    //   2	7	10	finally }
  
  final boolean zza(@Nullable zzaw paramzzaw) { return (paramzzaw == null || paramzzaw.zzg(this.zzav.zzad())); }
  
  final void zzb(String paramString) throws IOException {
    zzaw zzaw1 = zzk();
    if (!zza(zzaw1)) {
      String str1 = zzj();
      String str2 = zzaw1.zzbx;
      zza(this.zzaw.subscribeToTopic(str1, str2, paramString));
      return;
    } 
    throw new IOException("token not available");
  }
  
  @VisibleForTesting
  public final void zzb(boolean paramBoolean) { this.zzba.setEnabled(paramBoolean); }
  
  final void zzc(String paramString) throws IOException {
    zzaw zzaw1 = zzk();
    if (!zza(zzaw1)) {
      String str = zzj();
      zza(this.zzaw.unsubscribeFromTopic(str, zzaw1.zzbx, paramString));
      return;
    } 
    throw new IOException("token not available");
  }
  
  final FirebaseApp zzi() { return this.zzau; }
  
  @Nullable
  final zzaw zzk() { return zzb(zzam.zza(this.zzau), "*"); }
  
  final String zzl() { return getToken(zzam.zza(this.zzau), "*"); }
  
  final void zzn() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: getstatic com/google/firebase/iid/FirebaseInstanceId.zzar : Lcom/google/firebase/iid/zzax;
    //   5: invokevirtual zzal : ()V
    //   8: aload_0
    //   9: getfield zzba : Lcom/google/firebase/iid/FirebaseInstanceId$zza;
    //   12: invokevirtual isEnabled : ()Z
    //   15: ifeq -> 22
    //   18: aload_0
    //   19: invokespecial startSync : ()V
    //   22: aload_0
    //   23: monitorexit
    //   24: return
    //   25: astore_1
    //   26: aload_0
    //   27: monitorexit
    //   28: aload_1
    //   29: athrow
    // Exception table:
    //   from	to	target	type
    //   2	22	25	finally }
  
  final boolean zzo() { return this.zzaw.isAvailable(); }
  
  final void zzp() {
    zzar.zzj("");
    startSync();
  }
  
  @VisibleForTesting
  public final boolean zzq() { return this.zzba.isEnabled(); }
  
  final boolean zzr() { return this.zzaw.needsRefresh(); }
}
