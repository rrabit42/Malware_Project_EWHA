package com.google.android.gms.internal.ads;

import java.nio.ByteBuffer;
import java.security.GeneralSecurityException;

public final class zzayk {
  public static final void zza(ByteBuffer paramByteBuffer1, ByteBuffer paramByteBuffer2, ByteBuffer paramByteBuffer3, int paramInt) {
    if (paramInt >= 0 && paramByteBuffer2.remaining() >= paramInt && paramByteBuffer3.remaining() >= paramInt && paramByteBuffer1.remaining() >= paramInt) {
      byte b;
      for (b = 0; b < paramInt; b++)
        paramByteBuffer1.put((byte)(paramByteBuffer2.get() ^ paramByteBuffer3.get())); 
      return;
    } 
    IllegalArgumentException illegalArgumentException = new IllegalArgumentException("That combination of buffers, offsets and length to xor result in out-of-bond accesses.");
    throw illegalArgumentException;
  }
  
  public static byte[] zza(byte[]... paramVarArgs) throws GeneralSecurityException {
    int j = paramVarArgs.length;
    byte b = 0;
    int i = 0;
    while (b < j) {
      byte[] arrayOfByte1 = paramVarArgs[b];
      if (i <= Integer.MAX_VALUE - arrayOfByte1.length) {
        i += arrayOfByte1.length;
        b++;
        continue;
      } 
      throw new GeneralSecurityException("exceeded size limit");
    } 
    byte[] arrayOfByte = new byte[i];
    j = paramVarArgs.length;
    b = 0;
    i = 0;
    while (b < j) {
      byte[] arrayOfByte1 = paramVarArgs[b];
      System.arraycopy(arrayOfByte1, 0, arrayOfByte, i, arrayOfByte1.length);
      i += arrayOfByte1.length;
      b++;
    } 
    return arrayOfByte;
  }
}
