package com.bumptech.glide.load.model.stream;

import com.bumptech.glide.load.data.DataFetcher;
import com.bumptech.glide.load.data.HttpUrlFetcher;
import com.bumptech.glide.load.model.GlideUrl;
import com.bumptech.glide.load.model.ModelCache;
import com.bumptech.glide.load.model.ModelLoader;
import java.io.InputStream;

public class HttpUrlGlideUrlLoader extends Object implements ModelLoader<GlideUrl, InputStream> {
  private final ModelCache<GlideUrl, GlideUrl> modelCache;
  
  public HttpUrlGlideUrlLoader() { this(null); }
  
  public HttpUrlGlideUrlLoader(ModelCache<GlideUrl, GlideUrl> paramModelCache) { this.modelCache = paramModelCache; }
  
  public DataFetcher<InputStream> getResourceFetcher(GlideUrl paramGlideUrl, int paramInt1, int paramInt2) {
    ModelCache modelCache1 = this.modelCache;
    GlideUrl glideUrl = paramGlideUrl;
    if (modelCache1 != null) {
      glideUrl = (GlideUrl)modelCache1.get(paramGlideUrl, 0, 0);
      if (glideUrl == null) {
        this.modelCache.put(paramGlideUrl, 0, 0, paramGlideUrl);
        glideUrl = paramGlideUrl;
      } 
    } 
    return new HttpUrlFetcher(glideUrl);
  }
}
