package com.google.android.gms.internal.ads;

import android.os.Bundle;
import android.os.RemoteException;
import com.google.android.gms.ads.VideoController;
import com.google.android.gms.ads.formats.NativeAd;
import com.google.android.gms.ads.formats.UnifiedNativeAd;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

@zzadh
public final class zzru extends UnifiedNativeAd {
  private final zzrr zzbkw;
  
  private final List<NativeAd.Image> zzbkx = new ArrayList();
  
  private final zzpz zzbky;
  
  private final VideoController zzbkz = new VideoController();
  
  private final NativeAd.AdChoicesInfo zzbla;
  
  public zzru(zzrr paramzzrr) {
    this.zzbkw = paramzzrr;
    Object object = null;
    try {
      List list = this.zzbkw.getImages();
      if (list != null) {
        Iterator iterator = list.iterator();
        while (true) {
          while (true)
            break; 
          if (list != null)
            this.zzbkx.add(new zzpz(list)); 
        } 
      } 
    } catch (RemoteException paramzzrr) {
      zzane.zzb("", paramzzrr);
    } 
  }
  
  private final IObjectWrapper zzka() {
    try {
      return this.zzbkw.zzka();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final void cancelUnconfirmedClick() {
    try {
      this.zzbkw.cancelUnconfirmedClick();
      return;
    } catch (RemoteException remoteException) {
      zzane.zzb("Failed to cancelUnconfirmedClick", remoteException);
      return;
    } 
  }
  
  public final void destroy() {
    try {
      this.zzbkw.destroy();
      return;
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return;
    } 
  }
  
  public final NativeAd.AdChoicesInfo getAdChoicesInfo() { return this.zzbla; }
  
  public final String getAdvertiser() {
    try {
      return this.zzbkw.getAdvertiser();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final String getBody() {
    try {
      return this.zzbkw.getBody();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final String getCallToAction() {
    try {
      return this.zzbkw.getCallToAction();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final Bundle getExtras() {
    try {
      Bundle bundle = this.zzbkw.getExtras();
      if (bundle != null)
        return bundle; 
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
    } 
    return new Bundle();
  }
  
  public final String getHeadline() {
    try {
      return this.zzbkw.getHeadline();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final NativeAd.Image getIcon() { return this.zzbky; }
  
  public final List<NativeAd.Image> getImages() { return this.zzbkx; }
  
  public final String getMediationAdapterClassName() {
    try {
      return this.zzbkw.getMediationAdapterClassName();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final String getPrice() {
    try {
      return this.zzbkw.getPrice();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final Double getStarRating() {
    try {
      double d = this.zzbkw.getStarRating();
      return (d == -1.0D) ? null : Double.valueOf(d);
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final String getStore() {
    try {
      return this.zzbkw.getStore();
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
      return null;
    } 
  }
  
  public final VideoController getVideoController() {
    try {
      if (this.zzbkw.getVideoController() != null)
        this.zzbkz.zza(this.zzbkw.getVideoController()); 
    } catch (RemoteException remoteException) {
      zzane.zzb("Exception occurred while getting video controller", remoteException);
    } 
    return this.zzbkz;
  }
  
  public final void performClick(Bundle paramBundle) {
    try {
      this.zzbkw.performClick(paramBundle);
      return;
    } catch (RemoteException paramBundle) {
      zzane.zzb("", paramBundle);
      return;
    } 
  }
  
  public final boolean recordImpression(Bundle paramBundle) {
    try {
      return this.zzbkw.recordImpression(paramBundle);
    } catch (RemoteException paramBundle) {
      zzane.zzb("", paramBundle);
      return false;
    } 
  }
  
  public final void reportTouchEvent(Bundle paramBundle) {
    try {
      this.zzbkw.reportTouchEvent(paramBundle);
      return;
    } catch (RemoteException paramBundle) {
      zzane.zzb("", paramBundle);
      return;
    } 
  }
  
  public final void setUnconfirmedClickListener(UnifiedNativeAd.UnconfirmedClickListener paramUnconfirmedClickListener) {
    try {
      this.zzbkw.zza(new zzse(paramUnconfirmedClickListener));
      return;
    } catch (RemoteException paramUnconfirmedClickListener) {
      zzane.zzb("Failed to setUnconfirmedClickListener", paramUnconfirmedClickListener);
      return;
    } 
  }
  
  public final Object zzbh() {
    try {
      IObjectWrapper iObjectWrapper = this.zzbkw.zzke();
      if (iObjectWrapper != null)
        return ObjectWrapper.unwrap(iObjectWrapper); 
    } catch (RemoteException remoteException) {
      zzane.zzb("", remoteException);
    } 
    return null;
  }
}
