package com.google.android.gms.internal.ads;

import java.io.IOException;
import java.util.Arrays;

final class zzbas extends zzbaq {
  private final byte[] buffer;
  
  private int limit;
  
  private int pos;
  
  private final boolean zzdqd;
  
  private int zzdqe;
  
  private int zzdqf;
  
  private int zzdqg;
  
  private int zzdqh = Integer.MAX_VALUE;
  
  private zzbas(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean) {
    super(null);
    this.buffer = paramArrayOfByte;
    this.limit = paramInt2 + paramInt1;
    this.pos = paramInt1;
    this.zzdqf = this.pos;
    this.zzdqd = paramBoolean;
  }
  
  private final int zzacc() throws IOException {
    int j = this.pos;
    int i = this.limit;
    if (i != j) {
      byte[] arrayOfByte = this.buffer;
      int k = j + 1;
      j = arrayOfByte[j];
      if (j >= 0) {
        this.pos = k;
        return j;
      } 
      if (i - k >= 9) {
        i = k + 1;
        j ^= arrayOfByte[k] << 7;
        if (j < 0) {
          k = j ^ 0xFFFFFF80;
        } else {
          k = i + 1;
          j ^= arrayOfByte[i] << 14;
          if (j >= 0) {
            j ^= 0x3F80;
            i = k;
            k = j;
          } else {
            i = k + 1;
            k = j ^ arrayOfByte[k] << 21;
            if (k < 0) {
              k ^= 0xFFE03F80;
            } else {
              int m = i + 1;
              byte b = arrayOfByte[i];
              j = k ^ b << 28 ^ 0xFE03F80;
              k = j;
              i = m;
              if (b < 0) {
                int n = m + 1;
                k = j;
                i = n;
                if (arrayOfByte[m] < 0) {
                  m = n + 1;
                  k = j;
                  i = m;
                  if (arrayOfByte[n] < 0) {
                    n = m + 1;
                    k = j;
                    i = n;
                    if (arrayOfByte[m] < 0) {
                      m = n + 1;
                      k = j;
                      i = m;
                      if (arrayOfByte[n] < 0) {
                        i = m + 1;
                        if (arrayOfByte[m] >= 0) {
                          k = j;
                          this.pos = i;
                          return k;
                        } 
                      } else {
                        this.pos = i;
                        return k;
                      } 
                    } else {
                      this.pos = i;
                      return k;
                    } 
                  } else {
                    this.pos = i;
                    return k;
                  } 
                } else {
                  this.pos = i;
                  return k;
                } 
              } else {
                this.pos = i;
                return k;
              } 
              return (int)super.zzabz();
            } 
          } 
        } 
        this.pos = i;
        return k;
      } 
    } 
    return (int)super.zzabz();
  }
  
  private final long zzacd() throws IOException {
    int j;
    int k = this.pos;
    int i = this.limit;
    if (i != k) {
      byte[] arrayOfByte = this.buffer;
      j = k + 1;
      k = arrayOfByte[k];
      if (k >= 0) {
        this.pos = j;
        return k;
      } 
      if (i - j >= 9) {
        i = j + 1;
        k ^= arrayOfByte[j] << 7;
        if (k < 0) {
          j = k ^ 0xFFFFFF80;
        } else {
          long l1;
          j = i + 1;
          k ^= arrayOfByte[i] << 14;
          if (k >= 0) {
            l1 = (k ^ 0x3F80);
            i = j;
          } else {
            i = j + 1;
            j = k ^ arrayOfByte[j] << 21;
            if (j < 0) {
              j ^= 0xFFE03F80;
            } else {
              long l2 = j;
              j = i + 1;
              long l3 = l2 ^ arrayOfByte[i] << 28;
              if (l3 >= 0L) {
                l2 = 266354560L;
                i = j;
              } else {
                i = j + 1;
                l2 = l3 ^ arrayOfByte[j] << 35;
                if (l2 < 0L) {
                  l3 = -34093383808L;
                } else {
                  j = i + 1;
                  l3 = l2 ^ arrayOfByte[i] << 42;
                  if (l3 >= 0L) {
                    l2 = 4363953127296L;
                    i = j;
                  } else {
                    i = j + 1;
                    l2 = l3 ^ arrayOfByte[j] << 49;
                    if (l2 < 0L) {
                      l3 = -558586000294016L;
                    } else {
                      j = i + 1;
                      l3 = l2 ^ arrayOfByte[i] << 56 ^ 0xFE03F80FE03F80L;
                      i = j;
                      l2 = l3;
                      if (l3 < 0L) {
                        i = j + 1;
                        if (arrayOfByte[j] >= 0L) {
                          l2 = l3;
                          this.pos = i;
                          return l2;
                        } 
                      } else {
                        this.pos = i;
                        return l2;
                      } 
                      return super.zzabz();
                    } 
                    l2 ^= l3;
                  } 
                  l2 ^= l3;
                } 
                l2 ^= l3;
              } 
              l2 ^= l3;
            } 
            l1 = j;
          } 
          this.pos = i;
          return l1;
        } 
      } else {
        return super.zzabz();
      } 
    } else {
      return super.zzabz();
    } 
    long l = j;
  }
  
  private final int zzace() throws IOException {
    int i = this.pos;
    if (this.limit - i >= 4) {
      byte[] arrayOfByte = this.buffer;
      this.pos = i + 4;
      byte b1 = arrayOfByte[i];
      byte b2 = arrayOfByte[i + 1];
      byte b3 = arrayOfByte[i + 2];
      return (arrayOfByte[i + 3] & 0xFF) << 24 | b1 & 0xFF | (b2 & 0xFF) << 8 | (b3 & 0xFF) << 16;
    } 
    throw zzbbu.zzadl();
  }
  
  private final long zzacf() throws IOException {
    int i = this.pos;
    if (this.limit - i >= 8) {
      byte[] arrayOfByte = this.buffer;
      this.pos = i + 8;
      long l1 = arrayOfByte[i];
      long l2 = arrayOfByte[i + 1];
      long l3 = arrayOfByte[i + 2];
      long l4 = arrayOfByte[i + 3];
      long l5 = arrayOfByte[i + 4];
      long l6 = arrayOfByte[i + 5];
      long l7 = arrayOfByte[i + 6];
      return (arrayOfByte[i + 7] & 0xFFL) << 56 | l1 & 0xFFL | (l2 & 0xFFL) << 8 | (l3 & 0xFFL) << 16 | (l4 & 0xFFL) << 24 | (l5 & 0xFFL) << 32 | (l6 & 0xFFL) << 40 | (l7 & 0xFFL) << 48;
    } 
    throw zzbbu.zzadl();
  }
  
  private final void zzacg() {
    this.limit += this.zzdqe;
    int i = this.limit;
    int j = i - this.zzdqf;
    int k = this.zzdqh;
    if (j > k) {
      this.zzdqe = j - k;
      this.limit = i - this.zzdqe;
      return;
    } 
    this.zzdqe = 0;
  }
  
  private final byte zzach() throws IOException {
    int i = this.pos;
    if (i != this.limit) {
      byte[] arrayOfByte = this.buffer;
      this.pos = i + 1;
      return arrayOfByte[i];
    } 
    throw zzbbu.zzadl();
  }
  
  public final double readDouble() throws IOException { return Double.longBitsToDouble(zzacf()); }
  
  public final float readFloat() throws IOException { return Float.intBitsToFloat(zzace()); }
  
  public final String readString() throws IOException {
    int i = zzacc();
    if (i > 0) {
      int j = this.limit;
      int k = this.pos;
      if (i <= j - k) {
        String str = new String(this.buffer, k, i, zzbbq.UTF_8);
        this.pos += i;
        return str;
      } 
    } 
    if (i == 0)
      return ""; 
    if (i < 0)
      throw zzbbu.zzadm(); 
    throw zzbbu.zzadl();
  }
  
  public final int zzabk() throws IOException {
    if (super.zzaca()) {
      this.zzdqg = 0;
      return 0;
    } 
    this.zzdqg = zzacc();
    int i = this.zzdqg;
    if (i >>> 3 != 0)
      return i; 
    throw zzbbu.zzado();
  }
  
  public final long zzabl() throws IOException { return zzacd(); }
  
  public final long zzabm() throws IOException { return zzacd(); }
  
  public final int zzabn() throws IOException { return zzacc(); }
  
  public final long zzabo() throws IOException { return zzacf(); }
  
  public final int zzabp() throws IOException { return zzace(); }
  
  public final boolean zzabq() throws IOException { return (zzacd() != 0L); }
  
  public final String zzabr() throws IOException {
    int i = zzacc();
    if (i > 0) {
      int j = this.limit;
      int k = this.pos;
      if (i <= j - k) {
        if (zzbem.zzf(this.buffer, k, k + i)) {
          j = this.pos;
          this.pos = j + i;
          return new String(this.buffer, j, i, zzbbq.UTF_8);
        } 
        throw zzbbu.zzads();
      } 
    } 
    if (i == 0)
      return ""; 
    if (i <= 0)
      throw zzbbu.zzadm(); 
    throw zzbbu.zzadl();
  }
  
  public final zzbah zzabs() throws IOException {
    int i = zzacc();
    if (i > 0) {
      int j = this.limit;
      int k = this.pos;
      if (i <= j - k) {
        zzbah zzbah = zzbah.zzc(this.buffer, k, i);
        this.pos += i;
        return zzbah;
      } 
    } 
    if (i == 0)
      return zzbah.zzdpq; 
    if (i > 0) {
      int j = this.limit;
      int k = this.pos;
      if (i <= j - k) {
        this.pos = i + k;
        byte[] arrayOfByte = Arrays.copyOfRange(this.buffer, k, this.pos);
        return zzbah.zzp(arrayOfByte);
      } 
    } 
    if (i <= 0) {
      if (i == 0) {
        byte[] arrayOfByte = zzbbq.zzduq;
        return zzbah.zzp(arrayOfByte);
      } 
      throw zzbbu.zzadm();
    } 
    throw zzbbu.zzadl();
  }
  
  public final int zzabt() throws IOException { return zzacc(); }
  
  public final int zzabu() throws IOException { return zzacc(); }
  
  public final int zzabv() throws IOException { return zzace(); }
  
  public final long zzabw() throws IOException { return zzacf(); }
  
  public final int zzabx() throws IOException { return zzbu(zzacc()); }
  
  public final long zzaby() throws IOException { return zzl(zzacd()); }
  
  final long zzabz() throws IOException {
    long l = 0L;
    for (byte b = 0; b < 64; b += 7) {
      byte b1 = zzach();
      l |= (b1 & 0x7F) << b;
      if ((b1 & 0x80) == 0)
        return l; 
    } 
    zzbbu zzbbu = zzbbu.zzadn();
    throw zzbbu;
  }
  
  public final boolean zzaca() throws IOException { return (this.pos == this.limit); }
  
  public final int zzacb() throws IOException { return this.pos - this.zzdqf; }
  
  public final void zzbp(int paramInt) throws zzbbu {
    if (this.zzdqg == paramInt)
      return; 
    throw zzbbu.zzadp();
  }
  
  public final boolean zzbq(int paramInt) throws IOException {
    int k = paramInt & 0x7;
    int j = 0;
    int i = 0;
    if (k != 0) {
      if (k != 1) {
        if (k != 2) {
          if (k != 3) {
            if (k != 4) {
              if (k == 5) {
                super.zzbt(4);
                return true;
              } 
              throw zzbbu.zzadq();
            } 
            return false;
          } 
          do {
            i = super.zzabk();
          } while (i != 0 && super.zzbq(i));
          super.zzbp(paramInt >>> 3 << 3 | 0x4);
          return true;
        } 
        super.zzbt(zzacc());
        return true;
      } 
      super.zzbt(8);
      return true;
    } 
    paramInt = j;
    if (this.limit - this.pos >= 10) {
      paramInt = i;
      while (paramInt < 10) {
        byte[] arrayOfByte = this.buffer;
        i = this.pos;
        this.pos = i + 1;
        if (arrayOfByte[i] < 0) {
          paramInt++;
          continue;
        } 
        return true;
      } 
      throw zzbbu.zzadn();
    } 
    while (paramInt < 10) {
      if (zzach() < 0) {
        paramInt++;
        continue;
      } 
      return true;
    } 
    zzbbu zzbbu = zzbbu.zzadn();
    throw zzbbu;
  }
  
  public final int zzbr(int paramInt) throws zzbbu {
    if (paramInt >= 0) {
      paramInt += super.zzacb();
      int i = this.zzdqh;
      if (paramInt <= i) {
        this.zzdqh = paramInt;
        zzacg();
        return i;
      } 
      throw zzbbu.zzadl();
    } 
    throw zzbbu.zzadm();
  }
  
  public final void zzbs(int paramInt) throws zzbbu {
    this.zzdqh = paramInt;
    zzacg();
  }
  
  public final void zzbt(int paramInt) throws zzbbu {
    if (paramInt >= 0) {
      int i = this.limit;
      int j = this.pos;
      if (paramInt <= i - j) {
        this.pos = j + paramInt;
        return;
      } 
    } 
    if (paramInt < 0)
      throw zzbbu.zzadm(); 
    throw zzbbu.zzadl();
  }
}
