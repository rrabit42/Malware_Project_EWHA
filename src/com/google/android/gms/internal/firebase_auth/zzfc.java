package com.google.android.gms.internal.firebase_auth;

import java.io.IOException;
import java.util.List;
import java.util.Map;

final class zzfc implements zzjl {
  private final zzfa zzsv;
  
  private zzfc(zzfa paramzzfa) {
    this.zzsv = (zzfa)zzfv.zza(paramzzfa, "output");
    this.zzsv.zztq = this;
  }
  
  public static zzfc zza(zzfa paramzzfa) { return (paramzzfa.zztq != null) ? paramzzfa.zztq : new zzfc(paramzzfa); }
  
  public final void zza(int paramInt, double paramDouble) throws IOException { this.zzsv.zza(paramInt, paramDouble); }
  
  public final void zza(int paramInt, float paramFloat) throws IOException { this.zzsv.zza(paramInt, paramFloat); }
  
  public final void zza(int paramInt, long paramLong) throws IOException { this.zzsv.zza(paramInt, paramLong); }
  
  public final void zza(int paramInt, zzeh paramzzeh) throws IOException { this.zzsv.zza(paramInt, paramzzeh); }
  
  public final <K, V> void zza(int paramInt, zzgv<K, V> paramzzgv, Map<K, V> paramMap) throws IOException {
    for (Map.Entry entry : paramMap.entrySet()) {
      this.zzsv.zzf(paramInt, 2);
      this.zzsv.zzad(zzgu.zza(paramzzgv, entry.getKey(), entry.getValue()));
      zzgu.zza(this.zzsv, paramzzgv, entry.getKey(), entry.getValue());
    } 
  }
  
  public final void zza(int paramInt, Object paramObject) throws IOException {
    if (paramObject instanceof zzeh) {
      this.zzsv.zzb(paramInt, (zzeh)paramObject);
      return;
    } 
    this.zzsv.zza(paramInt, (zzhc)paramObject);
  }
  
  public final void zza(int paramInt, Object paramObject, zzhw paramzzhw) throws IOException { this.zzsv.zza(paramInt, (zzhc)paramObject, paramzzhw); }
  
  public final void zza(int paramInt, String paramString) throws IOException { this.zzsv.zza(paramInt, paramString); }
  
  public final void zza(int paramInt, List<String> paramList) throws IOException {
    boolean bool = paramList instanceof zzgl;
    byte b1 = 0;
    byte b2 = 0;
    if (bool) {
      zzgl zzgl = (zzgl)paramList;
      for (b1 = b2; b1 < paramList.size(); b1++) {
        Object object = zzgl.zzat(b1);
        if (object instanceof String) {
          this.zzsv.zza(paramInt, (String)object);
        } else {
          this.zzsv.zza(paramInt, (zzeh)object);
        } 
      } 
      return;
    } 
    while (b1 < paramList.size()) {
      this.zzsv.zza(paramInt, (String)paramList.get(b1));
      b1++;
    } 
  }
  
  public final void zza(int paramInt, List<?> paramList, zzhw paramzzhw) throws IOException {
    byte b;
    for (b = 0; b < paramList.size(); b++)
      zza(paramInt, paramList.get(b), paramzzhw); 
  }
  
  public final void zza(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzah(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzac(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzg(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzap(int paramInt) throws IOException { this.zzsv.zzf(paramInt, 3); }
  
  public final void zzaq(int paramInt) throws IOException { this.zzsv.zzf(paramInt, 4); }
  
  public final void zzb(int paramInt, long paramLong) throws IOException { this.zzsv.zzb(paramInt, paramLong); }
  
  public final void zzb(int paramInt, Object paramObject, zzhw paramzzhw) throws IOException {
    zzfa zzfa1 = this.zzsv;
    paramObject = (zzhc)paramObject;
    zzfa1.zzf(paramInt, 3);
    paramzzhw.zza(paramObject, zzfa1.zztq);
    zzfa1.zzf(paramInt, 4);
  }
  
  public final void zzb(int paramInt, List<zzeh> paramList) throws IOException {
    for (byte b = 0; b < paramList.size(); b++)
      this.zzsv.zza(paramInt, (zzeh)paramList.get(b)); 
  }
  
  public final void zzb(int paramInt, List<?> paramList, zzhw paramzzhw) throws IOException {
    byte b;
    for (b = 0; b < paramList.size(); b++)
      zzb(paramInt, paramList.get(b), paramzzhw); 
  }
  
  public final void zzb(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzak(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzaf(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzj(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzb(int paramInt, boolean paramBoolean) throws IOException { this.zzsv.zzb(paramInt, paramBoolean); }
  
  public final void zzc(int paramInt, long paramLong) throws IOException { this.zzsv.zzc(paramInt, paramLong); }
  
  public final void zzc(int paramInt, List<Long> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zze(((Long)paramList.get(paramInt)).longValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzb(((Long)paramList.get(paramInt)).longValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zza(paramInt, ((Long)paramList.get(i)).longValue());
      i++;
    } 
  }
  
  public final void zzd(int paramInt, List<Long> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzf(((Long)paramList.get(paramInt)).longValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzb(((Long)paramList.get(paramInt)).longValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zza(paramInt, ((Long)paramList.get(i)).longValue());
      i++;
    } 
  }
  
  public final void zze(int paramInt, List<Long> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzh(((Long)paramList.get(paramInt)).longValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzd(((Long)paramList.get(paramInt)).longValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzc(paramInt, ((Long)paramList.get(i)).longValue());
      i++;
    } 
  }
  
  public final void zzf(int paramInt, List<Float> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzb(((Float)paramList.get(paramInt)).floatValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zza(((Float)paramList.get(paramInt)).floatValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zza(paramInt, ((Float)paramList.get(i)).floatValue());
      i++;
    } 
  }
  
  public final void zzg(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzg(paramInt1, paramInt2); }
  
  public final void zzg(int paramInt, List<Double> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzb(((Double)paramList.get(paramInt)).doubleValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zza(((Double)paramList.get(paramInt)).doubleValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zza(paramInt, ((Double)paramList.get(i)).doubleValue());
      i++;
    } 
  }
  
  public final int zzgl() { return zzft.zze.zzxq; }
  
  public final void zzh(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzh(paramInt1, paramInt2); }
  
  public final void zzh(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzam(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzac(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzg(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzi(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzi(paramInt1, paramInt2); }
  
  public final void zzi(int paramInt, long paramLong) throws IOException { this.zzsv.zza(paramInt, paramLong); }
  
  public final void zzi(int paramInt, List<Boolean> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzt(((Boolean)paramList.get(paramInt)).booleanValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzs(((Boolean)paramList.get(paramInt)).booleanValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzb(paramInt, ((Boolean)paramList.get(i)).booleanValue());
      i++;
    } 
  }
  
  public final void zzj(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzj(paramInt1, paramInt2); }
  
  public final void zzj(int paramInt, long paramLong) throws IOException { this.zzsv.zzc(paramInt, paramLong); }
  
  public final void zzj(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzai(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzad(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzh(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzk(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzal(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzaf(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzj(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzl(int paramInt, List<Long> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzi(((Long)paramList.get(paramInt)).longValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzd(((Long)paramList.get(paramInt)).longValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzc(paramInt, ((Long)paramList.get(i)).longValue());
      i++;
    } 
  }
  
  public final void zzm(int paramInt, List<Integer> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzaj(((Integer)paramList.get(paramInt)).intValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzae(((Integer)paramList.get(paramInt)).intValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzi(paramInt, ((Integer)paramList.get(i)).intValue());
      i++;
    } 
  }
  
  public final void zzn(int paramInt, List<Long> paramList, boolean paramBoolean) throws IOException {
    int i = 0;
    int j = 0;
    if (paramBoolean) {
      this.zzsv.zzf(paramInt, 2);
      paramInt = 0;
      i = 0;
      while (paramInt < paramList.size()) {
        i += zzfa.zzg(((Long)paramList.get(paramInt)).longValue());
        paramInt++;
      } 
      this.zzsv.zzad(i);
      for (paramInt = j; paramInt < paramList.size(); paramInt++)
        this.zzsv.zzc(((Long)paramList.get(paramInt)).longValue()); 
      return;
    } 
    while (i < paramList.size()) {
      this.zzsv.zzb(paramInt, ((Long)paramList.get(i)).longValue());
      i++;
    } 
  }
  
  public final void zzq(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzj(paramInt1, paramInt2); }
  
  public final void zzr(int paramInt1, int paramInt2) throws IOException { this.zzsv.zzg(paramInt1, paramInt2); }
}
