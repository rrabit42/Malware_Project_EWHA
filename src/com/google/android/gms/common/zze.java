package com.google.android.gms.common;

import android.os.RemoteException;
import android.util.Log;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.zzi;
import com.google.android.gms.common.internal.zzj;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;

abstract class zze extends zzj {
  private int zzt;
  
  protected zze(byte[] paramArrayOfByte) {
    if (paramArrayOfByte.length == 25) {
      bool = true;
    } else {
      bool = false;
    } 
    Preconditions.checkArgument(bool);
    this.zzt = Arrays.hashCode(paramArrayOfByte);
  }
  
  protected static byte[] zza(String paramString) {
    try {
      return paramString.getBytes("ISO-8859-1");
    } catch (UnsupportedEncodingException paramString) {
      throw new AssertionError(paramString);
    } 
  }
  
  public boolean equals(Object paramObject) {
    if (paramObject != null) {
      if (!(paramObject instanceof zzi))
        return false; 
      try {
        paramObject = (zzi)paramObject;
        if (paramObject.zzc() != hashCode())
          return false; 
        paramObject = paramObject.zzb();
        if (paramObject == null)
          return false; 
        byte[] arrayOfByte = (byte[])ObjectWrapper.unwrap(paramObject);
        return Arrays.equals(getBytes(), arrayOfByte);
      } catch (RemoteException paramObject) {
        Log.e("GoogleCertificates", "Failed to get Google certificates from remote", paramObject);
      } 
    } 
    return false;
  }
  
  abstract byte[] getBytes();
  
  public int hashCode() { return this.zzt; }
  
  public final IObjectWrapper zzb() { return ObjectWrapper.wrap(getBytes()); }
  
  public final int zzc() { return hashCode(); }
}
