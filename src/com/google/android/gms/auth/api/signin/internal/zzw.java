package com.google.android.gms.auth.api.signin.internal;

import android.content.Context;
import android.os.Binder;
import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.common.api.GoogleApiClient;

public final class zzw extends zzr {
  private final Context mContext;
  
  public zzw(Context paramContext) { this.mContext = paramContext; }
  
  private final void zzl() {
    if (GooglePlayServicesUtil.isGooglePlayServicesUid(this.mContext, Binder.getCallingUid()))
      return; 
    int i = Binder.getCallingUid();
    StringBuilder stringBuilder = new StringBuilder(52);
    stringBuilder.append("Calling UID ");
    stringBuilder.append(i);
    stringBuilder.append(" is not Google Play services.");
    throw new SecurityException(stringBuilder.toString());
  }
  
  public final void zzj() {
    zzl();
    Storage storage = Storage.getInstance(this.mContext);
    null = storage.getSavedDefaultGoogleSignInAccount();
    GoogleSignInOptions googleSignInOptions = GoogleSignInOptions.DEFAULT_SIGN_IN;
    if (null != null)
      googleSignInOptions = storage.getSavedDefaultGoogleSignInOptions(); 
    googleApiClient = (new GoogleApiClient.Builder(this.mContext)).addApi(Auth.GOOGLE_SIGN_IN_API, googleSignInOptions).build();
    try {
      if (googleApiClient.blockingConnect().isSuccess())
        if (null != null) {
          Auth.GoogleSignInApi.revokeAccess(googleApiClient);
        } else {
          googleApiClient.clearDefaultAccountAndReconnect();
        }  
      return;
    } finally {
      googleApiClient.disconnect();
    } 
  }
  
  public final void zzk() {
    zzl();
    zzp.zzd(this.mContext).clear();
  }
}
