package android.support.design.widget;

import android.animation.Animator;
import android.animation.ValueAnimator;
import android.support.annotation.RestrictTo;
import android.util.StateSet;
import java.util.ArrayList;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class StateListAnimator {
  private final Animator.AnimatorListener animationListener = new Object(this);
  
  private Tuple lastMatch = null;
  
  ValueAnimator runningAnimator = null;
  
  private final ArrayList<Tuple> tuples = new ArrayList();
  
  private void cancel() {
    ValueAnimator valueAnimator = this.runningAnimator;
    if (valueAnimator != null) {
      valueAnimator.cancel();
      this.runningAnimator = null;
    } 
  }
  
  private void start(Tuple paramTuple) {
    this.runningAnimator = paramTuple.animator;
    this.runningAnimator.start();
  }
  
  public void addState(int[] paramArrayOfInt, ValueAnimator paramValueAnimator) {
    Tuple tuple = new Tuple(paramArrayOfInt, paramValueAnimator);
    paramValueAnimator.addListener(this.animationListener);
    this.tuples.add(tuple);
  }
  
  public void jumpToCurrentState() {
    ValueAnimator valueAnimator = this.runningAnimator;
    if (valueAnimator != null) {
      valueAnimator.end();
      this.runningAnimator = null;
    } 
  }
  
  public void setState(int[] paramArrayOfInt) {
    int i = this.tuples.size();
    byte b = 0;
    while (true) {
      if (b < i) {
        Tuple tuple1 = (Tuple)this.tuples.get(b);
        if (StateSet.stateSetMatches(tuple1.specs, paramArrayOfInt)) {
          Tuple tuple2 = tuple1;
          break;
        } 
        b++;
        continue;
      } 
      paramArrayOfInt = null;
      break;
    } 
    Tuple tuple = this.lastMatch;
    if (paramArrayOfInt == tuple)
      return; 
    if (tuple != null)
      cancel(); 
    this.lastMatch = paramArrayOfInt;
    if (paramArrayOfInt != null)
      start(paramArrayOfInt); 
  }
}
