package com.google.firebase.platforminfo;

import com.google.firebase.components.Component;
import com.google.firebase.components.ComponentContainer;
import java.util.Iterator;
import java.util.Set;

public class DefaultUserAgentPublisher implements UserAgentPublisher {
  private final GlobalLibraryVersionRegistrar gamesSDKRegistrar;
  
  private final String javaSDKVersionUserAgent;
  
  DefaultUserAgentPublisher(Set<LibraryVersion> paramSet, GlobalLibraryVersionRegistrar paramGlobalLibraryVersionRegistrar) {
    this.javaSDKVersionUserAgent = toUserAgent(paramSet);
    this.gamesSDKRegistrar = paramGlobalLibraryVersionRegistrar;
  }
  
  public static Component<UserAgentPublisher> component() { // Byte code:
    //   0: ldc com/google/firebase/platforminfo/UserAgentPublisher
    //   2: invokestatic builder : (Ljava/lang/Class;)Lcom/google/firebase/components/Component$Builder;
    //   5: ldc com/google/firebase/platforminfo/LibraryVersion
    //   7: invokestatic setOf : (Ljava/lang/Class;)Lcom/google/firebase/components/Dependency;
    //   10: invokevirtual add : (Lcom/google/firebase/components/Dependency;)Lcom/google/firebase/components/Component$Builder;
    //   13: invokestatic lambdaFactory$ : ()Lcom/google/firebase/components/ComponentFactory;
    //   16: invokevirtual factory : (Lcom/google/firebase/components/ComponentFactory;)Lcom/google/firebase/components/Component$Builder;
    //   19: invokevirtual build : ()Lcom/google/firebase/components/Component;
    //   22: areturn }
  
  private static String toUserAgent(Set<LibraryVersion> paramSet) {
    StringBuilder stringBuilder = new StringBuilder();
    Iterator iterator = paramSet.iterator();
    while (iterator.hasNext()) {
      LibraryVersion libraryVersion = (LibraryVersion)iterator.next();
      stringBuilder.append(libraryVersion.getLibraryName());
      stringBuilder.append('/');
      stringBuilder.append(libraryVersion.getVersion());
      if (iterator.hasNext())
        stringBuilder.append(' '); 
    } 
    return stringBuilder.toString();
  }
  
  public String getUserAgent() {
    if (this.gamesSDKRegistrar.getRegisteredVersions().isEmpty())
      return this.javaSDKVersionUserAgent; 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append(this.javaSDKVersionUserAgent);
    stringBuilder.append(' ');
    stringBuilder.append(toUserAgent(this.gamesSDKRegistrar.getRegisteredVersions()));
    return stringBuilder.toString();
  }
}
