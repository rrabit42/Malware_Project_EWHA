package androidx.work.impl.utils;

import android.arch.lifecycle.LiveData;
import android.content.Context;
import android.content.SharedPreferences;
import android.support.annotation.NonNull;
import android.support.annotation.RestrictTo;
import android.support.annotation.VisibleForTesting;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class Preferences {
  private static final String KEY_LAST_CANCEL_ALL_TIME_MS = "last_cancel_all_time_ms";
  
  private static final String KEY_RESCHEDULE_NEEDED = "reschedule_needed";
  
  private static final String PREFERENCES_FILE_NAME = "androidx.work.util.preferences";
  
  private Context mContext;
  
  private SharedPreferences mSharedPreferences;
  
  public Preferences(@NonNull Context paramContext) { this.mContext = paramContext; }
  
  @VisibleForTesting
  public Preferences(@NonNull SharedPreferences paramSharedPreferences) { this.mSharedPreferences = paramSharedPreferences; }
  
  private SharedPreferences getSharedPreferences() { // Byte code:
    //   0: ldc androidx/work/impl/utils/Preferences
    //   2: monitorenter
    //   3: aload_0
    //   4: getfield mSharedPreferences : Landroid/content/SharedPreferences;
    //   7: ifnonnull -> 24
    //   10: aload_0
    //   11: aload_0
    //   12: getfield mContext : Landroid/content/Context;
    //   15: ldc 'androidx.work.util.preferences'
    //   17: iconst_0
    //   18: invokevirtual getSharedPreferences : (Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   21: putfield mSharedPreferences : Landroid/content/SharedPreferences;
    //   24: aload_0
    //   25: getfield mSharedPreferences : Landroid/content/SharedPreferences;
    //   28: astore_1
    //   29: ldc androidx/work/impl/utils/Preferences
    //   31: monitorexit
    //   32: aload_1
    //   33: areturn
    //   34: astore_1
    //   35: ldc androidx/work/impl/utils/Preferences
    //   37: monitorexit
    //   38: aload_1
    //   39: athrow
    // Exception table:
    //   from	to	target	type
    //   3	24	34	finally
    //   24	32	34	finally
    //   35	38	34	finally }
  
  public long getLastCancelAllTimeMillis() { return getSharedPreferences().getLong("last_cancel_all_time_ms", 0L); }
  
  public LiveData<Long> getLastCancelAllTimeMillisLiveData() { return new LastCancelAllLiveData(getSharedPreferences()); }
  
  public boolean needsReschedule() { return getSharedPreferences().getBoolean("reschedule_needed", false); }
  
  public void setLastCancelAllTimeMillis(long paramLong) { getSharedPreferences().edit().putLong("last_cancel_all_time_ms", paramLong).apply(); }
  
  public void setNeedsReschedule(boolean paramBoolean) { getSharedPreferences().edit().putBoolean("reschedule_needed", paramBoolean).apply(); }
}
