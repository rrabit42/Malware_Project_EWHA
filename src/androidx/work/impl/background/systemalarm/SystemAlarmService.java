package androidx.work.impl.background.systemalarm;

import android.arch.lifecycle.LifecycleService;
import android.content.Intent;
import android.support.annotation.MainThread;
import android.support.annotation.RestrictTo;
import androidx.work.Logger;
import androidx.work.impl.utils.WakeLocks;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public class SystemAlarmService extends LifecycleService implements SystemAlarmDispatcher.CommandsCompletedListener {
  private static final String TAG = Logger.tagWithPrefix("SystemAlarmService");
  
  private SystemAlarmDispatcher mDispatcher;
  
  @MainThread
  public void onAllCommandsCompleted() {
    Logger.get().debug(TAG, "All commands completed in dispatcher", new Throwable[0]);
    WakeLocks.checkWakeLocks();
    stopSelf();
  }
  
  public void onCreate() {
    super.onCreate();
    this.mDispatcher = new SystemAlarmDispatcher(this);
    this.mDispatcher.setCompletedListener(this);
  }
  
  public void onDestroy() {
    super.onDestroy();
    this.mDispatcher.onDestroy();
  }
  
  public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2) {
    super.onStartCommand(paramIntent, paramInt1, paramInt2);
    if (paramIntent != null)
      this.mDispatcher.add(paramIntent, paramInt2); 
    return 3;
  }
}
